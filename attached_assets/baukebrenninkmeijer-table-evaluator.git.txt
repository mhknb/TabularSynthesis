Directory structure:
└── baukebrenninkmeijer-table-evaluator.git/
    ├── README.md
    ├── example_table_evaluator.ipynb
    ├── LICENSE
    ├── poetry.toml
    ├── pyproject.toml
    ├── .pre-commit-config.yaml
    ├── data/
    │   ├── fake_test_sample.csv
    │   ├── real_test_sample.csv
    │   └── tests/
    │       ├── fake_associations.parquet
    │       ├── fake_associations_theil.parquet
    │       ├── fake_test_sample_numerical_encoded.parquet
    │       ├── real_associations.parquet
    │       ├── real_associations_theil.parquet
    │       ├── real_test_sample_numerical_encoded.feather
    │       └── real_test_sample_numerical_encoded.parquet
    ├── docs/
    │   ├── make.bat
    │   ├── Makefile
    │   ├── requirements.txt
    │   └── source/
    │       ├── conf.py
    │       ├── index.rst
    │       ├── metrics.rst
    │       ├── plots.rst
    │       ├── table_evaluator.rst
    │       ├── utils.rst
    │       ├── _static/
    │       │   └── .gitkeep
    │       ├── _templates/
    │       │   └── .gitkeep
    │       └── images/
    ├── images/
    ├── notebooks/
    │   ├── Jupyter-UI.ipynb
    │   └── KL-divergence-test.ipynb
    ├── table_evaluator/
    │   ├── __init__.py
    │   ├── metrics.py
    │   ├── notebook.py
    │   ├── plots.py
    │   ├── table_evaluator.py
    │   ├── types.py
    │   └── utils.py
    ├── tests/
    │   ├── __init__.py
    │   ├── create_test_data.ipynb
    │   ├── metrics_test.py
    │   ├── sanity_check_example.ipynb
    │   ├── test_table_evaluator.py
    │   └── test_utils.py
    └── .github/
        ├── ISSUE_TEMPLATE/
        │   ├── bug_report.yaml
        │   └── feature_request.md
        └── workflows/
            ├── documentation-publish.yml
            ├── python-publish.yml
            └── run-tests.yml

================================================
File: README.md
================================================
# Table Evaluator
[![PyPI version](https://badge.fury.io/py/table-evaluator.svg)](https://badge.fury.io/py/table-evaluator)
[![Supported versions](https://img.shields.io/pypi/pyversions/table_evaluator.svg)](https://pypi.python.org/pypi/table_evaluator)
![Package deployment](https://github.com/Baukebrenninkmeijer/table-evaluator/actions/workflows/python-publish.yml/badge.svg?branch=master)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/table_evaluator)](https://pypistats.org/packages/table_evaluator)
[![Documentation](https://img.shields.io/badge/Documentation-%20-blue)](https://baukebrenninkmeijer.github.io/table-evaluator/)

TableEvaluator is a library to evaluate how similar a synthesized dataset is to a real data. In other words, it tries to give an indication into how real your fake data is. With the rise of GANs, specifically designed for tabular data, many applications are becoming possibilities. For industries like finance, healthcare and goverments, having the capacity to create high quality synthetic data that does **not** have the privacy constraints of normal data is extremely valuable. Since this field is this quite young and developing, I created this library to have a consistent evaluation method for your models.

## Installation
The package can be installed with
```
pip install table_evaluator
```

## Tests
The test can be run by cloning the repo and running:
```
pytest tests
```
if this does not work, the package might not currently be findable. In that case, please install it locally with:

```
pip install -e .
```

## Usage
**Please see the [example notebook](https://github.com/Baukebrenninkmeijer/table-evaluator/blob/master/example_table_evaluator.ipynb) for the most up-to-date examples. The README example is just that notebook as markdown.**

Start by importing the class
```Python
from table_evaluator import load_data, TableEvaluator
```

The package is used by having two DataFrames; one with the real data and one with the synthetic data. These are passed to the TableEvaluator on init.
The `utils.load_data` is nice to retrieve these dataframes from disk since it converts them to the same dtypes and columns after loading. However, any dataframe will do as long as they have the same columns and data types.

 Using the test data available in the `data` directory, we do:

```python
real, fake = load_data('data/real_test_sample.csv', 'data/fake_test_sample.csv')

```
which gives us two dataframes and specifies which columns should be treated as categorical columns.

```python
real.head()
```


| trans_id | account_id | trans_amount | balance_after_trans | trans_type | trans_operation            | trans_k_symbol    | trans_date |
|----------|------------|--------------|---------------------|------------|----------------------------|-------------------|------------|
| 951892   | 3245       | 3878.0       | 13680.0             | WITHDRAWAL | REMITTANCE_TO_OTHER_BANK   | HOUSEHOLD         | 2165       |
| 3547680  | 515        | 65.9         | 14898.6             | CREDIT     | UNKNOWN                    | INTEREST_CREDITED | 2006       |
| 1187131  | 4066       | 32245.0      | 57995.5             | CREDIT     | COLLECTION_FROM_OTHER_BANK | UNKNOWN           | 2139       |
| 531421   | 1811       | 3990.8       | 23324.9             | WITHDRAWAL | REMITTANCE_TO_OTHER_BANK   | LOAN_PAYMENT      | 892        |
| 37081    | 119        | 12100.0      | 36580.0             | WITHDRAWAL | WITHDRAWAL_IN_CASH         | UNKNOWN           | 654        |


```python
fake.head()
```

| trans_id | account_id | trans_amount | balance_after_trans | trans_type | trans_operation            | trans_k_symbol | trans_date |
|----------|------------|--------------|---------------------|------------|----------------------------|----------------|------------|
| 911598   | 3001       | 13619.0      | 92079.0             | CREDIT     | COLLECTION_FROM_OTHER_BANK | UNKNOWN        | 1885       |
| 377371   | 1042       | 4174.0       | 32470.0             | WITHDRAWAL | REMITTANCE_TO_OTHER_BANK   | HOUSEHOLD      | 1483       |
| 970113   | 3225       | 274.0        | 57608.0             | WITHDRAWAL | WITHDRAWAL_IN_CASH         | UNKNOWN        | 1855       |
| 450090   | 1489       | 301.0        | 36258.0             | CREDIT     | CREDIT_IN_CASH             | UNKNOWN        | 885        |
| 1120409  | 3634       | 6303.0       | 50975.0             | WITHDRAWAL | REMITTANCE_TO_OTHER_BANK   | HOUSEHOLD      | 1211       |


```Python
cat_cols = ['trans_type', 'trans_operation', 'trans_k_symbol']
```

If we do not specify categorical columns when initializing the TableEvaluator, it will consider all columns with more than 50 unique values a continuous column and anything with less a categorical columns.

Then we create the TableEvaluator object:
```Python
table_evaluator = TableEvaluator(real, fake, cat_cols=cat_cols)
```

It's nice to start with some plots to get a feel for the data and how they correlate. The test samples contain only 1000 samples, which is why the cumulative sum plots are not very smooth.

```python
table_evaluator.visual_evaluation()
```


![png](images/output_7_0.png)



![png](images/output_7_1.png)



![png](images/output_7_2.png)



![png](images/output_7_3.png)


The `evaluate` method gives us the most complete idea of how close the data sets are together.

```python
table_evaluator.evaluate(target_col='trans_type')
```


    Correlation metric: pearsonr

    Classifier F1-scores:
                                          real   fake
    real_data_LogisticRegression_F1     0.8200 0.8150
    real_data_RandomForestClassifier_F1 0.9800 0.9800
    real_data_DecisionTreeClassifier_F1 0.9600 0.9700
    real_data_MLPClassifier_F1          0.3500 0.6850
    fake_data_LogisticRegression_F1     0.7800 0.7650
    fake_data_RandomForestClassifier_F1 0.9300 0.9300
    fake_data_DecisionTreeClassifier_F1 0.9300 0.9400
    fake_data_MLPClassifier_F1          0.3600 0.6200

    Miscellaneous results:
                                      Result
    Column Correlation Distance RMSE          0.0399
    Column Correlation distance MAE           0.0296
    Duplicate rows between sets (real/fake)   (0, 0)
    nearest neighbor mean                     0.5655
    nearest neighbor std                      0.3726

    Results:
                                                    Result
    basic statistics                                0.9940
    Correlation column correlations                 0.9904
    Mean Correlation between fake and real columns  0.9566
    1 - MAPE Estimator results                      0.7843
    1 - MAPE 5 PCA components                       0.9138
    Similarity Score                                0.9278

 The similarity score is an aggregate metric of the five other metrics in the section with results. Additionally, the F1/RMSE scores are printed since they give valuable insights into the strengths and weaknesses of some of these models. Lastly, some miscellaneous results are printed, like the nearest neighbor distance between each row in the fake dataset and the closest row in the real dataset. This provides insight into the privacy retention capability of the model. Note that the mean and standard deviation of nearest neighbor is limited to 20k rows, due to time and hardware limitations.


## Full Documentation
Please see the full documentation on [https://baukebrenninkmeijer.github.io/table-evaluator/](https://baukebrenninkmeijer.github.io/table-evaluator/).

## Motivation
To see the motivation for my decisions, please have a look at my master thesis, found at the [Radboud University](https://www.ru.nl/publish/pages/769526/z04_master_thesis_brenninkmeijer.pdf)

If you have any tips or suggestions, please contact send me on email.



================================================
File: example_table_evaluator.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
# Example Notebook: How to analyse synthetic data
This notebook will show, fairly compact, how to analyse the data that you have someone obtained. 
"""

%load_ext autoreload
%autoreload 2

from table_evaluator import TableEvaluator, load_data

real, fake = load_data('data/real_test_sample.csv', 'data/fake_test_sample.csv')

real.head()
# Output:
#      trans_id  account_id  trans_amount  balance_after_trans  trans_type  \

#   0    951892        3245        3878.0              13680.0  WITHDRAWAL   

#   1   3547680         515          65.9              14898.6      CREDIT   

#   2   1187131        4066       32245.0              57995.5      CREDIT   

#   3    531421        1811        3990.8              23324.9  WITHDRAWAL   

#   4     37081         119       12100.0              36580.0  WITHDRAWAL   

#   

#                 trans_operation     trans_k_symbol  trans_date  

#   0    REMITTANCE_TO_OTHER_BANK          HOUSEHOLD        2165  

#   1                     UNKNOWN  INTEREST_CREDITED        2006  

#   2  COLLECTION_FROM_OTHER_BANK            UNKNOWN        2139  

#   3    REMITTANCE_TO_OTHER_BANK       LOAN_PAYMENT         892  

#   4          WITHDRAWAL_IN_CASH            UNKNOWN         654  

fake.head()
# Output:
#      trans_id  account_id  trans_amount  balance_after_trans  trans_type  \

#   0    911598        3001       13619.0              92079.0      CREDIT   

#   1    377371        1042        4174.0              32470.0  WITHDRAWAL   

#   2    970113        3225         274.0              57608.0  WITHDRAWAL   

#   3    450090        1489         301.0              36258.0      CREDIT   

#   4   1120409        3634        6303.0              50975.0  WITHDRAWAL   

#   

#                 trans_operation trans_k_symbol  trans_date  

#   0  COLLECTION_FROM_OTHER_BANK        UNKNOWN        1885  

#   1    REMITTANCE_TO_OTHER_BANK      HOUSEHOLD        1483  

#   2          WITHDRAWAL_IN_CASH        UNKNOWN        1855  

#   3              CREDIT_IN_CASH        UNKNOWN         885  

#   4    REMITTANCE_TO_OTHER_BANK      HOUSEHOLD        1211  

cat_cols = ['trans_type', 'trans_operation', 'trans_k_symbol']

evaluator = TableEvaluator(real, fake, cat_cols=cat_cols)

"""
### We can do a numerical analysis
"""

evaluator.evaluate(target_col='trans_type', notebook=False, verbose=False)
# Output:
#   

#   Classifier F1-scores and their Jaccard similarities::

#                                f1_real  f1_fake  jaccard_similarity

#   index                                                            

#   DecisionTreeClassifier_fake   0.9450   0.9500              0.8957

#   DecisionTreeClassifier_real   0.9800   0.9450              0.8779

#   LogisticRegression_fake       0.8100   0.8000              0.9324

#   LogisticRegression_real       0.8500   0.8450              0.9704

#   MLPClassifier_fake            0.6250   0.6500              0.3652

#   MLPClassifier_real            0.6600   0.6700              0.3378

#   RandomForestClassifier_fake   0.9650   0.9600              0.9900

#   RandomForestClassifier_real   0.9850   0.9850              1.0000

#   

#   Privacy results:

#                                            result

#   Duplicate rows between sets (real/fake)  (0, 0)

#   nearest neighbor mean                    0.5655

#   nearest neighbor std                     0.3726

#   

#   Miscellaneous results:

#                                     Result

#   Column Correlation Distance RMSE  0.0399

#   Column Correlation distance MAE   0.0296

#   

#   Results:

#                                                   result

#   Basic statistics                                0.9940

#   Correlation column correlations                 0.9904

#   Mean Correlation between fake and real columns  0.9566

#   1 - MAPE Estimator results                      0.9851

#   Similarity Score                                0.9815


"""
### But we can also do a visual analysis
"""

evaluator.visual_evaluation()
# Output:
#   <Figure size 1000x500 with 2 Axes>
#   <Figure size 1600x1200 with 8 Axes>
#   <Figure size 1600x1800 with 9 Axes>
#   <Figure size 2400x700 with 6 Axes>
#   <Figure size 1200x600 with 2 Axes>



================================================
File: LICENSE
================================================
MIT License

Copyright (c) 2024 Bauke Brenninkmeijer

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


================================================
File: poetry.toml
================================================
[virtualenvs]
create = false
prefer-active-python=true


================================================
File: pyproject.toml
================================================
[tool.poetry]
name = "table-evaluator"
version = "1.7.2post1"
description = "A package to evaluate how close a synthetic data set is to real data."
authors = ["Bauke Brenninkmeijer <bauke.brenninkmeijer@gmail.com>"]
license = "MIT"
readme = "README.md"
repository ="https://github.com/Baukebrenninkmeijer/Table-Evaluator"
documentation="https://baukebrenninkmeijer.github.io/table-evaluator/index.html"
keywords=['Table-evaluation', 'synthetic-data', 'data-generation', 'data', 'generation', 'data-evaluation']
classifiers = [
        'Programming Language :: Python',
        'Programming Language :: Python :: 3.10',
        'Programming Language :: Python :: 3.11',
        'Programming Language :: Python :: 3.12',
        'Programming Language :: Python :: 3 :: Only',
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = "^3.10"
pyarrow = "^17.0.0"
scikit-learn = "^1.5.1"
tqdm = "^4.66.5"
matplotlib = "^3.9.2"
numpy = "1.26.4"
seaborn = "^0.13.2"
pandas = "^2.0.0"
scipy = "1.11.4"
dython = "0.7.7"
pre-commit = "^3.8.0"
ruff = "^0.6.9"
ipython = "^8.28.0"

[tool.poetry.group.dev.dependencies]
pytest-mock = "^3.14.0"
ipykernel = "^6.29.5"
ipython = "^8.28.0"
m2r2 = "^0.3.3.post2"
sphinx-rtd-theme = "^2.0.0"
pytest = "^8.3.2"
ipywidgets = "^8.1.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 120
lint.select = [
    "I001", # Isort rules
    "N",
    "A",    # prevent using keywords that clobber python builtins
    "B",    # bugbear: security warnings
    "E",    # pycodestyle
    "F",    # pyflakes
    "ISC",  # implicit string concatenation
    "UP",   # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules
    ]
lint.ignore = ["B018", "B023"]
src = ["table_evaluator"]
format.quote-style = "single"

[tool.mypy]
exclude = [
]
python_version = "3.10"

[[tool.mypy.overrides]]
module = [""]
ignore_missing_imports = true



================================================
File: .pre-commit-config.yaml
================================================
repos: 
  - repo: https://github.com/python-poetry/poetry
    rev: '1.8.1'
    hooks:
    -   id: poetry-check
    -   id: poetry-lock

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.4
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format
  - repo: local
    hooks: 
    - id: generate_docs
      name: generate docs
      entry: sphinx-build
      args: [-M, html, docs/source, docs/build]
      language: python
      pass_filenames: false


================================================
File: data/fake_test_sample.csv
================================================
trans_id,account_id,trans_amount,balance_after_trans,trans_type,trans_operation,trans_k_symbol,trans_date
911598,3001,13619.0,92079.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1885
377371,1042,4174.0,32470.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1483
970113,3225,274.0,57608.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1855
450090,1489,301.0,36258.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,885
1120409,3634,6303.0,50975.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1211
960462,3178,2081.0,29249.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1062
3605389,2113,79.0,36532.0,CREDIT,UNKNOWN,INTEREST_CREDITED,877
169944,337,-23.0,31716.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,854
3606656,2178,76.0,35920.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2106
1153762,3814,28773.0,61030.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1552
466160,1550,-428.0,30115.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,2071
947622,3152,30953.0,118380.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1482
576822,1898,607.0,19735.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1890
3589362,1115,54.0,22844.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1497
296960,760,14454.0,36091.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,809
3656461,3735,51.0,18418.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1511
149704,284,1330.0,102269.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1918
83588,2150,26623.0,52202.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,800
270001,649,6.0,47434.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,481
152712,278,2453.0,28041.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,664
264290,682,1359.0,20263.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1376
159966,324,-8.0,33413.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,860
864716,2704,6.0,18995.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,568
107734,97,221.0,29594.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,277
365616,1006,310.0,31674.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1222
963400,3163,1515.0,22718.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2084
132564,150,2729.0,67656.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1369
280218,707,1748.0,13367.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1491
1054557,3498,479.0,32186.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,894
1219929,3939,-18.0,22930.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1521
386321,1076,6100.0,36767.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1235
2472516,7704,-19.0,40650.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1222
3555670,544,34.0,23134.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1464
861033,2675,5093.0,93024.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1481
1623841,5369,2654.0,22906.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2013
3604431,2044,37.0,19881.0,CREDIT,UNKNOWN,INTEREST_CREDITED,527
560872,1867,10.0,21415.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,895
226812,537,3600.0,32542.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1216
824257,2556,728.0,12070.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1338
2019612,6455,46814.0,51270.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1944
516752,1700,74.0,11086.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2011
423961,1221,1872.0,74605.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2077
459584,1514,-9.0,16437.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2025
3566323,874,77.0,36423.0,CREDIT,UNKNOWN,INTEREST_CREDITED,804
440035,1235,11144.0,53619.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,847
3605470,2065,104.0,30978.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2029
1158650,3800,1444.0,43966.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1918
1155326,3765,-18.0,14600.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1110
3612362,2185,45.0,18563.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2068
1566318,4975,1198.0,19352.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1188
384000,1101,8366.0,24668.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1578
819149,1450,1376.0,13774.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1870
241786,555,4526.0,17804.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1877
203050,490,70.0,18867.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1505
3223135,10305,9357.0,32544.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1915
1134135,3717,1687.0,62997.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2108
1065797,3512,1611.0,17868.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1202
288982,720,-14.0,21876.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2034
410973,1194,34.0,45409.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2054
1028020,3371,-46.0,29758.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1415
1067475,3523,3705.0,32542.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,912
3580081,1008,24.0,23845.0,CREDIT,UNKNOWN,INTEREST_CREDITED,825
803409,2494,20164.0,106234.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1504
3559630,456,116.0,54287.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2064
230141,513,2255.0,67168.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1494
1147601,3769,1802.0,44097.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1800
963316,3159,1464.0,19650.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1125
526449,1732,-462.0,20279.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1047
1228611,4170,5640.0,41596.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1124
704973,2108,9943.0,45385.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2043
838091,2610,-26.0,28384.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2092
929094,3057,-18.0,12940.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1211
294781,817,13557.0,51205.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1190
1163295,3842,3657.0,55332.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2056
564975,1867,8172.0,32121.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2051
254892,706,718.0,66084.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1811
859187,2728,9976.0,32945.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1171
3560379,614,187.0,64372.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1217
832716,2781,7651.0,34052.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1099
288175,737,279.0,68252.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1869
1079168,3521,869.0,14138.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,358
1910984,6075,6083.0,28598.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1184
3626818,1576,53.0,33031.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1557
830922,2589,3.0,45918.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1626
2862514,9439,-17.0,58137.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2017
118159,221,1660.0,13673.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1963
1232350,3977,2109.0,76846.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2080
231052,528,13404.0,40214.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1159
439816,1246,17313.0,39282.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,487
2800705,9293,-45.0,62581.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1265
1962517,6286,330.0,32285.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1500
961664,3207,-8.0,28697.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1591
910197,3011,61.0,14833.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1933
566970,1866,9.0,32588.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2007
530899,1758,3261.0,15154.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1625
560653,1860,-8.0,45241.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2031
177193,361,3423.0,25318.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,848
493246,1636,3342.0,11026.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1181
1079745,3556,28575.0,64358.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,920
3553859,251,51.0,19563.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1648
1137628,3750,-200.0,32527.0,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,2057
3644184,4146,26.0,34462.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2114
132463,240,-11.0,95051.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1902
1008143,3320,0.0,30718.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1220
3478611,3784,75.0,16754.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1583
948542,3163,4523.0,79865.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,2032
1572879,5370,30743.0,52949.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,480
3591549,1218,188.0,67968.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1809
528503,1755,2207.0,45052.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1893
3654892,5479,52.0,36425.0,CREDIT,UNKNOWN,INTEREST_CREDITED,508
103336,132,585.0,70149.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2010
1155133,3797,1702.0,45563.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,828
1041952,3513,994.0,20141.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1072
499198,1648,6576.0,49696.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2003
3587590,1093,61.0,35551.0,CREDIT,UNKNOWN,INTEREST_CREDITED,843
1115328,3701,139.0,48849.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1519
440451,1467,2166.0,23119.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,799
807092,2486,4394.0,12685.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1496
523356,1726,10266.0,15476.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1668
1226408,3939,26922.0,107376.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,349
3655880,3762,56.0,38022.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1234
561972,1825,4593.0,30072.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2030
352720,957,5937.0,18227.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1888
347858,936,2571.0,29528.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1177
848684,2600,1163.0,30643.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2045
699555,2152,11509.0,51753.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1219
1375102,4397,3981.0,9581.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1583
404803,1154,3518.0,67188.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1408
92006,1994,-16.0,20112.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1239
396076,1102,-118.0,24945.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,939
892896,2952,3279.0,13238.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1997
356197,979,1483.0,31468.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1635
899732,2983,2395.0,51719.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1523
511386,1752,3866.0,23818.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2080
872452,2870,17239.0,45525.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1100
3570253,924,570.0,62863.0,CREDIT,UNKNOWN,INTEREST_CREDITED,433
206787,527,10848.0,21144.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1471
158997,252,2070.0,29119.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1614
1029265,3505,28205.0,71946.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,468
3589227,1273,41.0,18551.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1909
3462859,11294,64.0,26604.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,HOUSEHOLD,1451
496826,1639,594.0,30335.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1926
186062,385,5320.0,44323.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,927
206784,398,-8.0,36174.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1431
306873,881,10553.0,67964.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1966
826747,2572,210.0,27415.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,648
235257,517,4719.0,27779.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1435
3495454,3817,27.0,21879.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1522
185787,360,5402.0,48399.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1499
357845,960,81.0,32996.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,794
735599,2293,-321.0,57822.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1946
953526,3157,-8.0,20015.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1595
2917534,9488,2137.0,44057.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1531
359668,968,1603.0,12992.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1403
3567899,720,138.0,48708.0,CREDIT,UNKNOWN,INTEREST_CREDITED,695
3407025,11367,6.0,42979.0,UNKNOWN,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1275
3253155,10585,51.0,12732.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,353
194161,411,4295.0,15136.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1792
236736,603,11772.0,46449.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1537
3438116,11309,2710.0,48901.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,757
3634640,3116,100.0,37440.0,CREDIT,UNKNOWN,INTEREST_CREDITED,432
331296,871,963.0,12071.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1895
1225924,4017,35244.0,57779.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1070
3607148,2062,105.0,45832.0,CREDIT,UNKNOWN,INTEREST_CREDITED,534
3655113,5354,24.0,12471.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1869
3628992,2377,51.0,20977.0,CREDIT,UNKNOWN,INTEREST_CREDITED,848
262460,642,998.0,50219.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1168
748621,2293,4233.0,46458.0,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,2069
356965,1011,1464.0,14365.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1444
551127,1814,5262.0,15944.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1421
511877,1667,280.0,56001.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,423
807254,2512,85.0,17377.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1065
549119,1825,1309.0,15733.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,472
243426,552,11016.0,38484.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1165
190572,385,13502.0,69184.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,228
1203052,3922,21271.0,52404.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1470
1163834,3789,3026.0,19743.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1818
794772,2466,1121.0,51887.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1931
423413,1226,25704.0,106634.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1540
3669424,6685,181.0,33277.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1593
3026722,9860,2043.0,12227.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1573
1153851,3770,12097.0,32853.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,463
3462644,1944,85.0,16496.0,CREDIT,UNKNOWN,INTEREST_CREDITED,246
994537,3272,-158.0,31544.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1251
560973,1854,8005.0,10767.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,2037
504927,1644,4608.0,69964.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1481
551681,1826,1719.0,30566.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2021
901678,2993,27233.0,67562.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,784
752437,2329,-3.0,20962.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2026
1154574,3733,1846.0,72571.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2075
111901,185,3514.0,22200.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,723
517995,1729,-422.0,32338.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1482
353212,981,712.0,30682.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1532
3567380,2675,132.0,37061.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2056
1261854,4219,16308.0,48180.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1582
1167894,3832,2993.0,78448.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,795
775665,2395,-18.0,32743.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2069
358138,984,169.0,13671.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1816
3577725,1005,49.0,22017.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1870
961367,3180,1561.0,24063.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2037
482711,1591,2079.0,24639.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1189
532524,1792,3465.0,43923.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1556
358783,990,-18.0,74152.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1221
717864,2217,-12.0,54807.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1868
336511,884,9511.0,35832.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,203
3644450,3364,80.0,36254.0,CREDIT,UNKNOWN,INTEREST_CREDITED,907
1078964,1551,2366.0,12952.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,423
1287186,4297,-3.0,47402.0,UNKNOWN,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2036
789768,2428,5717.0,28651.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1475
3608187,2102,69.0,32114.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1274
3587306,1109,42.0,23693.0,CREDIT,UNKNOWN,INTEREST_CREDITED,283
1058743,3492,2802.0,19971.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1504
1171749,3650,3223.0,15311.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1064
791168,2465,5170.0,35577.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1640
1174069,3865,-1.0,33650.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1592
135444,204,1013.0,47655.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1779
709405,2186,12083.0,47055.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1212
280543,700,18487.0,48672.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1197
824453,2478,3799.0,14456.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2058
1288514,4281,5248.0,47745.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1505
843749,2622,60.0,65743.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2002
498284,1626,-5.0,22813.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,724
555584,1859,1091.0,30984.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1426
745817,2301,-18.0,15983.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1645
726386,2234,4058.0,12910.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1196
3563729,640,109.0,47466.0,CREDIT,UNKNOWN,INTEREST_CREDITED,818
300444,881,13588.0,46841.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1909
3273626,10636,11356.0,57526.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,392
391560,1128,8199.0,39610.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1461
958292,3169,5907.0,51503.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,851
3459452,1925,39.0,14977.0,CREDIT,UNKNOWN,INTEREST_CREDITED,676
553477,1847,-10.0,19853.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1206
2253877,7124,15371.0,48487.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,201
529136,1749,679.0,46105.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1004
95032,369,14567.0,55085.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,872
3557236,281,19.0,11605.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1461
317851,820,5524.0,14661.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2028
1244638,6558,2265.0,34171.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1590
771188,2403,129.0,29676.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2002
237238,559,1372.0,64776.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,467
899889,2930,4553.0,12700.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,748
3618005,2475,113.0,53407.0,CREDIT,UNKNOWN,INTEREST_CREDITED,881
115025,135,1504.0,52157.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1851
1023169,3353,1267.0,17768.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1520
730424,2242,11269.0,25072.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1979
3466975,3984,63.0,22483.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1884
470241,1608,-12.0,51772.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1525
968730,3224,1907.0,33810.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1215
979853,3247,295.0,10514.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2071
2708029,8956,2693.0,56107.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2007
2608159,8317,8033.0,32943.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1167
958162,3159,5311.0,55994.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2040
3596942,1286,90.0,42870.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1876
181900,373,-25.0,15548.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1582
1096010,3649,3064.0,23781.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1983
305972,749,2822.0,28865.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,937
1263832,4202,33571.0,112379.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,399
123707,203,1897.0,90057.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1806
3603696,1859,89.0,31661.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2068
356359,962,879.0,14810.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1499
320694,912,10704.0,46206.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1986
564184,1867,-3.0,46946.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1517
947993,3075,-364.0,31875.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,2028
3553208,245,40.0,30788.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1459
893323,2962,-7.0,32608.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1587
1141493,1881,2496.0,13506.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1486
209735,476,1052.0,31833.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1980
142102,182,-16.0,63967.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,641
1197264,3897,9990.0,46134.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1892
1083649,3572,1209.0,11817.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1624
176157,403,58.0,31814.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1536
796340,2477,6866.0,22589.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1819
172856,390,1243.0,15154.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,486
461233,1507,929.0,14425.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1476
3479248,3984,150.0,48311.0,CREDIT,UNKNOWN,INTEREST_CREDITED,305
2525272,7985,-23.0,14572.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2098
779327,2390,5218.0,19557.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,456
458145,1543,4652.0,56605.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1500
473108,1563,4886.0,22452.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1279
1056837,3607,-17.0,19530.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1029
584525,1925,5258.0,19463.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1793
155256,303,8017.0,53349.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1492
164290,303,-12.0,28808.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,518
1146136,3789,-19.0,45067.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1501
435805,1450,38.0,20828.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1200
713147,2219,32.0,12905.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,589
266985,676,5254.0,17082.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1494
2502869,7308,34323.0,70764.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1442
1166777,3764,2171.0,12474.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1848
680285,2058,2050.0,39249.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1876
270849,678,190.0,15625.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1228
463655,1546,18560.0,70774.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1087
687789,2113,16083.0,48721.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2038
1079855,3540,-25.0,57652.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,895
3096832,10122,-11.0,36339.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1302
790840,2438,2139.0,20857.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1491
3613095,2280,192.0,61477.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2014
401161,1151,19298.0,47376.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1552
2756262,8799,16440.0,100181.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1418
285260,697,363.0,12337.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1847
85395,2010,10849.0,45278.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2017
535380,1783,27.0,23628.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1206
1105449,3660,8.0,57299.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,657
290194,734,1922.0,17115.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1244
155553,366,3454.0,46914.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1238
198205,365,-32.0,14948.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1080
3624890,1732,22.0,18067.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1423
66841,1986,541.0,14579.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1978
424400,1220,5072.0,31617.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,458
3667776,4504,46.0,30404.0,CREDIT,UNKNOWN,INTEREST_CREDITED,413
3477328,3917,117.0,37859.0,CREDIT,UNKNOWN,INTEREST_CREDITED,502
970559,3201,4159.0,90537.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1458
3573577,871,29.0,22467.0,CREDIT,UNKNOWN,INTEREST_CREDITED,244
338499,983,4.0,34661.0,CREDIT,UNKNOWN,UNKNOWN,1207
816299,2542,3821.0,12007.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1967
3644394,3317,87.0,22082.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1905
133822,238,19382.0,36395.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,213
1055767,3569,-5.0,15910.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1530
3660005,3270,162.0,53983.0,CREDIT,UNKNOWN,INTEREST_CREDITED,841
3507075,8518,14.0,12536.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1496
562664,1841,623.0,30363.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1460
142853,285,-15.0,26477.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2075
333686,902,68.0,14329.0,CREDIT,REMITTANCE_TO_OTHER_BANK,UNKNOWN,653
287951,689,-14.0,45575.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,851
2618143,8428,-59.0,80695.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1873
863494,2685,-8.0,32801.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1567
694370,2128,11046.0,14171.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2067
214605,485,3009.0,67828.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1810
1737689,5537,12641.0,60111.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1250
291551,728,3049.0,29266.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1961
408670,1160,2190.0,31654.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,758
725658,2237,1516.0,29695.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1513
3654750,2748,-3.0,14371.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,811
381636,1101,-5.0,32231.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1640
3475324,759,36.0,12510.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2079
3608738,2174,73.0,33801.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1889
1009602,3385,10054.0,93873.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,284
281142,678,2119.0,17146.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1211
277599,2575,1787.0,14911.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1672
2863972,9490,13.0,66985.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1222
374393,1023,302.0,15425.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1559
3596813,1865,71.0,30473.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2042
265276,671,-752.0,26782.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2079
3306567,10750,758.0,26266.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1571
3640795,5578,124.0,52714.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1212
3576798,958,73.0,50514.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1928
942458,3102,2110.0,13402.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,604
785255,2219,-5.0,27328.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2003
915322,3013,267.0,21971.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,265
3641777,3265,3613.0,109567.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1858
339841,897,3614.0,19785.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2007
1135404,3751,-6.0,24431.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1979
156283,319,775.0,20805.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,739
128309,220,2486.0,53390.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1433
665095,2044,4848.0,26843.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1184
3593468,1174,87.0,23869.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1179
104783,131,1458.0,53513.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1399
901518,3002,13001.0,62691.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1808
373733,1075,-13.0,47294.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1484
465287,1534,793.0,65212.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1988
3478090,474,27.0,18497.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1444
1049087,3454,766.0,20675.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1194
575034,1883,5719.0,13026.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,278
667948,2067,2603.0,66432.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1863
712484,2311,2357.0,17487.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1428
332604,888,-25.0,58002.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2062
364268,1004,6348.0,20287.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1197
3606048,2116,33.0,23675.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1625
144007,302,4898.0,47444.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1898
1511410,4692,2178.0,47321.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1440
3028654,10108,12779.0,18449.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1838
1220139,4054,24960.0,80236.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1849
991540,3284,-25.0,14705.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1521
565961,1876,17493.0,30775.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,340
849767,2656,1003.0,42153.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1514
863340,2811,4981.0,50601.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1858
1207258,3814,5336.0,13114.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,793
3555447,367,123.0,48792.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1415
2308118,6983,6708.0,19833.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1199
3606482,2111,205.0,74917.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1454
701183,2148,28508.0,63542.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1412
106114,176,3422.0,17082.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1959
1268347,4204,30398.0,51819.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1811
344035,903,-28.0,14103.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1325
563173,1867,12.0,24061.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1567
353463,993,31629.0,111605.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1550
319342,844,14299.0,43645.0,WITHDRAWAL,CREDIT_IN_CASH,UNKNOWN,1940
2023714,6667,4984.0,32439.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1549
3485102,6543,80.0,36896.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1612
3507458,4164,96.0,39689.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2078
652721,2001,-9.0,47760.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1653
954900,3142,26591.0,87915.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1478
3555909,345,95.0,90403.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1455
885478,2884,3546.0,20561.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1921
356505,949,4162.0,15871.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2040
510474,1670,3166.0,46498.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1269
716520,2198,3281.0,17379.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2053
280455,733,182.0,13300.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1661
3271761,10797,8461.0,32535.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,2055
553432,1835,-628.0,28346.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1906
580147,1919,9856.0,30132.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1179
109879,198,13602.0,36930.0,UNKNOWN,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1481
3536448,4290,31.0,11059.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2057
473563,1585,-15.0,64515.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2049
3598695,3143,96.0,34079.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2099
3602663,2096,141.0,48061.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1592
3485600,2057,37.0,20659.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,SANCTION_INTEREST,475
1812288,6079,-7.0,16705.0,UNKNOWN,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1970
3527422,2543,-709.0,109626.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1693
902424,2948,-160.0,20333.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1168
385351,1077,7352.0,68504.0,CREDIT,UNKNOWN,UNKNOWN,795
1287865,4292,19045.0,71993.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1481
724339,2238,14433.0,64766.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2010
371259,1015,562.0,27513.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,479
576099,1904,3219.0,31293.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2003
495376,1612,4025.0,43006.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1984
711728,2164,5034.0,33164.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,568
741449,2258,627.0,20546.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1960
404653,1137,3146.0,17473.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2030
1121505,3761,-305.0,20191.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,747
3116883,10227,12539.0,33626.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1788
3657739,3757,79.0,45729.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1208
3644554,4346,62.0,34242.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1961
1074597,3594,28504.0,79046.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2006
123372,279,28887.0,113475.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1580
1175862,3783,1768.0,30906.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2007
1297303,4306,560.0,25507.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2010
868155,2875,409.0,15507.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1174
167318,435,116.0,29336.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2015
970429,3268,12993.0,56751.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2008
1109251,3673,-11.0,54607.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2074
664497,2020,1084.0,30796.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1550
3647325,3578,87.0,35899.0,CREDIT,UNKNOWN,INTEREST_CREDITED,814
3660888,3758,65.0,19419.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1853
1115038,3679,2638.0,66295.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,261
3593457,728,32.0,14572.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1217
350290,979,37897.0,67023.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,916
434505,1250,30.0,23215.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1694
3551108,460,81.0,43713.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1521
661428,2023,4619.0,20922.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1582
924832,3041,15782.0,33498.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2059
1073593,3532,18793.0,48386.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1676
355047,944,17840.0,101933.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,254
3177358,10424,9128.0,36856.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,760
3505335,9675,90.0,36128.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1092
750617,2281,3427.0,38850.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,244
587646,1922,24274.0,103667.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,761
2542407,8202,1866.0,76029.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1573
3644331,3421,98.0,32031.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1433
342622,940,6141.0,28808.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1253
1461585,4478,9961.0,17293.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1429
3545381,191,68.0,25282.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1416
790381,2478,7096.0,51075.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1819
2279350,7321,29780.0,70070.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1811
3561912,627,40.0,51340.0,CREDIT,UNKNOWN,INTEREST_CREDITED,453
3679936,7969,170.0,47668.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2036
185867,454,10213.0,25506.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1544
2416415,7623,-8.0,52766.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1222
3603745,2150,65.0,29575.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1466
3606487,2044,149.0,47786.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2028
546366,1800,-268.0,11016.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1436
3256613,10539,2117.0,64718.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1904
3461710,2220,86.0,18880.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1942
193198,616,3584.0,31553.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,900
458650,1519,3633.0,44199.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,753
311616,820,1049.0,44936.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1483
176599,395,29982.0,58147.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1476
725106,2228,1472.0,26381.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1435
1426778,6149,11825.0,56731.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1815
1031184,3421,7429.0,24129.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1567
1684388,5458,-14.0,22118.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1539
3649822,4403,35.0,56881.0,CREDIT,UNKNOWN,INTEREST_CREDITED,893
1060179,3514,7099.0,17057.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1443
212371,432,1241.0,12899.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1539
829771,2535,1680.0,31315.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1460
517496,1699,3638.0,32764.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,475
1118160,3705,14294.0,96957.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1567
671233,2077,3790.0,46922.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2082
520260,1720,1302.0,59418.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2094
87783,123,378.0,44896.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1557
915330,3015,4927.0,21837.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,277
1169838,3821,2525.0,11934.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1444
3509891,8988,66.0,34872.0,CREDIT,UNKNOWN,INTEREST_CREDITED,764
264234,686,14061.0,45248.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1771
1200214,3963,1013.0,35025.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,430
442654,1248,5650.0,20426.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2085
3594929,2862,94.0,24040.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2053
2105829,6780,445.0,25685.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1534
2804825,9364,-11.0,14899.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,375
1173686,3849,-21.0,66445.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1256
572888,1890,473.0,32575.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1542
3623146,1609,115.0,48031.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1836
769416,2380,-24.0,20362.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,460
2030362,6483,1785.0,17177.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,304
3537197,9593,24.0,14008.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1202
99151,140,1214.0,27524.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1050
885274,2917,8577.0,53314.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1428
1121484,3727,242.0,20634.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1594
897327,2953,741.0,24223.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1209
3605343,2057,156.0,41494.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2049
660511,2000,685.0,10856.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1951
255603,543,1064.0,20557.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,275
832725,2595,5.0,22585.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1336
1658765,5048,41321.0,103584.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1389
3616925,2234,33.0,12687.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1608
584831,1951,-18.0,58496.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1903
852439,2648,14839.0,46177.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1570
561088,1873,-12.0,12424.0,UNKNOWN,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,488
1121530,3668,6413.0,35897.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2037
865837,2704,23697.0,76235.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,894
1093353,3656,-16.0,26623.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1851
145538,249,-26.0,24613.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2108
656259,2014,128.0,71406.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,2011
152822,290,38401.0,66276.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1241
1073046,3531,4402.0,32386.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,698
3648496,3370,116.0,26261.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1966
3562513,623,152.0,51520.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1269
3607201,2065,49.0,30587.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1458
826836,2569,28.0,76077.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1819
313952,848,5530.0,11560.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2043
328850,884,30.0,31929.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1143
3614560,2303,100.0,35856.0,CREDIT,UNKNOWN,INTEREST_CREDITED,842
544275,1803,-4.0,46748.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,830
718107,2211,29724.0,65469.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1997
587022,1938,2849.0,29634.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,868
259731,656,5471.0,29399.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1164
3575621,1032,124.0,46666.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1816
3538997,335,59.0,21931.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1913
3604094,2038,80.0,29681.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1247
904305,3014,-19.0,58619.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1963
426445,1433,930.0,32748.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1951
1111855,3720,-15.0,35552.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1808
809992,2475,2367.0,23339.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2104
248611,604,5260.0,13174.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,213
3512440,4342,66.0,37427.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1620
1173511,3809,4791.0,11197.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2062
478042,1599,-17.0,48556.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1448
972439,3227,-4.0,26357.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2053
520199,1718,2747.0,71607.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1789
517939,1727,13064.0,43627.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2018
2670057,8617,848.0,41459.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1516
656922,1996,2961.0,59780.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1817
294584,693,1160.0,49332.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1781
532165,1760,2258.0,68968.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1990
410672,1155,46387.0,114640.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2083
3479130,3887,165.0,49558.0,CREDIT,UNKNOWN,INTEREST_CREDITED,474
3489362,4063,128.0,50008.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2034
3562449,651,62.0,22437.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1408
526591,1668,4402.0,21335.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1647
421677,1204,10441.0,48978.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1499
161118,295,59.0,64063.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1201
1145263,3699,4565.0,32475.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,640
1148781,3762,1795.0,11784.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,852
3659555,3621,105.0,54865.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2023
145162,295,10475.0,34237.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,645
3562079,8142,204.0,60077.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1457
3469134,9747,85.0,27098.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1472
1051170,3512,-3.0,17203.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2067
360997,964,239.0,18011.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1983
3656095,3782,57.0,21432.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1851
3554657,380,138.0,42934.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1095
1870845,6273,287.0,29146.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2050
705756,2132,0.0,21328.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1194
513543,1700,999.0,16996.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2055
1155118,3804,7817.0,52776.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1518
3557284,802,124.0,47532.0,CREDIT,UNKNOWN,INTEREST_CREDITED,388
1084337,3623,45.0,37839.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1549
908708,2993,7030.0,71849.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1184
151815,262,5931.0,30640.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,477
353150,950,18544.0,78342.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1536
387990,1104,-5.0,15802.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2030
1871010,6235,23952.0,70164.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1985
3567796,887,53.0,35954.0,CREDIT,UNKNOWN,INTEREST_CREDITED,847
1548269,5236,448.0,10106.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,214
1911018,6328,1871.0,25329.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2042
575368,1887,289.0,35456.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1427
3452185,1210,156.0,51838.0,CREDIT,UNKNOWN,INTEREST_CREDITED,758
532273,1742,44417.0,65319.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2082
1155625,3831,-9.0,32764.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1958
558730,1874,3324.0,32461.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1935
346720,904,2475.0,30218.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,305
554567,1811,401.0,30698.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,869
1076548,3690,-5.0,51891.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1257
419180,1186,2894.0,21095.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1821
1766972,6318,23415.0,63133.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1531
1155470,3793,-18.0,51048.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1688
114860,190,-14.0,36571.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1565
3643355,3338,58.0,14416.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2015
2813804,9086,28441.0,50991.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,377
1166739,3820,14058.0,52554.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1458
696672,2111,3275.0,45268.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1796
214746,488,-12.0,30321.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1942
156539,330,99.0,11681.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1046
920739,3036,784.0,21623.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1907
867513,2655,12235.0,33566.0,CREDIT,WITHDRAWAL_IN_CASH,UNKNOWN,1236
493163,1618,3859.0,27006.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1419
1140377,3710,1330.0,42715.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1600
1134315,3717,4123.0,33050.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,882
1164309,3828,13462.0,52846.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,290
738570,2302,5168.0,23513.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1989
222019,571,19846.0,31138.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,779
2822190,9406,25464.0,42672.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1424
102112,176,-6.0,34981.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2015
1128413,3729,9.0,70625.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2070
1127459,3679,116.0,28751.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1148
719819,2212,2086.0,31840.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1880
899751,2964,-20.0,43768.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1527
1116557,3612,2633.0,22523.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1644
191957,401,5025.0,18063.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1904
1902657,6307,2183.0,9965.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1788
3578565,711,114.0,51583.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1137
104035,124,396.0,28765.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2045
2846364,9401,0.0,39649.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1837
3631049,1697,72.0,50939.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1208
1255779,4121,14555.0,32792.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2071
307744,760,1595.0,25814.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1143
864747,2684,2313.0,23858.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,875
3470746,1885,49.0,32471.0,CREDIT,UNKNOWN,INTEREST_CREDITED,883
3544545,232,36.0,13870.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1454
1635938,5292,1647.0,14208.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,807
3618334,1377,55.0,33113.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1435
3610759,2096,100.0,48521.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1948
3470732,11293,2109.0,58764.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1270
205072,429,22705.0,99745.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1977
653956,2025,-4.0,11671.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1700
364254,1035,8.0,44132.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1998
408843,1161,823.0,17762.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1278
450740,1469,3654.0,16063.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1416
401229,1131,4548.0,26002.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1424
286244,665,169.0,106762.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1993
1684094,5276,-32.0,40209.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2043
341753,931,13788.0,67404.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1987
562540,1862,9727.0,21292.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1260
313419,828,495.0,33413.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1425
169220,278,2028.0,16600.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,907
341755,931,12.0,19460.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1024
3663558,3837,82.0,47332.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1853
406430,1155,9304.0,67617.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1539
1084623,3530,-5.0,24637.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,480
1148421,3721,-279.0,20189.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1620
121560,232,6234.0,60575.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1586
252320,617,2063.0,21228.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1947
114700,189,-17.0,45539.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1892
290388,705,766.0,11313.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2042
467496,1531,-59.0,15115.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,244
550107,1778,5991.0,30883.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1999
1464588,4428,2009.0,30368.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1923
1083644,3547,-22.0,52891.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,363
1171996,3860,525.0,27431.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1824
3672196,4206,177.0,53374.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1205
3584123,921,50.0,16223.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2031
851363,2618,3320.0,20721.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1574
810918,2526,12672.0,100143.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2022
106976,92,4522.0,34992.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2049
313234,864,6030.0,27372.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1829
475738,1548,6420.0,33378.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1483
209806,399,1422.0,13304.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1022
343261,915,-27.0,65030.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1211
652118,1983,2331.0,23194.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1281
355490,978,125.0,34266.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,930
93442,88,25.0,31058.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1516
351410,999,15137.0,62280.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1223
3474849,2484,127.0,53475.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1260
524021,1731,599.0,47906.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1454
3606625,1980,55.0,33402.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1545
299315,760,12962.0,73479.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1455
847891,2648,12828.0,52582.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1292
354269,1055,3343.0,27486.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1408
3654093,3674,205.0,89401.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1985
130057,287,-18.0,44815.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2078
510399,1685,59.0,27354.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2015
866800,2674,6002.0,32906.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1498
272342,742,8444.0,47860.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,866
3574948,940,35.0,33326.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1378
183541,380,-19.0,21108.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,925
3631597,3641,117.0,44078.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1548
3661471,6437,160.0,55665.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2087
955365,3152,12875.0,29725.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1200
923650,3024,4667.0,10849.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,486
831140,2634,2146.0,13230.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1823
948212,5789,37181.0,24720.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1865
1011594,3362,5.0,19949.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1162
235346,626,22443.0,52595.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1208
820755,2550,5242.0,63041.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1552
479737,1538,-21.0,16633.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1854
3572185,885,106.0,63673.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1578
446011,1473,545.0,31923.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1836
3609213,2184,46.0,14398.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1199
123334,201,4348.0,20657.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1607
267824,666,-602.0,100286.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2066
3227410,10451,878.0,55405.0,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,1858
655950,2005,27627.0,95926.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,825
3469710,9417,125.0,57256.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2043
674308,2068,30114.0,75071.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1815
1063970,3539,183.0,16491.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1873
2348021,7262,11.0,58137.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1529
272700,669,-9.0,12553.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,833
220369,475,2906.0,35142.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,776
1259144,4153,4129.0,32496.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1205
3559870,507,696.0,68963.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1987
656510,2006,41562.0,93806.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2051
953759,3189,-19.0,18822.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1230
972400,3203,-138.0,26139.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1818
1147363,3793,17.0,11548.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2014
926551,3075,31.0,25114.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1588
723629,2200,217.0,34021.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1874
301470,759,6652.0,23284.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,780
3605137,2133,43.0,13953.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2112
1629262,5267,1217.0,22663.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,776
1009332,3358,5394.0,67544.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1188
2282735,7139,1970.0,11230.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1399
346501,948,2651.0,21524.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1092
105289,164,12190.0,52976.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1416
851026,2670,716.0,33507.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1211
973703,3195,19100.0,33312.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,447
777207,2521,-12.0,44252.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1903
93813,119,1458.0,17184.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2081
692475,2102,917.0,35743.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,470
950646,3158,956.0,31862.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1460
3132219,10132,11957.0,37854.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2031
2347365,7378,879.0,15498.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1539
3622517,3392,154.0,55621.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1230
892240,2940,8480.0,21713.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1851
716660,2219,-10.0,24862.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2027
1094675,3578,4517.0,32867.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,744
730717,2305,517.0,13304.0,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,1273
231046,586,14326.0,50756.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1806
100249,117,6698.0,42145.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1468
694962,2121,-12.0,37142.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1528
93584,457,199.0,18227.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1972
160986,290,2950.0,20190.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,438
1136908,3753,12066.0,36994.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,412
92976,117,3842.0,32252.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1374
84629,86,1564.0,9374.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1409
1782406,6107,-1.0,14243.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1047
177092,332,4294.0,19595.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1457
225994,498,-14.0,35502.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,784
571802,1876,57.0,30253.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1420
3559222,383,36.0,23174.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1052
678547,2067,1622.0,30011.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1489
3601467,2056,42.0,20501.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1930
534545,1749,1114.0,24189.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,794
161369,315,11997.0,36856.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1391
664070,2026,5083.0,19722.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1856
3461893,8150,63.0,23046.0,CREDIT,WITHDRAWAL_IN_CASH,INTEREST_CREDITED,1450
3238089,10537,-17.0,45438.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2011
133054,239,3404.0,16030.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,390
945619,3071,479.0,27386.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,276
3640754,3582,108.0,23326.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1246
3647412,3742,97.0,27923.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1232
3568628,830,36.0,19771.0,CREDIT,UNKNOWN,INTEREST_CREDITED,924
1055443,3499,11213.0,49925.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1190
438997,1252,1151.0,15449.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,846
575727,1882,3375.0,54876.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,668
920277,3046,-16.0,33930.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1950
720437,2212,3759.0,17822.0,WITHDRAWAL,COLLECTION_FROM_OTHER_BANK,UNKNOWN,432
473085,1546,2246.0,24310.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2056
952959,3132,11304.0,57856.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1504
317925,860,3814.0,47833.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1138
1545401,4938,4695.0,32208.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,639
683440,2085,-17.0,25701.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1968
3614368,2125,65.0,27915.0,CREDIT,UNKNOWN,INTEREST_CREDITED,895
856071,2638,5281.0,49654.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,266
575224,1882,1140.0,23972.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1903
85588,71,30025.0,75361.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1445
120950,213,321.0,26474.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2127
1685348,5893,11082.0,25916.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1192
997354,3356,-14.0,17786.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1859
661225,1997,1074.0,53590.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,363
3574794,224,34.0,20091.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1270
725643,2244,133.0,71536.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,2026
162741,342,-20.0,58979.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1955
792889,2488,758.0,14330.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,475
911804,3014,9.0,43984.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1086
3457744,9953,57.0,11810.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1968
2719586,9068,3520.0,13586.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,706
234766,542,1807.0,16184.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1823
927218,3022,1011.0,19243.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2004
3567634,862,165.0,59706.0,CREDIT,UNKNOWN,INTEREST_CREDITED,326
693557,2136,11968.0,39690.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1965
3538605,8863,198.0,65737.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1529
3555879,2603,4630.0,32787.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1436
662618,2034,3557.0,22063.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1541
513191,1706,3630.0,73690.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1133
3644515,5685,73.0,34906.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1178
3219435,10402,409.0,13774.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1572
3574576,912,6.0,67619.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1843
3612223,2212,63.0,29963.0,CREDIT,UNKNOWN,INTEREST_CREDITED,938
180037,387,12868.0,44816.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1591
1643442,5331,1495.0,71780.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,702
286324,740,11342.0,39878.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1996
721719,2211,1154.0,18083.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1235
656594,2002,734.0,30484.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1406
3639717,3191,55.0,34631.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1530
1157971,3777,396.0,44239.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1820
2926659,9720,1865.0,33042.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,708
3592012,1099,73.0,35492.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2037
525471,1782,-10.0,14982.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2048
307154,822,4635.0,100504.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2053
1006561,3306,9990.0,20074.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1829
3599228,1188,152.0,55667.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1926
446545,1486,5406.0,30593.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,858
3446368,857,55.0,10207.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1817
716717,2222,-16.0,46780.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2025
668756,2073,-20.0,32747.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1659
235969,659,5351.0,49152.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1599
795638,2463,-317.0,34992.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1496
721186,2218,1675.0,14957.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2059
1017377,3382,-17.0,18848.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,741
116762,115,10244.0,44594.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1801
3604818,2905,189.0,49450.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2056
181871,295,4565.0,33744.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,840
101087,124,-302.0,21262.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1134
744853,2293,842.0,12552.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1435
3119600,10040,2813.0,46620.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1526
825705,2567,1242.0,30989.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,459
102678,132,2707.0,28580.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1817
907738,3017,5893.0,22408.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,356
2669562,8564,2129.0,24004.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1903
1189606,3968,984.0,53748.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1081
1749266,5612,6921.0,46069.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,382
438743,1245,-17.0,28135.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1486
3554205,421,53.0,42217.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1124
3477708,3991,57.0,17243.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1483
1112064,3639,1060.0,20742.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2030
3641896,5390,109.0,45439.0,CREDIT,UNKNOWN,INTEREST_CREDITED,541
1141148,3780,-8.0,50532.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1585
2669052,8541,-24.0,35445.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1656
1496187,5140,507.0,31909.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1196
547107,1810,1342.0,11924.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2041
416660,1182,5237.0,33619.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1039
3677488,4103,149.0,70837.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1582
94634,113,4172.0,27050.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1192
540143,1770,1059.0,45306.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1044
124272,264,-140.0,24763.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2006
456125,1512,251.0,32837.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,829
1221765,4015,17.0,31590.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1202
3458302,11673,30135.0,53218.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,329
369810,1039,-20.0,33015.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,878
1383803,4598,664.0,19711.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1163
1155959,3765,7922.0,56505.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1399
1153162,3758,6244.0,44620.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1307
3269597,10771,1410.0,17535.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2005
785477,2431,11232.0,15234.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1943
723159,2232,857.0,44346.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,423
1123481,3697,14176.0,58199.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,2035
3550838,497,78.0,35543.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1878
1041250,3443,6482.0,34201.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1984
329316,853,-39.0,12467.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1148
477750,1567,-16.0,20580.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1498
2072788,6935,11444.0,58471.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1930
3570162,760,61.0,30695.0,CREDIT,UNKNOWN,INTEREST_CREDITED,893
3596478,1887,45.0,15791.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1934
664791,2037,7892.0,32706.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1908
3557507,666,77.0,35059.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2085
3587756,1632,182.0,48568.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1928
368823,994,1899.0,19714.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1234
415652,1183,2.0,26847.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1158
781635,2439,-29.0,42988.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,944
1268221,4213,2133.0,23408.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2024
3598817,2868,51.0,20587.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1912
1804002,6111,3833.0,30553.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1121
271781,688,49123.0,78727.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2070
522919,1758,13.0,63586.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1623
263145,663,-19.0,48036.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1510
2380667,7428,-22.0,46920.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,839
516338,1714,4654.0,34057.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2013
323033,804,-346.0,13096.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1940
716084,2212,255.0,18023.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1268
1058194,3474,4654.0,99760.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1816
221334,534,18612.0,34062.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,839
535899,1777,1183.0,13654.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2070
861976,2678,14953.0,25715.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,924
3606043,2079,34.0,16686.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1563
2260264,7476,57.0,94951.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2031
294437,768,12334.0,11852.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1490
1459989,4844,-3.0,50367.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1810
1699024,5753,3612.0,41965.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1430
424603,786,887.0,21062.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,2052
1089942,3573,11611.0,37061.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,340
403075,1159,98.0,74778.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1193
519243,1679,3478.0,27625.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1570
468054,1542,2572.0,35194.0,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,1960
3559699,755,159.0,60718.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1465
333905,901,19568.0,71999.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1791
694728,2151,11292.0,34553.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1825
311228,863,1225.0,31602.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1981
819953,2748,2836.0,21164.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1129
3618951,-2,106.0,45602.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1214
3627204,2821,108.0,46302.0,CREDIT,UNKNOWN,INTEREST_CREDITED,872
659177,1994,-21.0,29260.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1971
1082229,3552,1953.0,23124.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,203
844055,2603,1456.0,21782.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1992
789364,2472,-15.0,16796.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2084
958349,3179,5255.0,43278.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,645
3514893,10033,44.0,35236.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1129
364280,1027,-25.0,64582.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1491
106473,134,34.0,34488.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1452
3602606,2096,25.0,14723.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1498
3449375,11528,-132.0,60776.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,382
1060109,3518,815.0,15854.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1207
3650174,3569,52.0,35918.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1469
471229,1551,49535.0,62337.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,405
222106,510,4109.0,87452.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1861
1656796,5288,24740.0,69558.0,CREDIT,WITHDRAWAL_IN_CASH,UNKNOWN,1530
299777,749,696.0,42444.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,2021
3618275,2471,100.0,30685.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1465
1084208,3595,4516.0,42904.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1630
1069400,3521,2662.0,65932.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1937
724929,2243,13648.0,38139.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1824
1075645,3583,2291.0,57525.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1566
546187,1812,3210.0,32510.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1406
3645556,5778,158.0,47152.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1983
1144892,3754,11.0,15775.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,334
739655,2272,4411.0,55123.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,303
561161,1858,346.0,18243.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1415
204315,491,-60.0,31382.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1602
903174,2971,15337.0,59879.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2072
3465255,9078,71.0,35343.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1284
1227370,3968,96.0,14359.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2030
3603379,2095,118.0,49238.0,CREDIT,UNKNOWN,INTEREST_CREDITED,468
3651563,4375,44.0,27978.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1293
3683293,4519,73.0,74275.0,CREDIT,UNKNOWN,INTEREST_CREDITED,866
3490866,2306,122.0,46482.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1940
1036705,3392,1987.0,29879.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,308
1281467,4282,15.0,19646.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2001
553900,1852,-22.0,70224.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1637
3647079,3312,29.0,29052.0,CREDIT,UNKNOWN,INTEREST_CREDITED,849
3607963,2342,64.0,23136.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1250
1079385,3582,-16.0,33709.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1171
3570889,880,29.0,21962.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1222
584747,1922,87.0,11368.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1316
316385,847,-8.0,19212.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1240
3572526,989,59.0,22416.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2079
575688,1923,17304.0,47466.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,745
231351,634,32536.0,50324.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,252
3092024,10032,966.0,32167.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1497
831338,2573,3831.0,32104.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,2086
2098625,6914,6708.0,33693.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1968
3494845,9977,183.0,108318.0,CREDIT,UNKNOWN,INTEREST_CREDITED,739
1030505,3394,610.0,28251.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1845
3575979,142,60.0,21515.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1496
1039562,3438,-1.0,52295.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1163
141364,281,2475.0,30156.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1611
790786,2470,-14.0,70952.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1129
1139043,3779,7313.0,40450.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1892
3446803,1005,54.0,22766.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1879
586329,1938,4526.0,54688.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1354
498210,1668,3.0,60887.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2029
730353,2251,2363.0,40276.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,731
505023,1672,4453.0,66536.0,UNKNOWN,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,806
504919,1645,2122.0,32274.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1942
3591495,1682,28.0,21030.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1500
874613,2691,-1.0,39643.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1839
1086219,3553,2866.0,50747.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1417
466181,1515,3911.0,32531.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1371
332175,865,-73.0,16727.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1152
3499635,9914,133.0,46710.0,CREDIT,UNKNOWN,INTEREST_CREDITED,187
3627529,3220,152.0,67154.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1485
147761,256,8242.0,15410.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1515
89866,50,16.0,84039.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2103
132129,222,10311.0,54689.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1511
3666605,6387,192.0,68034.0,CREDIT,UNKNOWN,INTEREST_CREDITED,846
1002467,3262,708.0,48098.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1455
545588,1791,1982.0,44220.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1108
122592,153,2299.0,25215.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1904
712756,2221,2176.0,59020.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,771
242765,398,1161.0,65673.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1796
1147202,4097,470.0,42465.0,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,673
3657120,3715,132.0,54971.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1616
1063735,3526,7401.0,20844.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1967
462666,1528,4417.0,26884.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1920
3544185,9865,125.0,83692.0,CREDIT,UNKNOWN,INTEREST_CREDITED,306
1109173,3632,-132.0,17649.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1147
381939,1036,1439.0,22305.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,300
3558860,8900,15.0,35594.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1493
209821,470,-13.0,21268.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1997
687047,2093,406.0,22203.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,373
1633086,5204,5964.0,47171.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1594
3489444,2117,27.0,13377.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1469
263254,598,-11.0,30361.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1557
1011948,3430,4.0,54872.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1863
3572577,869,86.0,43486.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2130
683772,2095,185.0,17561.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2005
467122,1571,-9.0,33277.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,830
913730,3022,-4.0,46569.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1525
3554093,11487,-752.0,107215.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1867
2059139,6613,2896.0,12745.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1530
3639215,3295,40.0,30063.0,CREDIT,UNKNOWN,INTEREST_CREDITED,876
3652165,3743,96.0,28479.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2049
1775896,5697,6169.0,35387.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1767
1916798,6203,2069.0,20343.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1213
106878,278,5527.0,21428.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1472
3606838,2056,50.0,33673.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1242
3437733,11433,-190.0,12796.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1822
1148391,3740,354.0,43688.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1001
3605655,4099,78.0,23258.0,CREDIT,UNKNOWN,INTEREST_CREDITED,692
1058574,3512,1.0,13975.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,794
1264018,4317,-18.0,64244.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2065
3641940,4776,41.0,29198.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,INTEREST_CREDITED,1154



================================================
File: data/real_test_sample.csv
================================================
trans_id,account_id,trans_amount,balance_after_trans,trans_type,trans_operation,trans_k_symbol,trans_date
951892,3245,3878.0,13680.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2165
3547680,515,65.9,14898.6,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
1187131,4066,32245.0,57995.5,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2139
531421,1811,3990.8,23324.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,892
37081,119,12100.0,36580.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,654
744593,2542,435.0,23734.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2169
825987,2813,5100.0,26013.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1428
569772,1939,49686.0,75914.8,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1714
351792,1195,6223.0,33716.7,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2048
234354,798,100.0,24709.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1297
1035199,3539,14.6,36481.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1641
1152905,3943,2913.0,22550.5,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1929
1207748,4131,2400.0,23383.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,805
1021204,3487,324.0,20775.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,345
617112,2104,14.6,28344.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1580
2292584,7562,6450.2,96310.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,2110
1064242,3636,4744.0,57964.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1896
986842,3366,3964.0,44155.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1647
1293310,4418,960.0,22399.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2146
733791,2508,2193.0,20565.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,739
518043,1770,21017.0,60388.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,1286
751948,2565,1600.0,16689.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1276
490056,1672,13700.0,40921.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1313
196226,665,14.6,36247.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1215
1959229,6636,21200.0,34497.4,CREDIT,CREDIT_IN_CASH,UNKNOWN,1535
695593,2378,12100.0,23442.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,810
3642832,3403,224.4,50718.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1733
105408,359,3544.0,11402.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1622
705559,2417,1319.0,12571.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1046
833762,2838,23100.0,71323.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1662
1910833,6473,39483.0,47611.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1311
1089624,3724,2400.0,73827.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2120
799304,2725,2000.0,60062.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1927
3548875,549,100.6,30102.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1491
3468796,4158,257.7,66767.6,CREDIT,UNKNOWN,INTEREST_CREDITED,1794
3442576,1464,357.1,96520.1,CREDIT,UNKNOWN,INTEREST_CREDITED,2098
497058,1694,30.0,24678.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2006
838902,2856,4560.0,26129.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1298
3656342,3808,153.6,41612.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1945
777070,2649,3120.0,29259.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,390
424399,1441,480.0,18239.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1482
832174,2834,1907.0,34984.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1252
492591,1680,19419.0,66036.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1958
198566,674,4675.0,27185.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1167
2442740,8051,7900.0,28813.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1237
2123468,7190,5394.0,30070.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1989
55167,184,10200.0,31123.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1206
495170,1688,14.6,24215.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1185
3572108,1267,166.0,32792.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1825
929913,3168,14.6,33228.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2098
467027,1590,17280.0,44395.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1802
166095,555,71.0,31066.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1776
420994,1427,2300.0,42837.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1850
337169,1145,1469.0,12052.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,429
339839,1153,12012.0,28818.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,2051
1681152,5698,25700.0,90547.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2157
3344867,11111,3200.0,82597.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2056
727173,2487,1828.0,27794.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1710
3673382,5891,277.7,64980.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1338
125323,422,9000.0,33127.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1067
935512,3193,1300.0,14203.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1850
81593,273,100.0,20439.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,545
1026644,3505,17300.0,37233.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1015
304121,1036,14000.0,54141.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1652
507018,1731,2160.0,22474.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1100
3550458,607,80.6,19451.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1276
54299,181,10772.0,34478.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,2139
172675,578,5115.0,37132.6,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1688
329206,1123,24345.0,46102.9,CREDIT,CREDIT_IN_CASH,UNKNOWN,1441
46352,154,3200.0,61045.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1551
914565,3117,5355.0,25569.8,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1412
816693,2781,500.0,41905.6,CREDIT,CREDIT_IN_CASH,UNKNOWN,1417
315442,1076,14.6,52152.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2037
3395513,11271,14.6,18229.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1703
754117,2573,28109.0,46909.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1441
841228,2863,14.6,29400.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1429
933626,3184,14.6,29765.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,729
1094668,3743,2200.0,44881.0,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,2160
3475993,8564,217.8,61662.6,CREDIT,UNKNOWN,INTEREST_CREDITED,1033
262670,899,16266.0,46401.2,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1313
1040604,3558,3231.0,36541.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,952
3804,15,14.6,26785.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2159
29892,97,26892.0,50265.6,CREDIT,CREDIT_IN_CASH,UNKNOWN,1260
34239,110,600.0,38709.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1834
3282211,10905,1600.0,61282.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,2110
582905,1983,960.0,42943.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1998
707567,2423,14.6,20726.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,849
211100,717,1560.0,33997.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,389
895867,3053,3790.0,50147.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1776
410717,1398,1200.0,41400.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1734
1470847,5011,1300.0,17653.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,716
229032,777,24400.0,71737.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2122
29428,96,46.0,42333.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,980
3333261,11069,5400.0,29687.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1573
173025,580,2400.0,26828.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2160
1086160,3711,7683.2,547.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,2049
444127,1510,2100.0,17308.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1645
3135055,10404,13800.0,38411.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1699
895044,3050,14.6,43595.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1460
3554891,743,118.7,29306.6,CREDIT,UNKNOWN,INTEREST_CREDITED,1794
803223,2738,14330.0,58028.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1920
3456609,9337,189.3,55374.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1580
409343,1394,1454.0,26841.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1287
3085226,10233,14.6,18104.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1976
943487,3218,930.0,19055.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1923
1036164,3544,10975.0,26798.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2020
1026625,3505,18800.0,40823.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,445
3149175,10451,2439.0,24328.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,551
22122,72,19200.0,35294.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1596
673843,2302,3400.0,39102.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,946
732731,2504,5513.0,31817.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,709
1207764,4131,30600.0,56276.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1045
383113,1301,14.6,25897.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1307
443918,1509,6900.0,14538.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1913
855573,2915,3600.0,79066.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1449
865152,2945,1854.0,19930.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1927
238837,816,2025.7,97830.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,831
649809,2220,2783.0,16267.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2173
15645,52,22963.0,22535.3,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,2175
754565,2574,100.0,36359.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1112
1159690,3971,9510.0,26518.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1808
1101172,3760,40000.0,40069.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1392
604175,2056,300.0,32097.9,CREDIT,CREDIT_IN_CASH,UNKNOWN,1236
3660653,3944,131.4,28350.2,CREDIT,UNKNOWN,INTEREST_CREDITED,2037
3612069,2482,100.5,22736.4,CREDIT,UNKNOWN,INTEREST_CREDITED,910
1201064,4109,14.6,44099.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2068
3443594,1751,150.0,30420.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1825
3664799,4447,278.9,52180.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1611
169102,566,700.0,700.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1777
129388,434,1637.0,5728.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1921
425017,1443,29751.0,58936.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,1987
428394,1455,2040.0,40384.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1395
20321,68,35557.0,64965.3,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1503
1153915,3947,5040.0,22313.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2057
3510317,9353,13.2,32846.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1399
3451468,5194,161.6,32002.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
274088,939,14.6,21181.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1611
3597618,2025,144.4,28139.2,CREDIT,UNKNOWN,INTEREST_CREDITED,880
190991,649,49966.0,104279.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1709
1505834,5133,286.0,29552.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1803
348688,1183,1882.0,33125.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1625
895838,3053,3790.0,25065.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,892
1105494,3777,1039.0,26170.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2109
2730613,9034,3200.0,39788.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1081
3582107,1575,82.9,20601.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1063
650244,2222,26188.0,123323.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1841
2780616,9203,12700.0,65074.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,HOUSEHOLD,1039
1013591,3465,14.6,56315.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2037
579517,1972,2736.0,24911.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2168
418067,1417,7200.0,51365.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1168
3536702,190,182.8,49016.5,CREDIT,UNKNOWN,INTEREST_CREDITED,880
203713,691,3342.0,11809.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1740
3588726,1775,122.6,26703.7,CREDIT,UNKNOWN,INTEREST_CREDITED,515
125965,424,20600.0,43237.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1598
1263650,4321,14.6,78416.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,729
693398,2370,2600.0,52835.8,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,1973
10549,35,5100.0,14666.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2017
365281,1241,4400.0,12082.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1698
767261,2620,3855.0,13384.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1159
3562581,973,148.2,33664.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1276
203238,689,16.0,63146.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1774
3549173,560,138.1,35622.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1094
76964,256,18960.0,69632.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1107
687051,2345,16300.0,29350.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1647
892417,3042,15208.0,40529.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,677
53225,176,97.0,40816.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1778
3628422,2958,63.8,16619.5,CREDIT,UNKNOWN,INTEREST_CREDITED,2129
759697,2592,17638.0,51864.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,891
1204519,4121,1050.0,17089.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1480
260384,892,6177.0,34716.8,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,981
3584735,1653,218.0,43214.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1063
686967,2345,14.6,31890.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,972
604395,2057,102.0,61682.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2108
1020385,3484,6634.0,28320.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1042
3543183,385,85.2,20995.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1611
887861,3028,2200.0,21353.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,462
697208,2384,47906.0,66012.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2047
279196,956,1100.0,44679.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1990
377244,1284,22900.0,62238.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2093
756238,2581,19653.0,52158.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,923
585884,1994,18.0,51548.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1586
1910929,6473,5500.0,23974.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1812
991338,3380,4376.0,20220.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1409
626226,2139,2154.0,22422.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1376
418019,1417,14.6,34334.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1154
688531,2352,20252.0,74661.6,CREDIT,CREDIT_IN_CASH,UNKNOWN,1775
657365,2246,32427.0,135338.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,1954
496980,1694,1800.0,67885.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,796
100707,344,22900.0,22076.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,531
2371556,7819,1721.0,16151.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,766
616932,2103,14.6,15092.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1794
1211103,4144,28658.0,48958.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,2153
726499,2485,14.6,19988.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2098
822974,2803,28664.0,79156.1,CREDIT,CREDIT_IN_CASH,UNKNOWN,1933
449046,1527,8944.0,37384.2,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,495
3560595,914,62.1,14543.3,CREDIT,UNKNOWN,INTEREST_CREDITED,545
2956639,9790,14600.0,57765.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,2002
1122879,3835,1247.0,33368.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1347
3622122,2768,78.4,23504.1,CREDIT,UNKNOWN,INTEREST_CREDITED,423
103868,354,14.6,32689.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,576
78890,264,4961.0,19935.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1168
1045338,3575,5070.0,33956.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,712
3448138,2585,6.6,2071.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1703
3616584,2605,102.4,24045.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1703
60408,201,14.6,40950.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2129
3135002,10404,1320.0,52211.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1689
815918,2779,8262.0,42015.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1008
2611870,8628,100.0,49244.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2037
787783,2684,800.0,22198.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2043
3553737,705,139.0,34303.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1825
1063282,3631,1700.0,49101.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2064
219380,745,1000.0,24145.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2042
42919,143,4924.0,17852.5,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1833
1548781,5270,44749.0,98538.5,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,955
37470,120,30.0,34513.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2098
278210,952,4946.0,34720.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2076
410153,1397,17278.0,31459.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1289
3459476,93,118.7,29979.3,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
897381,3057,4646.0,27920.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1925
482865,1644,15306.0,51776.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1770
3617547,2632,154.0,39940.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1764
221818,753,14.6,19732.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2037
699528,2393,14.6,39587.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,364
3459414,82,177.6,84847.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1519
1020312,3484,24342.0,71536.4,CREDIT,CREDIT_IN_CASH,UNKNOWN,650
849834,2895,5598.0,22805.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1257
337820,1146,11900.0,33714.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,314
728858,2492,700.0,700.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1704
857120,2922,9190.0,96839.1,CREDIT,CREDIT_IN_CASH,UNKNOWN,1319
889098,3032,14.6,14127.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1368
1048435,3586,12951.0,71831.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,2014
1092623,3735,14.6,22791.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2159
3324503,11042,4800.0,56133.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1477
3622740,2789,148.5,31068.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1276
2442415,8051,39060.0,57802.3,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2164
300244,1022,30.0,62615.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1976
1122186,3834,3189.0,7165.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,187
152230,509,14000.0,32141.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1866
369495,1256,2760.0,27231.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1106
3454203,7011,31.6,11171.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,SANCTION_INTEREST,423
1202934,4116,34530.0,127677.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,2176
2915534,9656,14.6,65482.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1641
254542,873,1600.0,15811.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2176
3670102,5313,170.5,25569.5,CREDIT,UNKNOWN,INTEREST_CREDITED,972
1116128,3812,2125.0,16000.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1108
451149,1534,2155.0,36613.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1559
509308,1743,4260.0,23872.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,436
3530744,10,176.8,43989.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1884
1694886,5742,42800.0,83091.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1394
954838,3255,1400.0,107013.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,2027
776626,2648,2200.0,25847.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,2022
42137,140,500.0,38193.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1811
740705,2528,14.6,16355.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1154
264179,902,14.6,17865.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1368
3598538,2054,232.0,45334.9,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
593322,2020,2329.0,27434.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,679
239597,817,6700.0,21505.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1791
602046,2050,401.0,29507.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,863
103289,352,700.0,19270.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2019
715644,2450,7915.0,48446.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1865
685484,2341,464.0,13495.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1227
352403,1197,390.0,33830.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1461
858068,2925,4297.0,34651.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,682
771762,2633,14.6,79579.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1550
1163218,3982,3230.0,37470.1,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1649
137790,461,1300.0,33845.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1038
1319111,4503,14.6,55235.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1185
3614931,2552,217.3,50694.8,CREDIT,UNKNOWN,INTEREST_CREDITED,2068
3622504,2779,223.9,56130.2,CREDIT,UNKNOWN,INTEREST_CREDITED,698
3439610,904,337.4,82048.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1611
14194,47,9.0,79393.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,712
637820,2177,3168.0,25256.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,186
706512,2419,19800.0,33967.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,930
62777,208,14996.0,45935.1,CREDIT,CREDIT_IN_CASH,UNKNOWN,1710
680982,2324,2300.0,18290.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1844
766025,2616,14.6,19226.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1915
1134555,3877,32160.0,42747.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1625
960683,3272,1500.0,22828.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1367
1053306,3603,18452.0,48787.6,CREDIT,CREDIT_IN_CASH,UNKNOWN,2020
839507,2858,14.6,40743.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2159
408743,1392,3081.0,89980.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2105
214721,729,114.0,20500.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1950
1339487,4576,8339.0,25474.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1137
478518,1630,14.6,22055.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1063
423821,1440,56.0,14132.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1986
1197500,4099,872.0,49124.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,2018
274371,940,14.6,75080.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1215
1167366,4000,700.0,69969.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1992
16573,56,4200.0,35723.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1758
512027,1752,4440.0,43228.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1727
323302,1105,8782.0,23353.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1863
527720,1801,3419.0,44394.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1469
1679174,5692,13800.0,29148.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1520
2121648,7184,1879.0,32964.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2017
120560,404,14659.0,30027.1,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1235
952737,3248,466.0,13518.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1527
1262696,4318,13396.0,99401.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2014
1111832,3796,1300.0,26056.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,414
1342018,4585,4065.0,40979.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1649
860644,2932,4.0,72152.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,679
1689510,5726,12900.0,12730.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,1894
406652,1384,5400.0,28125.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1828
1048109,3584,14.6,50291.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1945
497934,1696,800.0,13816.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1159
207004,702,14.6,10754.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,395
1134070,3875,24000.0,81175.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2167
809991,2761,6238.0,24210.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1739
2797059,9263,9874.0,15758.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1833
3603979,2235,116.8,29979.5,CREDIT,UNKNOWN,INTEREST_CREDITED,2037
604978,2059,8100.0,29473.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1155
340808,1157,2000.0,34721.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1482
1064365,3636,14.6,44697.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1672
1650235,5593,29639.0,74405.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,2016
653396,2234,59.0,16944.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1715
926213,3157,7600.0,17669.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,889
3626804,2912,219.0,49482.3,CREDIT,UNKNOWN,INTEREST_CREDITED,880
796667,2713,14.6,24615.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1033
3656488,3813,158.8,37523.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1856
98310,336,4067.0,25868.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1533
3515480,9869,146.4,38648.6,CREDIT,UNKNOWN,INTEREST_CREDITED,333
591597,2013,10919.0,59660.6,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1916
229656,781,510.0,15520.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2172
994319,3391,14.6,36938.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,668
647285,2213,6273.0,31528.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,551
955041,3256,14.6,13408.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1641
3466145,3517,138.1,28739.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1825
1062428,3629,14.6,23455.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,423
502334,1712,14.6,31729.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1976
462706,1574,4058.0,22124.9,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1808
2108201,7136,2235.0,40809.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1864
882598,3007,5596.0,54359.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,617
776573,2648,1300.0,26395.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,432
2589924,8558,4806.5,30984.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,2049
1066693,3645,7021.0,34569.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1653
3552019,651,220.9,52498.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1094
991000,3378,4200.0,39652.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,917
2895812,9591,14.6,9045.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1002
65286,217,14.6,32341.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2068
3614,15,3072.0,56184.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1100
3508775,9188,88.9,22847.4,CREDIT,UNKNOWN,INTEREST_CREDITED,2037
275213,942,8500.0,27774.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1307
8446,30,14.6,100055.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1794
3461804,2295,343.8,87505.1,CREDIT,UNKNOWN,INTEREST_CREDITED,2190
1006099,3435,3090.0,21157.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1623
219886,747,14.6,18909.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1307
84849,284,9986.0,40099.6,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,2105
579331,1971,7100.0,51297.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2175
511491,1750,2000.0,74090.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1486
3568384,1144,84.3,21045.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1641
1106236,3779,11404.0,39176.6,CREDIT,CREDIT_IN_CASH,UNKNOWN,1008
348209,1180,6500.0,69834.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2058
3637184,3229,183.5,38215.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1733
1001761,3419,2456.0,13303.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1465
163237,545,3306.0,29079.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,889
1084430,3704,6242.0,30721.1,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1011
761349,2599,15826.0,101047.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,556
3638968,3275,93.1,23545.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1429
1006252,3435,14.6,27754.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1764
1501236,5118,2500.0,38114.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1666
594369,2023,1684.0,77218.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2019
2102685,7123,49101.0,62014.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,1916
3437833,486,218.9,51587.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1794
1066560,3644,1100.0,15073.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1422
764086,2609,3600.0,42331.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,740
631375,2155,390.0,18939.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1829
142335,477,254.0,54360.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1229
363936,1237,30674.0,114443.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,723
361450,1228,5096.0,26672.6,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1198
1051271,3595,7868.0,15890.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1405
868046,2956,6300.0,34209.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1711
312241,1065,14.6,16301.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2006
786291,2679,1520.0,21345.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1841
419134,1421,14.6,30897.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,910
232078,790,7733.0,56395.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,604
655992,2242,5538.0,20817.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2042
3590271,1816,74.5,18104.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1094
818671,2787,10700.0,43917.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1891
562692,1914,2240.0,27427.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1081
547102,1862,6601.7,63342.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1441
3650683,3647,166.3,40201.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1491
1115473,3809,2.0,40281.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1713
1162344,3980,8555.0,39894.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,950
216970,738,970.0,90943.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1838
1503365,5126,12549.0,35145.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1257
3665038,4476,120.6,26482.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1611
1078788,3684,14.6,24618.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1002
707548,2423,14.6,26529.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,272
713604,2438,7500.0,24951.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1900
104775,358,3099.0,13764.5,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1165
1959214,6636,24200.0,61338.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1085
3648639,3591,93.8,28409.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1856
105911,361,1388.0,70244.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1012
3636912,3222,68.3,16364.1,CREDIT,UNKNOWN,INTEREST_CREDITED,545
251117,861,5000.0,34557.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,405
3490847,7632,224.5,55746.3,CREDIT,UNKNOWN,INTEREST_CREDITED,2190
786089,2678,37930.0,57737.6,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2013
842576,2867,14.6,43914.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,729
3511345,9455,245.1,45504.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1733
2593136,8566,6900.0,6726.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,411
930244,3170,4200.0,26775.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1688
3581718,1561,212.9,46294.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1641
3540443,300,87.7,22647.7,CREDIT,UNKNOWN,INTEREST_CREDITED,423
2123722,7190,3500.0,35465.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1958
1089902,3725,14.6,64700.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2159
867045,2951,14.6,37683.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1215
2454092,8092,900.0,9847.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1051
3654329,3751,119.7,33686.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1733
892016,3040,2202.0,26108.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1953
763917,2609,49110.0,110806.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1352
209284,710,14.6,20374.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1246
259519,888,2160.0,13718.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1853
425097,1443,14.6,35805.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2129
2364085,7795,14.6,81980.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1976
736736,2516,4600.0,37042.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1469
163536,546,4410.0,23150.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1556
3463981,2875,144.5,36346.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1550
634227,2167,24368.0,61639.1,CREDIT,CREDIT_IN_CASH,UNKNOWN,1281
1754249,5952,5100.0,61483.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,449
3569898,1194,198.1,48775.4,CREDIT,UNKNOWN,INTEREST_CREDITED,698
841630,2865,18102.0,33951.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1252
162144,542,2750.0,20788.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2134
703654,2411,5160.0,40232.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,636
1754496,5952,3684.0,78187.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1382
3579923,1502,112.1,21327.9,CREDIT,UNKNOWN,INTEREST_CREDITED,2068
554397,1887,14.6,22214.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,395
1163076,3981,14.6,18175.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1125
229776,782,24593.0,25093.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1775
1169138,4009,37130.0,89334.4,CREDIT,CREDIT_IN_CASH,UNKNOWN,1252
13898,47,35257.0,82429.8,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,465
493424,1683,1342.0,32356.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1987
8494,30,21900.0,19492.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1692
834067,2839,166.0,36793.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,977
1019756,3482,3026.0,11378.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1893
120026,402,14.6,29857.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2159
2873761,9510,2880.0,21476.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1800
526512,1797,15135.0,70030.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1586
537650,1829,1440.0,36709.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1463
516942,1767,19285.0,39520.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,551
256973,882,3306.0,21214.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1558
1064098,3636,40.0,28646.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1168
3589070,1783,124.7,29602.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1856
3592032,1861,168.2,41254.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1338
827000,2817,14.6,43799.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,819
617967,2108,14.6,17183.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1733
3539967,283,100.7,25069.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1611
1602524,5442,31932.0,96659.4,CREDIT,CREDIT_IN_CASH,UNKNOWN,109
493005,1681,6.0,49962.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1958
3487937,7401,183.5,50374.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1580
717850,2458,23300.0,45502.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,642
567087,1931,9335.0,27359.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,374
694549,2375,14.6,56853.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1215
1962914,6649,1671.0,42328.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,2049
1249559,4273,9909.0,43379.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1504
180659,612,14.6,13318.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1429
979947,3343,22592.0,51040.1,CREDIT,CREDIT_IN_CASH,UNKNOWN,1929
929706,3168,3292.0,19863.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,772
410952,1399,1440.0,25289.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1838
2571634,8489,7370.0,34696.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1380
412079,1402,1920.0,28749.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1474
661426,2257,1200.0,17193.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,678
452830,1539,6300.0,11006.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,HOUSEHOLD,1473
1311483,4478,14.6,47317.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,423
1039612,3555,20548.0,40536.1,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1958
1065258,3640,6454.0,20070.6,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,922
868643,2958,14.6,13813.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1491
2893204,9583,3300.0,52205.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,888
671457,2293,6745.0,33454.1,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,588
1013801,3466,2499.0,49132.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1556
3442731,1543,191.7,42498.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1429
647999,2216,8823.0,110335.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,586
1345047,4596,2700.0,-1652.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,544
860773,2932,12069.0,31483.9,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,616
3509106,9203,251.8,84375.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1611
1036483,3545,14.6,55222.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,880
145644,487,11529.0,21036.3,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1478
3590311,1817,173.4,42649.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1580
85955,288,3257.0,25033.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1892
596394,2030,14.6,46435.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2098
3451282,5092,60.4,15317.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1307
315347,1076,1200.0,37712.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1483
427688,1453,26486.0,86241.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,733
691128,2361,14.6,20951.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,972
1016365,3474,3304.0,16970.2,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1045
829359,2824,7289.0,80544.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2015
218214,742,4263.0,25732.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,948
935987,3195,1253.0,61921.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2112
3467572,3883,234.9,57140.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1733
1273098,4354,10773.0,44399.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,1922
2502132,8260,14.6,47298.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,910
242386,830,16623.0,57093.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,584
129137,433,14.6,20539.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1399
104445,356,14.6,65455.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1856
1982542,6715,30.0,13008.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1884
18122,61,668.0,17796.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,642
946136,3225,14.6,46864.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1580
313982,1071,15000.0,42494.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,219
706768,2420,14.6,13097.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1856
544761,1852,2199.0,20966.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1803
3353942,11138,30.0,40611.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2159
1085996,3710,14.6,24992.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1185
25218,83,3940.0,23116.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1622
3594242,1928,159.8,32687.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1703
627491,2143,14200.0,15133.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1737
2383569,7859,14.6,52526.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1672
588190,2002,6060.0,24640.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,217
530910,1809,30.0,22108.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1856
3658894,3891,288.6,70199.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1976
36201,116,15900.0,32026.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1745
3649553,3615,122.5,28712.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1976
635530,2170,49847.0,94695.5,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1647
2075025,7033,2900.0,9082.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1806
43716,146,14.6,22517.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1794
199725,678,1929.0,11475.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2111
3468737,4121,104.9,39597.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1215
132487,444,2100.0,46595.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2175
612615,2087,8100.0,72284.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,197
1441000,4907,1253.0,13869.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1830
3652477,3697,80.6,16542.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1491
165838,555,34002.0,71341.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,526
3440545,1066,266.1,53567.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1733
1105198,3776,23108.0,74123.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,2080
284772,978,6556.0,66567.2,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1928
3293158,10942,30.0,72199.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1276
3598524,2054,168.3,41687.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1580
3462839,2633,287.8,87267.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1368
3533028,75,73.4,18030.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1154
504451,1722,31578.0,65355.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,2171
717098,2456,14.6,52983.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1764
655982,2242,5538.0,50471.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1738
325497,1112,3000.0,110905.2,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,2167
820229,2793,3452.0,25874.8,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2167
326888,1116,1320.0,38915.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1315
3654226,3749,283.9,66634.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1884
322,2,20236.0,48909.9,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1380
994003,3391,16980.0,53510.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,2018
1973480,6686,29123.0,53681.5,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1558
1088110,3717,6300.0,24907.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1644
3182528,10558,14.6,48448.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1307
362971,1234,14.6,24357.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,880
987517,3368,14447.0,14647.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1009
474567,1617,1536.0,26417.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1407
852594,2905,9600.0,55771.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1840
1501767,5120,3008.0,11773.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,647
752314,2567,2574.0,13663.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2016
379994,1291,2100.0,17797.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1929
856512,2919,13963.0,33072.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1350
29355,96,2140.0,74094.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,952
135363,454,2400.0,31550.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2173
613860,2092,37007.0,64440.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1945
1017914,3478,4906.0,14328.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1100
2634821,8713,600.0,27372.9,CREDIT,CREDIT_IN_CASH,UNKNOWN,2018
3612031,2479,94.3,24457.8,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
33554,107,4200.0,30286.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,458
4125,17,3800.0,34935.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1888
260966,893,14.6,71344.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2098
961461,3275,4500.0,20335.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1384
12051,40,33.0,35575.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,917
126105,425,2390.0,19785.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,768
591275,2011,100.0,15897.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,713
3123031,10364,6262.0,43949.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1044
3617696,2639,171.1,32079.8,CREDIT,UNKNOWN,INTEREST_CREDITED,760
866737,2951,743.0,42518.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,585
947600,3229,13400.0,36242.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,1501
1326425,4526,800.0,26933.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,739
795480,2710,14.6,74902.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1733
74425,245,15100.0,36274.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1588
150560,502,840.0,22420.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2096
2730991,9034,14.6,41146.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1246
1053801,3605,24697.0,37698.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1925
808565,2755,504.0,21232.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1989
648440,2216,22100.0,95797.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,854
1959203,6636,11700.0,18342.1,CREDIT,CREDIT_IN_CASH,UNKNOWN,785
924956,3152,2400.0,47470.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,344
1018856,3480,10300.0,58334.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1066
3571364,1239,58.9,13740.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1338
1073543,3669,12246.0,29315.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,1983
3625313,2867,332.6,86140.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1703
216570,737,4497.0,24560.3,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2110
1241020,4245,14.6,49290.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1215
1005333,3431,1200.0,35242.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1946
451590,1535,2757.0,61093.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1892
929546,3167,19000.0,49085.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1874
366983,1247,21900.0,55087.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1598
1151246,3937,14.6,17656.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1368
2676038,8856,9700.0,98079.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1658
1028836,3513,14.6,67915.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2068
775067,2645,11231.0,39947.6,CREDIT,CREDIT_IN_CASH,UNKNOWN,1412
670353,2288,1100.0,75802.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1848
1982569,6715,2500.0,22333.1,CREDIT,CREDIT_IN_CASH,UNKNOWN,797
53636,179,18713.0,35213.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1769
730760,2497,14.6,21160.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1733
209439,711,10564.0,65358.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,2109
194377,658,640.0,19583.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1485
717027,2456,18403.0,57190.3,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1998
2895459,9591,35456.0,76632.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,309
3327508,11054,11506.0,48783.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1260
3450257,4156,123.8,35038.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1945
510105,1746,16300.0,86067.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1950
129212,433,3300.0,27214.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1662
941963,3214,14.6,15588.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2006
740656,2528,1760.0,18333.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1228
3596776,2001,341.7,86969.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1641
930479,3171,3102.0,18977.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1406
657242,2245,20000.0,76702.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1888
3665034,4476,78.4,15761.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1491
1008740,3445,14.6,26098.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1519
3491710,7721,189.1,41489.6,CREDIT,UNKNOWN,INTEREST_CREDITED,1976
3536984,197,173.7,36164.0,CREDIT,UNKNOWN,INTEREST_CREDITED,515
3537669,216,77.8,16662.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1976
497774,1696,3239.0,22337.9,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,2081
635846,2170,100.0,73533.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2068
682992,2331,3113.0,16855.7,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1316
959036,3267,14.6,36157.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1884
107888,365,14.6,10712.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,760
309166,1053,14.6,28844.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,729
462087,1570,350.0,23824.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1086
3651155,3661,68.4,14975.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1672
408838,1392,1400.0,39785.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,401
636574,2174,3481.0,22221.8,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,2126
3585231,1670,74.0,17051.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1399
695286,2378,39122.0,83875.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,970
3651794,3680,93.2,23362.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1703
757646,2584,582.0,19529.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,339
62635,207,600.0,26562.4,CREDIT,CREDIT_IN_CASH,UNKNOWN,385
3463734,2817,103.1,27492.6,CREDIT,UNKNOWN,INTEREST_CREDITED,150
3610302,2427,146.8,36194.3,CREDIT,UNKNOWN,INTEREST_CREDITED,2129
860866,2932,5100.0,26937.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,253
3629713,2996,200.4,49150.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1764
3595830,1972,109.6,26884.6,CREDIT,UNKNOWN,INTEREST_CREDITED,1460
3609288,2396,89.0,22344.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1519
662729,2262,5400.0,95436.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2064
96164,327,10300.0,58455.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1592
778774,2654,3800.0,15795.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2096
2775876,9188,66.0,27432.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,249
840297,2861,2613.0,21864.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1624
3612823,2498,113.2,25372.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1429
604188,2056,4200.0,34287.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1626
859973,2930,14.6,71894.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1733
635631,2170,1468.0,60441.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1073
739011,2524,6263.0,30193.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1077
594343,2023,1684.0,42425.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1228
81644,273,100.0,38450.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2098
3578235,1453,282.1,102525.9,CREDIT,UNKNOWN,INTEREST_CREDITED,910
66245,220,14.6,20247.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,545
617399,2106,18513.0,33175.9,CREDIT,CREDIT_IN_CASH,UNKNOWN,1623
276438,946,18100.0,36659.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1545
3577655,1437,64.5,15950.6,CREDIT,UNKNOWN,INTEREST_CREDITED,1580
3468162,4009,252.4,54055.2,CREDIT,UNKNOWN,INTEREST_CREDITED,729
3574368,1332,315.6,84135.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1519
581451,1978,7200.0,40179.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1473
1071835,3662,14.6,44016.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1764
65417,218,14880.0,57792.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1597
684669,2336,2000.0,20864.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,908
1544845,5256,11700.0,32849.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,951
416321,1413,14163.0,34107.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1375
1531579,5215,7000.0,29444.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,451
10195,35,5446.0,18709.8,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1220
352523,1197,1000.0,19816.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,309
355807,1205,14.6,32457.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,910
3628939,2973,203.6,49022.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1550
979020,3339,14.6,24782.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2098
3456035,8998,21.1,8471.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1764
1535230,5228,100.0,59269.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1672
1436936,4894,8100.0,70717.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1086
819148,2789,2965.0,77739.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2141
3654247,3750,86.0,17360.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1154
1002666,3422,9212.0,18815.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1556
3676595,6461,179.7,56281.6,CREDIT,UNKNOWN,INTEREST_CREDITED,1976
25401,83,1100.0,33102.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,285
866779,2951,743.0,60075.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1865
83819,280,4694.0,22462.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,494
848536,2890,23188.0,36253.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1893
582810,1982,14.6,46631.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1976
41541,137,23209.0,24109.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1316
147485,494,18816.0,44459.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,796
199070,675,1400.0,43378.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1754
544792,1852,300.0,23155.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,742
368826,1254,22887.0,67224.4,CREDIT,CREDIT_IN_CASH,UNKNOWN,2158
3628016,2947,111.2,28071.3,CREDIT,UNKNOWN,INTEREST_CREDITED,2098
293725,1004,8963.0,90809.9,CREDIT,CREDIT_IN_CASH,UNKNOWN,1778
91185,309,1440.0,28103.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2013
778370,2653,6280.0,34625.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1889
300693,1024,3112.0,6833.5,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1624
875390,2982,23.0,78483.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2136
12651,42,1592.0,25857.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,2076
479162,1633,2145.0,25926.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1198
1129498,3860,18728.0,39655.1,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1982
871694,2970,9658.0,32488.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1897
3460442,1884,97.7,26924.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1580
2258899,7454,2306.0,12393.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1710
3509979,9307,308.2,79399.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1825
3650690,3647,173.0,39604.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1703
3565452,1058,255.1,63687.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1399
448954,1527,5624.0,95844.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1617
545526,1856,3261.0,29338.1,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1741
3451350,5125,25.6,597.1,CREDIT,UNKNOWN,INTEREST_CREDITED,2098
582189,1980,2280.0,18322.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1867
3349097,11123,14.6,12333.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2006
3533449,86,101.0,24991.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1733
397099,1351,600.0,17610.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1693
962268,3279,24560.0,95324.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,1217
793130,2702,14.6,20525.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2006
2766804,9153,1451.0,46173.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1927
140787,471,4695.0,42257.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1954
710700,2430,14.6,11787.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,910
3535452,153,77.0,14758.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1703
1022470,3489,4900.0,27607.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1486
348073,1180,1560.0,85529.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1991
1424259,4852,7191.0,25635.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1715
51787,173,735.0,27348.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1503
1292384,4416,1400.0,36215.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,866
364663,1239,3744.0,19839.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1438
1650312,5593,6049.0,62032.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,2073
997809,3407,6203.0,42373.3,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,2089
403193,1373,2962.0,18652.8,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1501
2791755,9242,900.0,36752.1,CREDIT,CREDIT_IN_CASH,UNKNOWN,2159
137613,461,9500.0,55129.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1993
3468333,4078,193.6,42848.6,CREDIT,UNKNOWN,INTEREST_CREDITED,880
2415129,7965,6300.0,29905.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2163
2248610,7424,8802.0,59242.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1589
3604191,2241,249.1,61481.8,CREDIT,UNKNOWN,INTEREST_CREDITED,2159
226974,772,700.0,51670.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,759
61728,204,14.6,13327.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1641
248917,855,20649.0,48487.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,1072
3670149,5317,142.7,30258.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1611
497993,1697,3332.0,17865.3,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1896
1011898,3458,1153.0,17287.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1654
2780858,9203,29400.0,52012.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1257
1018869,3480,16600.0,52155.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1456
615823,2099,20900.0,31746.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1061
1085080,3706,5100.0,26616.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1429
331002,1127,9400.0,57451.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1706
3444208,1880,132.4,24476.5,CREDIT,UNKNOWN,INTEREST_CREDITED,760
3620764,2732,431.2,54853.6,CREDIT,UNKNOWN,INTEREST_CREDITED,1764
309651,1054,500.0,29646.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,1009
2106711,7133,44.0,14555.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1746
161297,540,14.6,18170.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1154
12900,43,6589.0,50429.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1981
670378,2288,14.6,50592.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1338
3676573,6453,93.7,20393.1,CREDIT,UNKNOWN,INTEREST_CREDITED,2190
3552769,678,112.2,25870.7,CREDIT,UNKNOWN,INTEREST_CREDITED,668
1395337,4753,14.6,40528.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1611
390125,1327,1400.0,29849.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1718
3478015,8982,227.6,54194.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1429
3619651,2695,259.1,58089.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1429
153785,515,14.6,13044.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1460
952130,3246,2080.0,15133.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1799
625123,2134,3118.0,50749.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1985
3671990,5628,168.9,42057.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1338
542423,1844,14.6,20411.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,576
935275,3192,2518.0,39394.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2082
3638081,3252,78.8,18362.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1399
2567258,8475,495.0,33298.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1258
968187,3299,30.0,60057.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,2006
2820305,9337,2172.0,23572.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,649
443798,1509,4560.0,16470.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,886
866611,2950,8200.0,29392.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2054
679906,2321,14.6,93545.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,880
631390,2155,420.0,18859.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1269
1021352,3487,4000.0,56370.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1450
3661663,3979,90.1,21287.9,CREDIT,UNKNOWN,INTEREST_CREDITED,2037
3562562,973,15.0,6375.0,CREDIT,UNKNOWN,INTEREST_CREDITED,698
1046472,3579,3460.0,82210.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1413
996790,3402,1800.0,32946.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1109
1085605,3709,1317.0,49317.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1955
420603,1426,2681.0,16249.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1224
137642,461,960.0,35888.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1097
95116,323,3025.0,19800.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1868
49356,165,1788.0,26953.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1159
683569,2333,1100.0,29640.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1053
1070437,3656,1800.0,39431.4,CREDIT,CREDIT_IN_CASH,UNKNOWN,1721
3681537,1888,158.5,8054.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1611
16994,57,20200.0,38258.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2070
9490,33,25300.0,53772.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,717
2715596,8982,33294.0,34394.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,284
15157,50,4600.0,21616.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1545
840412,2861,14.6,16523.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,545
371076,1263,4554.0,25865.2,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1728
273335,936,224.0,18859.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1988
866510,2950,8653.0,43460.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1713
975457,3323,14.6,49366.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,576
362973,1234,14.6,15103.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,941
3353027,11135,3800.0,51343.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2148
339870,1153,4918.0,19525.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,799
3582463,1584,119.9,27738.7,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
3606464,2315,125.1,26916.6,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
620195,2118,9871.0,52399.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1716
1069868,3654,4600.0,30242.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,463
3462589,2548,16.7,5434.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1125
1097287,3749,23100.0,54903.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1437
964221,3286,11785.0,48390.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1382
502015,1711,188.0,24650.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2165
756318,2581,4769.0,29036.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1162
1027414,3509,5812.0,35093.5,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1099
672994,2298,14.6,39484.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1672
3441814,1305,189.4,46427.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1094
1598956,5428,5500.0,7859.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,HOUSEHOLD,863
3215977,10670,14.6,74082.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1703
599632,2040,3200.0,33092.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1451
962177,3278,24000.0,51779.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1486
1313324,4484,13200.0,31407.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1310
784523,2673,4400.0,32795.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1201
44724,150,1900.0,38109.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,1108
3640675,3328,101.2,25130.9,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
267367,915,58041.0,90382.3,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1985
3037068,10068,5400.0,61337.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1846
814113,2771,14.6,33226.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,637
634539,2167,12800.0,39404.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,819
3664898,4456,356.7,86792.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1794
1244917,4259,9516.0,105938.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1442
1069608,3654,19930.0,89792.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,1378
866984,2951,1080.0,41213.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,438
2766733,9153,7563.0,54586.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1952
709350,2427,2342.0,16601.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,1318
1049693,3591,4261.0,56169.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1439
73267,243,2100.0,23997.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,749
351195,1193,3360.0,22685.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,782
3534357,115,175.0,39494.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1429
1140330,3898,2650.0,27436.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1102
1273936,4356,14.6,-2952.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1884
1488320,5072,1863.0,31656.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1532
1238990,4240,4892.0,36221.6,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,208
398489,1357,3435.0,46984.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1923
3591426,1844,58.1,14221.9,CREDIT,UNKNOWN,INTEREST_CREDITED,180
2791644,9242,1700.0,35282.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2168
151494,506,3011.0,74891.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1988
3664044,4352,242.3,56639.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1915
3600189,2114,146.6,36020.2,CREDIT,UNKNOWN,INTEREST_CREDITED,1611
3633311,3113,93.1,18397.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1884
2247084,7418,17800.0,15560.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,HOUSEHOLD,1443
3437521,419,138.9,31984.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1246
861981,2935,2100.0,14541.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1166
706354,2419,5161.0,50868.4,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,612
1838503,6226,10800.0,72409.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2093
3592486,1877,157.7,34883.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1399
3627245,2926,151.4,35674.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1519
3664498,4418,142.4,34570.4,CREDIT,UNKNOWN,INTEREST_CREDITED,1002
3466356,3553,180.3,33862.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1185
540988,1838,8900.0,46394.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1110
465774,1584,100.0,28557.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1256
3677688,6688,207.4,50428.7,CREDIT,UNKNOWN,INTEREST_CREDITED,2068
711293,2432,5880.0,29933.6,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1438
3659674,3915,179.8,29292.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1276
629203,2148,3556.0,20924.6,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1318
2780686,9203,2670.0,70039.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,1657
3653336,3724,375.9,78116.0,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
844663,2876,5231.0,42826.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,740
3524641,10807,371.1,73334.6,CREDIT,UNKNOWN,INTEREST_CREDITED,2006
738904,2523,1100.0,14401.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,1060
575064,1958,14.6,28612.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,849
3644579,3465,157.3,37750.0,CREDIT,UNKNOWN,INTEREST_CREDITED,880
1666031,5650,10530.0,30567.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1738
281722,965,4600.0,18429.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,1496
601244,2047,2670.0,39236.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1984
625423,2135,14.6,26762.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1884
2043823,6927,7000.0,35056.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1131
1051466,3595,5900.0,21486.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1715
138519,463,16500.0,51834.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1337
970763,3308,22399.5,51512.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,1985
82821,277,100.0,21859.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1125
998922,3410,14.6,38866.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1399
2374399,7828,720.0,16199.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1847
1127624,3851,15200.0,37869.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1638
3560629,914,84.1,20919.0,CREDIT,UNKNOWN,INTEREST_CREDITED,1580
3532,15,17065.0,50240.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,794
894242,3049,1961.0,28793.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1437
754696,2575,6618.0,21490.2,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,2108
23045,75,7800.0,25398.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1314
638446,2179,10399.0,95744.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1915
784909,2674,9300.0,29045.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1942
1081392,3693,15447.0,112332.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1959
1071736,3661,14.6,15627.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1945
476432,1624,1120.0,32214.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1406
386038,1312,5735.0,26502.1,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1621
3574696,1342,247.4,67398.7,CREDIT,UNKNOWN,INTEREST_CREDITED,2068
1657529,5622,3900.0,37987.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1119
701502,2401,6852.0,35497.5,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1526
3651369,3669,70.4,13098.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1641
3639017,3277,246.6,52040.2,CREDIT,UNKNOWN,INTEREST_CREDITED,545
526790,1797,7800.0,58440.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1957
757698,2584,582.0,19376.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1921
1135060,3878,2700.0,28974.4,CREDIT,CREDIT_IN_CASH,UNKNOWN,2114
3607366,2342,68.9,16994.0,CREDIT,UNKNOWN,INTEREST_CREDITED,515
3460997,2041,184.1,43530.5,CREDIT,UNKNOWN,INTEREST_CREDITED,2129
400965,1366,7626.0,36409.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,2103
240431,820,5640.0,52601.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1820
29426,96,46.0,33481.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,INSURANCE_PAYMENT,918
59371,198,4299.0,24405.5,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,923
2729887,9030,10300.0,45624.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1770
62259,207,5135.0,19050.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1927
501658,1709,1400.0,53386.0,WITHDRAWAL,CC_WITHDRAWAL,UNKNOWN,1835
855675,2915,400.0,28637.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,533
1387921,4729,1920.0,195.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1854
2789064,9235,12800.0,34631.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1444
2969244,9833,14.6,29407.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,364
3349106,11123,6400.0,32808.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1417
427160,1451,3734.0,14086.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1741
934634,3189,14.6,26982.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1580
542095,1843,800.0,28134.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,689
616938,2103,14.6,13119.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1976
21410,71,968.0,42920.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1709
990495,3376,13500.0,41276.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1506
3553634,702,70.7,15581.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1764
357315,1211,1900.0,29797.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1976
538688,1832,20721.0,21821.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1198
1614771,5483,16002.0,58150.1,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1924
1132983,3871,14.6,38291.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1002
2382939,7857,6900.0,30643.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,730
3393789,11265,7618.0,25051.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1524
959341,3268,634.0,19349.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,587
1365636,4659,14.6,25738.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1094
716153,2453,2190.0,22362.0,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1191
2887889,9560,37500.0,72744.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2164
155427,520,750.0,32966.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2148
3207586,10645,4400.0,46436.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1962
3677060,6555,131.4,33955.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1185
3649429,3612,255.6,60439.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1825
1090776,3728,6000.0,27918.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,954
93943,319,1800.0,65173.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1107
687472,2347,6498.0,26592.0,CREDIT,COLLECTION_FROM_OTHER_BANK,OLD_AGE_PENSION,1439
459167,1561,14.6,46279.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1641
89421,301,2925.0,17199.7,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1648
1391864,4743,2793.0,46256.5,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,605
888447,3030,293.0,19709.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1646
3641186,3350,72.9,17626.3,CREDIT,UNKNOWN,INTEREST_CREDITED,1945
275560,943,14.6,14458.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,941
8329,30,2590.0,66053.0,UNKNOWN,WITHDRAWAL_IN_CASH,UNKNOWN,976
1114767,3807,12800.0,50162.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1307
1272022,4350,5400.0,66556.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1205
730086,2496,4982.0,22633.3,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1047
197501,669,240.0,14161.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1466
3183781,10562,11700.0,50280.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2048
136819,458,3500.0,33668.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1682
3590365,1820,161.0,33765.9,CREDIT,UNKNOWN,INTEREST_CREDITED,729
3649087,3601,188.5,45849.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1580
222670,757,2289.0,68017.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2075
1017476,3477,3199.0,18202.1,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,645
3599273,2078,140.3,33443.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1733
3628408,2958,69.9,17364.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1703
1001082,3417,1000.0,17661.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1112
841161,2863,5223.0,32670.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1349
3466702,3620,104.4,24309.6,CREDIT,UNKNOWN,INTEREST_CREDITED,1825
59585,198,1760.0,24012.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,914
2546425,8405,22127.0,40498.3,CREDIT,CREDIT_IN_CASH,UNKNOWN,1496
790736,2696,3115.0,17076.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1801
785977,2677,2760.0,16310.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2096
372340,1268,14.6,22884.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,484
845454,2879,10790.0,40212.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1893
556620,1894,22100.0,45327.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1606
1265668,4328,4700.0,29533.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1402
1025874,3503,20054.0,59637.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,947
2326207,7674,3937.3,77547.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,LOAN_PAYMENT,1592
545595,1856,725.0,24742.8,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,2013
3606668,2322,216.6,50296.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1033
691213,2361,3900.0,16227.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1800
3525534,10904,84.0,21545.8,CREDIT,UNKNOWN,INTEREST_CREDITED,1641
3625206,2865,114.0,24083.1,CREDIT,UNKNOWN,INTEREST_CREDITED,1519
478406,1630,2550.0,13808.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1113
973143,3316,9655.0,38144.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,559
786508,2680,14.6,41384.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1580
3564471,1027,76.4,20004.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1794
3546449,477,185.1,40422.7,CREDIT,UNKNOWN,INTEREST_CREDITED,1125
869304,2960,3400.0,31414.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1696
1039159,3554,500.0,28561.8,CREDIT,CREDIT_IN_CASH,UNKNOWN,1262
925409,3153,14.6,31406.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1580
235150,802,14.6,32850.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1672
612956,2088,3240.0,21556.9,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,402
994111,3391,6082.0,21501.2,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,918
326882,1116,5160.0,28818.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1161
240762,821,1500.0,30637.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1410
442941,1507,21273.0,53317.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1131
113841,384,31800.0,52561.7,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1867
949073,3235,6149.0,42184.7,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1891
3456982,9703,125.8,24257.5,CREDIT,UNKNOWN,INTEREST_CREDITED,2068
935312,3192,3720.0,42162.9,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1654
33863,108,8500.0,41666.0,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1218
3581411,1551,103.1,23473.5,CREDIT,UNKNOWN,INTEREST_CREDITED,1915
1170491,4013,2500.0,28354.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,610
3387011,11244,14.6,77077.1,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1764
434341,1476,3467.0,26101.4,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,674
3450106,4082,221.9,22227.2,CREDIT,UNKNOWN,INTEREST_CREDITED,880
999920,3413,2200.0,28368.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,373
733565,2507,4556.0,37349.1,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1990
885833,3018,4200.0,17710.8,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,1805
957189,3261,200.0,200.0,CREDIT,CREDIT_IN_CASH,UNKNOWN,187
614297,2094,3433.0,22069.4,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1807
100523,344,13948.0,45670.7,CREDIT,CREDIT_IN_CASH,UNKNOWN,1008
867413,2953,580.0,55544.5,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1982
3645743,3497,168.9,40098.9,CREDIT,UNKNOWN,INTEREST_CREDITED,1764
864928,2944,615.0,30759.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1769
496484,1692,14.6,14666.3,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1338
388543,1321,6037.5,25559.2,CREDIT,CREDIT_IN_CASH,UNKNOWN,1616
805045,2742,14.6,46372.6,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1945
1245096,4259,10800.0,69256.4,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,2151
500732,1706,3087.0,52203.0,CREDIT,COLLECTION_FROM_OTHER_BANK,UNKNOWN,1684
2505133,8268,5870.0,26527.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,UNKNOWN,1800
441718,1501,2292.0,31289.6,WITHDRAWAL,REMITTANCE_TO_OTHER_BANK,HOUSEHOLD,1989
2583286,8533,14.6,123022.5,WITHDRAWAL,WITHDRAWAL_IN_CASH,PAYMENT_FOR_STATEMENT,1246
2956243,9790,5464.0,88029.5,CREDIT,CREDIT_IN_CASH,UNKNOWN,2066
1549003,5270,1800.0,70655.2,WITHDRAWAL,WITHDRAWAL_IN_CASH,UNKNOWN,551



================================================
File: data/tests/fake_associations.parquet
================================================
[Non-text file]


================================================
File: data/tests/fake_associations_theil.parquet
================================================
[Non-text file]


================================================
File: data/tests/fake_test_sample_numerical_encoded.parquet
================================================
[Non-text file]


================================================
File: data/tests/real_associations.parquet
================================================
[Non-text file]


================================================
File: data/tests/real_associations_theil.parquet
================================================
[Non-text file]


================================================
File: data/tests/real_test_sample_numerical_encoded.feather
================================================
[Non-text file]


================================================
File: data/tests/real_test_sample_numerical_encoded.parquet
================================================
[Non-text file]


================================================
File: docs/make.bat
================================================
@ECHO OFF

pushd %~dp0

REM Command file for Sphinx documentation

if "%SPHINXBUILD%" == "" (
	set SPHINXBUILD=sphinx-build
)
set SOURCEDIR=source
set BUILDDIR=build

if "%1" == "" goto help

%SPHINXBUILD% >NUL 2>NUL
if errorlevel 9009 (
	echo.
	echo.The 'sphinx-build' command was not found. Make sure you have Sphinx
	echo.installed, then set the SPHINXBUILD environment variable to point
	echo.to the full path of the 'sphinx-build' executable. Alternatively you
	echo.may add the Sphinx directory to PATH.
	echo.
	echo.If you don't have Sphinx installed, grab it from
	echo.http://sphinx-doc.org/
	exit /b 1
)

%SPHINXBUILD% -M %1 %SOURCEDIR% %BUILDDIR% %SPHINXOPTS% %O%
goto end

:help
%SPHINXBUILD% -M help %SOURCEDIR% %BUILDDIR% %SPHINXOPTS% %O%

:end
popd



================================================
File: docs/Makefile
================================================
# Minimal makefile for Sphinx documentation
#

# You can set these variables from the command line, and also
# from the environment for the first two.
SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = source
BUILDDIR      = build

# Put it first so that "make" without argument is like "make help".
help:
	@$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)

.PHONY: help Makefile

# Catch-all target: route all unknown targets to Sphinx using the new
# "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
%: Makefile
	@$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)



================================================
File: docs/requirements.txt
================================================
m2r2
sphinx-rtd-theme


================================================
File: docs/source/conf.py
================================================
# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

import sys

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
from datetime import datetime
from pathlib import Path

import tomllib

# sys.path.insert(0, os.path.abspath('.'))
project_base_path = Path(__file__).parents[2]
sys.path.insert(0, project_base_path.as_posix())

# -- Project information -----------------------------------------------------

project = 'table evaluator'
copyright = f'{datetime.now().year}, Bauke Brenninkmeijer'  # noqa: A001
author = 'Bauke Brenninkmeijer'

# The full version, including alpha/beta/rc tags
release = tomllib.loads(Path(project_base_path / 'pyproject.toml').read_text())['tool']['poetry']['version']


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'm2r2',
    'sphinx_rtd_theme',
    'sphinx.ext.githubpages',
    'sphinx.ext.napoleon',
    # 'sphinx.ext.coverage',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['tests/*', 'notebooks/*']


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_theme_options = {
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location': 'bottom',
    'style_external_links': False,
    # Toc options
    'collapse_navigation': True,
    'sticky_navigation': True,
    'navigation_depth': 4,
    'includehidden': True,
    'titles_only': False,
}

# Napoleon settings
napoleon_include_init_with_doc = True
napoleon_google_docstring = True
napoleon_include_private_with_doc = True



================================================
File: docs/source/index.rst
================================================
.. table evaluator documentation master file, created by
   sphinx-quickstart on Wed Jun 24 17:45:26 2020.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to table evaluator's documentation!
===========================================

.. toctree::
   :maxdepth: 2
   :caption: Contents:

   table_evaluator
   plots
   metrics
   utils

Welcome to the documentation for TableEvaluator! Please see the contents/sidebar for a high level overview. The library consists of two main parts. First, the TableEvaluator class, which does most of the heavy lifting and then Helper Functions that provide extra functionality and reusable parts for TableEvaluator.

.. mdinclude:: ../../README.md

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`



================================================
File: docs/source/metrics.rst
================================================
Metrics
===================
.. toctree::
   :maxdepth: 2
   :caption: Contents:


.. automodule:: table_evaluator.metrics
   :members:



================================================
File: docs/source/plots.rst
================================================
Plots
===================
.. toctree::
   :maxdepth: 2
   :caption: Contents:


.. automodule:: table_evaluator.plots
   :members:



================================================
File: docs/source/table_evaluator.rst
================================================
TableEvaluator
===================
.. toctree::
   :maxdepth: 2
   :caption: Contents:

.. automodule:: table_evaluator.table_evaluator
   :members:



================================================
File: docs/source/utils.rst
================================================
Utils
===================
.. toctree::
   :maxdepth: 3
   :caption: Contents:


.. automodule:: table_evaluator.utils
   :members:



================================================
File: docs/source/_static/.gitkeep
================================================



================================================
File: docs/source/_templates/.gitkeep
================================================





================================================
File: notebooks/Jupyter-UI.ipynb
================================================
# Jupyter notebook converted to Python script.

import pandas as pd

pd.DataFrame.from_dict({'a': [2], 'b':[3]}).T
# Output:
#      0

#   a  2

#   b  3

statistics, p_value = ks_2samp(real.trans_amount, fake.trans_amount)
# Output:
#   Ks_2sampResult(statistic=0.178, pvalue=2.435958470075192e-14)

from IPython.core.display import Markdown, display

class EvaluationResult:
    def __init__(self, name, content, prefix=None, appendix=None, notebook=False):
        self.name = name
        self.prefix = prefix
        self.content = content
        self.appendix = appendix
        self.notebook = notebook

    def show(self):
        if self.notebook:
            output = widgets.Output()
            with output:
                display(Markdown(f'## {self.name}'))
                if self.prefix: display(Markdown(self.prefix))
                display(self.content)
                if self.appendix: display(Markdown(self.appendix))
            display(output)

import ipywidgets as widgets

er = EvaluationResult('Jensen-Shannon distance', js_df, notebook=True, appendix=f' Mean: {js_df.js_distance.mean(): .3f}')

er.show()
# Output:
#   Output()

print(str(js_df))
# Output:
#                        js_distance

#   col_name                        

#   trans_amount            0.089130

#   balance_after_trans     0.081193

#   mean                    0.085162




================================================
File: notebooks/KL-divergence-test.ipynb
================================================
# Jupyter notebook converted to Python script.

%matplotlib widget

import numpy as np
import pandas as pd
import scipy

import os

os.listdir()
# Output:
#   ['.ipynb_checkpoints', 'Jupyter-UI.ipynb', 'KL-divergence-test.ipynb']

os.chdir('..')

real = pd.read_csv('data/fake_test_sample.csv')
fake = pd.read_csv('data/real_test_sample.csv')

real
# Output:
#        trans_id  account_id  trans_amount  balance_after_trans  trans_type  \

#   0      911598        3001       13619.0              92079.0      CREDIT   

#   1      377371        1042        4174.0              32470.0  WITHDRAWAL   

#   2      970113        3225         274.0              57608.0  WITHDRAWAL   

#   3      450090        1489         301.0              36258.0      CREDIT   

#   4     1120409        3634        6303.0              50975.0  WITHDRAWAL   

#   ..        ...         ...           ...                  ...         ...   

#   995   1148391        3740         354.0              43688.0  WITHDRAWAL   

#   996   3605655        4099          78.0              23258.0      CREDIT   

#   997   1058574        3512           1.0              13975.0  WITHDRAWAL   

#   998   1264018        4317         -18.0              64244.0  WITHDRAWAL   

#   999   3641940        4776          41.0              29198.0  WITHDRAWAL   

#   

#                   trans_operation         trans_k_symbol  trans_date  

#   0    COLLECTION_FROM_OTHER_BANK                UNKNOWN        1885  

#   1      REMITTANCE_TO_OTHER_BANK              HOUSEHOLD        1483  

#   2            WITHDRAWAL_IN_CASH                UNKNOWN        1855  

#   3                CREDIT_IN_CASH                UNKNOWN         885  

#   4      REMITTANCE_TO_OTHER_BANK              HOUSEHOLD        1211  

#   ..                          ...                    ...         ...  

#   995    REMITTANCE_TO_OTHER_BANK              HOUSEHOLD        1001  

#   996                     UNKNOWN      INTEREST_CREDITED         692  

#   997          WITHDRAWAL_IN_CASH  PAYMENT_FOR_STATEMENT         794  

#   998          WITHDRAWAL_IN_CASH  PAYMENT_FOR_STATEMENT        2065  

#   999          WITHDRAWAL_IN_CASH      INTEREST_CREDITED        1154  

#   

#   [1000 rows x 8 columns]

from scipy import stats

stats.entropy([0.1, 0.3, 0.2], [0.2, 0.1, 0.3])
# Output:
#   0.29862657820467575

real.describe(include='all')
# Output:
#               trans_id    account_id  trans_amount  balance_after_trans  \

#   count   1.000000e+03   1000.000000   1000.000000          1000.000000   

#   unique           NaN           NaN           NaN                  NaN   

#   top              NaN           NaN           NaN                  NaN   

#   freq             NaN           NaN           NaN                  NaN   

#   mean    1.389648e+06   2739.289000   4110.665000         37850.953000   

#   std     1.264652e+06   2381.642554   7506.175593         21053.935848   

#   min     6.684100e+04     -2.000000   -752.000000          9374.000000   

#   25%     4.324900e+05    983.750000     51.000000         21266.500000   

#   50%     8.703035e+05   2132.500000    879.000000         32747.500000   

#   75%     2.317930e+06   3598.000000   4556.000000         49173.500000   

#   max     3.683293e+06  11673.000000  49535.000000        118380.000000   

#   

#           trans_type     trans_operation trans_k_symbol   trans_date  

#   count         1000                1000           1000  1000.000000  

#   unique           3                   6              8          NaN  

#   top     WITHDRAWAL  WITHDRAWAL_IN_CASH        UNKNOWN          NaN  

#   freq           574                 397            460          NaN  

#   mean           NaN                 NaN            NaN  1421.764000  

#   std            NaN                 NaN            NaN   521.285573  

#   min            NaN                 NaN            NaN   187.000000  

#   25%            NaN                 NaN            NaN  1129.000000  

#   50%            NaN                 NaN            NaN  1496.000000  

#   75%            NaN                 NaN            NaN  1902.250000  

#   max            NaN                 NaN            NaN  2130.000000  

import matplotlib.pyplot as plt
# Output:
#   C:\Users\C64062\AppData\Local\Continuum\anaconda3\lib\site-packages\statsmodels\tools\_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.

#     import pandas.util.testing as tm


model = scipy.stats.gaussian_kde(real.trans_amount)
probs_real = model(np.arange(real.trans_amount.min(), real.trans_amount.max()))
plt.plot(probs_real)
# Output:
#   Canvas(toolbar=Toolbar(toolitems=[('Home', 'Reset original view', 'home', 'home'), ('Back', 'Back to previous …
#   [<matplotlib.lines.Line2D at 0x2db1c4fcd30>]

model = scipy.stats.gaussian_kde(fake.trans_amount)
probs_fake = model(np.arange(real.trans_amount.min(), real.trans_amount.max()))
plt.plot(probs_fake)
# Output:
#   [<matplotlib.lines.Line2D at 0x2db1843be48>]

np.sum(probs_real)
# Output:
#   0.818616925512345

stats.entropy(probs_real, probs_fake)
# Output:
#   0.03791587224888453

stats.entropy(probs_fake, probs_real)
# Output:
#   0.043705428486526296

"""
## Test with qcut
"""

binned_values_real, bins = pd.cut(real.trans_amount, bins=25, retbins=True)
binned_values_real
# Output:
#   0      (13328.36, 15339.84]

#   1        (3270.96, 5282.44]

#   2       (-802.287, 1259.48]

#   3       (-802.287, 1259.48]

#   4        (5282.44, 7293.92]

#                  ...         

#   995     (-802.287, 1259.48]

#   996     (-802.287, 1259.48]

#   997     (-802.287, 1259.48]

#   998     (-802.287, 1259.48]

#   999     (-802.287, 1259.48]

#   Name: trans_amount, Length: 1000, dtype: category

#   Categories (25, interval[float64]): [(-802.287, 1259.48] < (1259.48, 3270.96] < (3270.96, 5282.44] < (5282.44, 7293.92] ... (41489.08, 43500.56] < (43500.56, 45512.04] < (45512.04, 47523.52] < (47523.52, 49535.0]]

np.log2(len(real))
# Output:
#   9.965784284662087

binned_probabilities_real = binned_values_real.value_counts(normalize=True, sort=False)
binned_probs_fake = pd.cut(fake.trans_amount, bins=bins).value_counts(normalize=True, sort=False)

[(x, y) for x, y in zip(binned_probabilities_real, binned_probs_fake)]
# Output:
#   [(0.541, 0.44176706827309237),

#    (0.139, 0.16566265060240964),

#    (0.107, 0.10542168674698796),

#    (0.044, 0.06626506024096386),

#    (0.021, 0.03313253012048193),

#    (0.029, 0.029116465863453816),

#    (0.027, 0.02108433734939759),

#    (0.023, 0.024096385542168676),

#    (0.008, 0.015060240963855422),

#    (0.01, 0.015060240963855422),

#    (0.005, 0.01706827309236948),

#    (0.002, 0.01706827309236948),

#    (0.006, 0.01104417670682731),

#    (0.006, 0.004016064257028112),

#    (0.008, 0.0050200803212851405),

#    (0.009, 0.004016064257028112),

#    (0.002, 0.007028112449799197),

#    (0.003, 0.0030120481927710845),

#    (0.001, 0.004016064257028112),

#    (0.002, 0.004016064257028112),

#    (0.001, 0.002008032128514056),

#    (0.001, 0.001004016064257028),

#    (0.001, 0.001004016064257028),

#    (0.002, 0.0),

#    (0.002, 0.0030120481927710845)]

binned_probabilities_real.plot(kind='bar')
# Output:
#   <matplotlib.axes._subplots.AxesSubplot at 0x2db1849a9e8>

binned_probs_fake.plot(kind='bar')
# Output:
#   <matplotlib.axes._subplots.AxesSubplot at 0x2db1849a9e8>

stats.entropy(binned_probabilities_real.values, binned_probs_fake.values)
# Output:
#   inf

from scipy.spatial.distance import jensenshannon

jensenshannon(binned_probabilities_real.values, binned_probs_fake.values)
# Output:
#   0.12012642869928797

def jensenshannon_distance(colname, real_col, fake_col, bins=10):
    binned_values_real, bins = pd.cut(real_col, bins=bins, retbins=True)
    binned_probs_real = binned_values_real.value_counts(normalize=True, sort=False)
    binned_probs_fake = pd.cut(fake_col, bins=bins).value_counts(normalize=True, sort=False)
    return {'col_name': colname, 'js_distance': jensenshannon(binned_probs_real, binned_probs_fake)}

jensenshannon_distance('trans_amount', real.trans_amount, fake.trans_amount)
# Output:
#   {'col_name': 'trans_amount', 'js_distance': 0.08913046654586265}

from typing import Any, Dict, List

from joblib import Parallel, delayed


def js_distance_df(real: pd.DataFrame, fake: pd.DataFrame, numerical_columns: List) -> List[Dict[str, Any]]:
    assert real.columns.tolist() == fake.columns.tolist(), 'Colums are not identical between `real` and `fake`. '
    real_iter = real[numerical_columns].iteritems()
    fake_iter = fake[numerical_columns].iteritems()
    distances = Parallel(n_jobs=-1)(
        delayed(jensenshannon_distance)
        (colname, real_col, fake_col) for (colname, real_col), (_, fake_col) in zip(real_iter, fake_iter))

    distances_df = pd.DataFrame(distances)
    distances_df = distances_df.append({'col_name': 'mean', 'js_distance': distances_df.js_distance.mean()}, ignore_index=True)
    return distances_df.set_index('col_name')

js_df = js_distance_df(real, fake, numerical_columns=['trans_amount', 'balance_after_trans'])
js_df
# Output:
#                        js_distance

#   col_name                        

#   trans_amount            0.089130

#   balance_after_trans     0.081193

#   mean                    0.085162

from scipy.stats import ks_2samp

pd.DataFrame.from_dict({'a': [2], 'b':[3]}).T
# Output:
#      0

#   a  2

#   b  3

statistics, p_value = ks_2samp(real.trans_amount, fake.trans_amount)

def kolmogorov_smirnov_test(col_name, real_col, fake_col):
    statistic, p_value = ks_2samp(real_col, fake_col)
    equality = 'identical' if p_value > 0.01 else 'different'
    return {'col_name': col_name, 'statistic': statistic, 'p-value': p_value, 'equality': equality}

def kolmogorov_smirnov_df(real: pd.DataFrame, fake: pd.DataFrame, numerical_columns: List) -> List[Dict[str, Any]]:
    assert real.columns.tolist() == fake.columns.tolist(), 'Colums are not identical between `real` and `fake`. '
    real_iter = real[numerical_columns].iteritems()
    fake_iter = fake[numerical_columns].iteritems()
    distances = Parallel(n_jobs=-1)(
        delayed(kolmogorov_smirnov_test)
        (colname, real_col, fake_col) for (colname, real_col), (_, fake_col) in zip(real_iter, fake_iter))
    distances_df = pd.DataFrame(distances)
    return distances_df.set_index('col_name')

kolmogorov_smirnov_df(real, fake, numerical_columns=['trans_amount', 'balance_after_trans'])
# Output:
#                        statistic       p-value   equality

#   col_name                                               

#   trans_amount             0.178  2.435958e-14  different

#   balance_after_trans      0.041  3.631990e-01  identical



================================================
File: table_evaluator/__init__.py
================================================
import pkg_resources

from .table_evaluator import TableEvaluator
from .utils import load_data

__all__ = ['TableEvaluator', 'load_data']

__version__ = pkg_resources.get_distribution('table_evaluator').version



================================================
File: table_evaluator/metrics.py
================================================
from typing import Any, Dict, List

import numpy as np
import pandas as pd
import scipy.stats as ss
from dython.nominal import cramers_v, theils_u
from joblib import Parallel, delayed
from scipy.spatial.distance import jensenshannon
from scipy.stats import ks_2samp
from sklearn.metrics import root_mean_squared_error


def mean_absolute_error(y_true: np.ndarray, y_pred: np.ndarray) -> np.floating[Any]:
    """
    Returns the mean absolute error between y_true and y_pred.

    :param y_true: NumPy.ndarray with the ground truth values.
    :param y_pred: NumPy.ndarray with the ground predicted values.
    :return: Mean absolute error (float).
    """
    return np.mean(np.abs(np.subtract(y_true, y_pred)))


def euclidean_distance(y_true: np.ndarray | pd.Series, y_pred: np.ndarray | pd.Series) -> float:
    """
    Returns the euclidean distance between y_true and y_pred.

    Args:
        y_true (numpy.ndarray): The ground truth values.
        y_pred (numpy.ndarray): The predicted values.

    Returns:
        float: The mean absolute error.
    """
    return np.sqrt(np.sum(np.power(np.subtract(y_true, y_pred), 2)))


def mean_absolute_percentage_error(y_true: np.ndarray | pd.Series, y_pred: np.ndarray | pd.Series):
    """
    Returns the mean absolute percentage error between y_true and y_pred. Throws ValueError if y_true contains zero
    values.

    Args:
        y_true (numpy.ndarray): The ground truth values.
        y_pred (numpy.ndarray): The predicted values.

    Returns:
        float: Mean absolute percentage error.
    """
    y_true, y_pred = np.array(y_true), np.array(y_pred)
    return np.mean(np.abs((y_true - y_pred) / y_true))


def rmse(y_true: np.ndarray | pd.Series, y_pred: np.ndarray | pd.Series) -> np.ndarray | pd.Series:
    """
    Returns the root mean squared error between y_true and y_pred.

    :param y_true: NumPy.ndarray with the ground truth values.
    :param y_pred: NumPy.ndarray with the ground predicted values.
    :return: root mean squared error (float).
    """
    return root_mean_squared_error(y_true, y_pred)  # type: ignore


def cosine_similarity(y_true: np.ndarray, y_pred: np.ndarray) -> float:
    y_true, y_pred = y_true.reshape(-1), y_pred.reshape(-1)
    return np.sum(y_true * y_pred) / (np.sqrt(np.sum(y_true**2)) * np.sqrt(np.sum(y_pred**2)))


def column_correlations(
    dataset_a: pd.DataFrame, dataset_b: pd.DataFrame, categorical_columns: list[str] | None, theil_u=True
):
    """
    Column-wise correlation calculation between ``dataset_a`` and ``dataset_b``.

    Args:
        dataset_a (pd.DataFrame): First DataFrame
        dataset_b (pd.DataFrame): Second DataFrame
        categorical_columns (list[str]): The columns containing categorical values
        theil_u (bool): Whether to use Theil's U. If False, use Cramer's V.

    Returns:
        float: Mean correlation between all columns.
    """
    if categorical_columns is None:
        categorical_columns = list()
    elif categorical_columns == 'all':
        categorical_columns = dataset_a.columns
    assert dataset_a.columns.tolist() == dataset_b.columns.tolist()
    corr = pd.DataFrame(columns=dataset_a.columns, index=['correlation'])

    for column in dataset_a.columns.tolist():
        if column in categorical_columns:
            if theil_u:
                corr[column] = theils_u(dataset_a[column].sort_values(), dataset_b[column].sort_values())
            else:
                corr[column] = cramers_v(dataset_a[column].sort_values(), dataset_b[column].sort_vaues())
        else:
            corr[column], _ = ss.pearsonr(dataset_a[column].sort_values(), dataset_b[column].sort_values())
    corr.fillna(value=np.nan, inplace=True)
    correlation = np.mean(corr.values.flatten())
    return correlation


def js_distance_df(real: pd.DataFrame, fake: pd.DataFrame, numerical_columns: List[str]) -> pd.DataFrame:
    """
    Calculate Jensen-Shannon distances between real and fake data for numerical columns.

    This function computes the Jensen-Shannon distance for each numerical column
    in parallel using joblib's Parallel and delayed functions.

    Args:
        real (pd.DataFrame): DataFrame containing the real data.
        fake (pd.DataFrame): DataFrame containing the fake data.
        numerical_columns (List[str]): List of column names to compute distances for.

    Returns:
        pd.DataFrame: A DataFrame with column names as index and Jensen-Shannon
                      distances as values.

    Raises:
        AssertionError: If the columns in real and fake DataFrames are not identical.
    """
    assert real.columns.tolist() == fake.columns.tolist(), 'Columns are not identical between `real` and `fake`. '
    distances = Parallel(n_jobs=-1)(
        delayed(jensenshannon_distance)(col, real[col], fake[col]) for col in numerical_columns
    )

    distances_df = pd.DataFrame(distances)
    return distances_df.set_index('col_name')


def jensenshannon_distance(colname: str, real_col: pd.Series, fake_col: pd.Series, bins: int = 25) -> Dict[str, Any]:
    """
    Calculate the Jensen-Shannon distance between real and fake data columns.

    This function bins the data, calculates probability distributions, and then
    computes the Jensen-Shannon distance between these distributions.

    Args:
        colname (str): Name of the column being analyzed.
        real_col (pd.Series): Series containing the real data.
        fake_col (pd.Series): Series containing the fake data.
        bins (int, optional): Number of bins to use for discretization. Defaults to 25.

    Returns:
        Dict[str, Any]: A dictionary containing:
            - 'col_name': Name of the column.
            - 'js_distance': The calculated Jensen-Shannon distance.

    Note:
        The number of bins is capped at the length of the real column to avoid empty bins.
    """
    bins = min(bins, len(real_col))
    binned_values_real, actual_bins = pd.cut(x=real_col, bins=bins, retbins=True)
    binned_probs_real = binned_values_real.value_counts(normalize=True, sort=False)
    binned_probs_fake = pd.cut(fake_col, bins=actual_bins).value_counts(normalize=True, sort=False)
    js_distance = jensenshannon(binned_probs_real, binned_probs_fake)
    return {'col_name': colname, 'js_distance': js_distance}


def kolmogorov_smirnov_test(col_name: str, real_col: pd.Series, fake_col: pd.Series) -> Dict[str, Any]:
    """
    Perform Kolmogorov-Smirnov test on real and fake data columns.

    Args:
        col_name (str): Name of the column being tested.
        real_col (pd.Series): Series containing the real data.
        fake_col (pd.Series): Series containing the fake data.

    Returns:
        Dict[str, Any]: A dictionary containing:
            - 'col_name': Name of the column.
            - 'statistic': The KS statistic.
            - 'p-value': The p-value of the test.
            - 'equality': 'identical' if p-value > 0.01, else 'different'.
    """
    statistic, p_value = ks_2samp(real_col, fake_col)
    equality = 'identical' if p_value > 0.01 else 'different'  # type: ignore
    return {'col_name': col_name, 'statistic': statistic, 'p-value': p_value, 'equality': equality}


def kolmogorov_smirnov_df(real: pd.DataFrame, fake: pd.DataFrame, numerical_columns: List) -> List[Dict[str, Any]]:
    assert real.columns.tolist() == fake.columns.tolist(), 'Colums are not identical between `real` and `fake`. '
    distances = Parallel(n_jobs=-1)(
        delayed(kolmogorov_smirnov_test)(col, real[col], fake[col]) for col in numerical_columns
    )
    distances_df = pd.DataFrame(distances)
    return distances_df.set_index('col_name')



================================================
File: table_evaluator/notebook.py
================================================
try:
    import ipywidgets as widgets
    from IPython import get_ipython
    from IPython.core.display import HTML, Markdown, display
except ImportError:
    print('IPython not installed.')


class EvaluationResult:
    def __init__(self, name, content, prefix=None, appendix=None, notebook=False):
        self.name = name
        self.prefix = prefix
        self.content = content
        self.appendix = appendix
        self.notebook = notebook

    def show(self):
        if self.notebook:
            output = widgets.Output()
            with output:
                display(Markdown(f'## {self.name}'))
                if self.prefix:
                    display(Markdown(self.prefix))
                display(self.content)
                if self.appendix:
                    display(Markdown(self.appendix))
            return output

        else:
            print(f'\n{self.name}')
            if self.prefix:
                print(self.prefix)
            print(self.content)
            if self.appendix:
                print(self.appendix)


def visualize_notebook(table_evaluator, overview, privacy_metrics, ml_efficacy, statistical):
    dashboards = []
    for tab in [overview, privacy_metrics, ml_efficacy, statistical]:
        plots = []
        for evaluation_report in tab:
            evaluation_report.notebook = True
            plots.append(evaluation_report.show())
        if plots:
            dashboards.append(widgets.VBox(plots))
    display(HTML('<h1 style="text-align: center">Synthetic Data Report</h1>'))
    tab = widgets.Tab(dashboards)
    tab.set_title(0, 'Overview')
    tab.set_title(1, 'Privacy Metrics')
    tab.set_title(2, 'ML Efficacy')
    tab.set_title(3, 'Statistical Metrics')
    display(tab)


def isnotebook():
    try:
        shell = get_ipython().__class__.__name__  # This works due to the except below
        if shell == 'ZMQInteractiveShell':
            return True  # Jupyter notebook or qtconsole
        elif shell == 'TerminalInteractiveShell':
            return False  # Terminal running IPython
        else:
            return False  # Other type (?)
    except NameError:
        return False  # Probably standard Python interpreter



================================================
File: table_evaluator/plots.py
================================================
from typing import List, Optional, Union

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
from dython.nominal import associations


def plot_var_cor(
    x: Union[pd.DataFrame, np.ndarray], ax=None, return_values: bool = False, **kwargs
) -> Optional[np.ndarray]:
    """
    Given a DataFrame, plot the correlation between columns. Function assumes all numeric continuous data. It masks the
    top half of the correlation matrix, since this holds the same values.

    Decomissioned for use of the dython associations function.

    :param x: Dataframe to plot data from
    :param ax: Axis on which to plot the correlations
    :param return_values: return correlation matrix after plotting
    :param kwargs: Keyword arguments that are passed to `sns.heatmap`.
    :return: If return_values=True, returns correlation matrix of `x` as np.ndarray
    """
    if isinstance(x, pd.DataFrame):
        corr = x.corr().values
    elif isinstance(x, np.ndarray):
        corr = np.corrcoef(x, rowvar=False)
    else:
        raise ValueError(
            f'Unknown datatype given ({type(x)}). Make sure a Pandas DataFrame or Numpy Array is passed for x.'
        )

    sns.set(style='white')
    mask = np.zeros_like(corr, dtype=bool)
    mask[np.triu_indices_from(mask)] = True

    if ax is None:
        f, ax = plt.subplots(figsize=(11, 9))
    cmap = sns.diverging_palette(220, 10, as_cmap=True)

    # Draw the heatmap with the mask and correct aspect ratio
    sns.heatmap(
        corr,
        ax=ax,
        mask=mask,
        cmap=cmap,
        vmax=1,
        center=0,
        square=True,
        linewidths=0.5,
        cbar_kws={'shrink': 0.5},
        **kwargs,
    )
    if return_values:
        return corr
    else:
        return None


def plot_correlation_difference(
    real: pd.DataFrame,
    fake: pd.DataFrame,
    plot_diff: bool = True,
    cat_cols: Optional[list] = None,
    annot: bool = False,
    fname: str | None = None,
    show: bool = True,
):
    """
    Plot the association matrices for the `real` dataframe, `fake` dataframe and plot the difference between them. Has
    support for continuous and Categorical (Male, Female) data types. All Object and Category dtypes are considered to
    be Categorical columns if `dis_cols` is not passed.

    - Continuous - Continuous: Uses Pearson's correlation coefficient
    - Continuous - Categorical: Uses so called correlation ratio (https://en.wikipedia.org/wiki/Correlation_ratio) for
      both continuous - categorical and categorical - continuous.
    - Categorical - Categorical: Uses Theil's U, an asymmetric correlation metric for Categorical associations

    Args:
        real (pd.DataFrame): DataFrame with real data.
        fake (pd.DataFrame): DataFrame with synthetic data.
        plot_diff (bool): Plot difference if True, else not.
        cat_cols (Optional[List[str]]): List of Categorical columns.
        annot (bool): Whether to annotate the plot with numbers indicating the associations.
    """
    assert isinstance(real, pd.DataFrame), '`real` parameters must be a Pandas DataFrame'
    assert isinstance(fake, pd.DataFrame), '`fake` parameters must be a Pandas DataFrame'
    cmap = sns.diverging_palette(220, 10, as_cmap=True)
    sns.set(style='white')

    if cat_cols is None:
        cat_cols = real.select_dtypes(['object', 'category'])
    if plot_diff:
        fig, ax = plt.subplots(1, 3, figsize=(24, 7))
    else:
        fig, ax = plt.subplots(1, 2, figsize=(20, 8))

    real_corr = associations(
        real,
        nominal_columns=cat_cols,
        # plot=False,
        nom_nom_assoc='theil',
        # mark_columns=True,
        # annot=annot,
        # ax=ax[0],
        # cmap=cmap,
        compute_only=True,
    )['corr']
    fake_corr = associations(
        fake,
        nominal_columns=cat_cols,
        # plot=False,
        nom_nom_assoc='theil',
        # mark_columns=True,
        # annot=annot,
        # ax=ax[1],
        # cmap=cmap,
        compute_only=True,
    )['corr']

    sns.heatmap(
        real_corr,
        ax=ax[0],
        cmap=cmap,
        square=True,
        annot=annot,
        center=0,
        linewidths=0.5,
        cbar_kws={'shrink': 0.5},
        fmt='.2f',
    )
    sns.heatmap(
        fake_corr,
        ax=ax[1],
        cmap=cmap,
        square=True,
        annot=annot,
        center=0,
        linewidths=0.5,
        cbar_kws={'shrink': 0.5},
        fmt='.2f',
    )

    if plot_diff:
        diff = (real_corr - fake_corr).abs()
        sns.heatmap(
            diff,
            ax=ax[2],
            cmap=cmap,
            vmax=0.3,
            square=True,
            annot=annot,
            center=0,
            linewidths=0.5,
            cbar_kws={'shrink': 0.5},
            fmt='.2f',
        )
    titles = ['Real', 'Fake', 'Difference'] if plot_diff else ['Real', 'Fake']
    for i, label in enumerate(titles):
        title_font = {'size': '18'}
        ax[i].set_title(label, **title_font)
    plt.tight_layout()

    if fname is not None:
        plt.savefig(fname)
    if show:
        plt.show()
    else:
        return fig


def plot_correlation_comparison(evaluators: List, annot: bool = False, show: bool = False):
    """
    Plot the correlation differences of multiple TableEvaluator objects.

    Args:
        evaluators (List[TableEvaluator]): List of TableEvaluator objects.
        annot (bool): Whether to annotate the plots with numbers.
    """
    nr_plots = len(evaluators) + 1
    cmap = sns.diverging_palette(220, 10, as_cmap=True)
    fig, ax = plt.subplots(2, nr_plots, figsize=(4 * nr_plots, 7))
    flat_ax = ax.flatten()
    flat_ax[nr_plots + 1].clear()
    fake_corr = []
    real_corr = associations(
        evaluators[0].real,
        nominal_columns=evaluators[0].categorical_columns,
        plot=False,
        nom_nom_assoc='theil',
        compute_only=True,
        mark_columns=True,
        annot=False,
        cmap=cmap,
        cbar=False,
        ax=flat_ax[0],
    )['corr']
    for i in range(1, nr_plots):
        cbar = True if i % (nr_plots - 1) == 0 else False
        fake_corr.append(
            associations(
                evaluators[i - 1].fake,
                nominal_columns=evaluators[0].categorical_columns,
                plot=False,
                nom_nom_assoc='theil',
                compute_only=True,
                mark_columns=True,
                annot=False,
                cmap=cmap,
                cbar=cbar,
                ax=flat_ax[i],
            )['corr']
        )
        if i % (nr_plots - 1) == 0:
            cbar = flat_ax[i].collections[0].colorbar
            cbar.ax.tick_params(labelsize=20)

    for i in range(1, nr_plots):
        cbar = True if i % (nr_plots - 1) == 0 else False
        diff = abs(real_corr - fake_corr[i - 1])
        sns.set(style='white')
        az = sns.heatmap(
            diff,
            ax=flat_ax[i + nr_plots],
            cmap=cmap,
            vmax=0.3,
            square=True,
            annot=annot,
            center=0,
            linewidths=0,
            cbar=cbar,
            fmt='.2f',
        )
        if i % (nr_plots - 1) == 0:
            cbar = az.collections[0].colorbar
            cbar.ax.tick_params(labelsize=20)
    titles = ['Real'] + [e.name if e.name is not None else idx for idx, e in enumerate(evaluators)]
    for i, label in enumerate(titles):
        flat_ax[i].set_yticklabels([])
        flat_ax[i].set_xticklabels([])
        flat_ax[i + nr_plots].set_yticklabels([])
        flat_ax[i + nr_plots].set_xticklabels([])
        title_font = {'size': '28'}
        flat_ax[i].set_title(label, **title_font)
    plt.tight_layout()
    if show:
        plt.show()
    else:
        return fig


def cdf(data_r, data_f, xlabel: str = 'Values', ylabel: str = 'Cumulative Sum', ax=None, show: bool = True):
    """
    Plot continous density function on optionally given ax. If no ax, cdf is plotted and shown.

    Args:
        data_r (pd.Series): Series with real data.
        data_f (pd.Series): Series with fake data.
        xlabel (str): Label to put on the x-axis.
        ylabel (str): Label to put on the y-axis.
        ax (matplotlib.axes.Axes | None): The axis to plot on. If None, a new figure is created.
        show (bool): Whether to display the plot. Defaults to True.

    Returns:
        matplotlib.axes.Axes | None: The axis with the plot if show is False, otherwise None.
    """
    x1 = data_r.sort_values()
    x2 = data_f.sort_values()
    y = np.arange(1, len(data_r) + 1) / len(data_r)

    local_ax = ax if ax else plt.subplots()[1]

    axis_font = {'size': '14'}
    local_ax.set_xlabel(xlabel, **axis_font)
    local_ax.set_ylabel(ylabel, **axis_font)

    local_ax.grid()
    local_ax.plot(x1, y, marker='o', linestyle='none', label='Real', ms=8)
    local_ax.plot(x2, y, marker='o', linestyle='none', label='Fake', alpha=0.5)
    local_ax.tick_params(axis='both', which='major', labelsize=8)
    local_ax.legend(loc='upper center', bbox_to_anchor=(0.5, 1.1), ncol=3)
    import matplotlib.ticker as mticker

    # If labels are strings, rotate them vertical
    if isinstance(data_r, pd.Series) and data_r.dtypes == 'object':
        all_labels = set(data_r) | set(data_f)
        ticks_loc = local_ax.get_xticks()
        local_ax.xaxis.set_major_locator(mticker.FixedLocator(ticks_loc))
        local_ax.set_xticklabels(sorted(all_labels), rotation='vertical')

    if ax is None:
        if show:
            plt.show()
        else:
            return local_ax


def plot_mean_std_comparison(evaluators: List, show: bool = True):
    """
    Plot comparison between the means and standard deviations from each evaluator in evaluators.

    :param evaluators: list of TableEvaluator objects that are to be evaluated.
    """
    nr_plots = len(evaluators)
    fig, ax = plt.subplots(2, nr_plots, figsize=(4 * nr_plots, 7))
    flat_ax = ax.flatten()
    for i in range(nr_plots):
        plot_mean_std(evaluators[i].real, evaluators[i].fake, ax=ax[:, i])

    titles = [e.name if e is not None else idx for idx, e in enumerate(evaluators)]
    for i, label in enumerate(titles):
        title_font = {'size': '24'}
        flat_ax[i].set_title(label, **title_font)
    plt.tight_layout()
    if show:
        plt.show()
    else:
        return fig


def plot_mean_std(real: pd.DataFrame, fake: pd.DataFrame, ax=None, fname=None, show: bool = True):
    """
    Plot the means and standard deviations of each dataset.

    :param real: DataFrame containing the real data
    :param fake: DataFrame containing the fake data
    :param ax: Axis to plot on. If none, a new figure is made.
    :param fname: If not none, saves the plot with this file name.
    """
    if ax is None:
        fig, ax = plt.subplots(1, 2, figsize=(10, 5))
        fig.suptitle('Absolute Log Mean and STDs of numeric data\n', fontsize=16)

    ax[0].grid(True)
    ax[1].grid(True)
    real = real.select_dtypes(include='number')
    fake = fake.select_dtypes(include='number')
    real_mean = np.log(np.add(abs(real.mean()).values, 1e-5))
    fake_mean = np.log(np.add(abs(fake.mean()).values, 1e-5))
    min_mean = min(real_mean) - 1
    max_mean = max(real_mean) + 1
    line = np.arange(min_mean, max_mean)
    sns.lineplot(x=line, y=line, ax=ax[0])
    sns.scatterplot(x=real_mean, y=fake_mean, ax=ax[0])
    ax[0].set_title('Means of real and fake data')
    ax[0].set_xlabel('real data mean (log)')
    ax[0].set_ylabel('fake data mean (log)')

    real_std = np.log(np.add(real.std().values, 1e-5))
    fake_std = np.log(np.add(fake.std().values, 1e-5))
    min_std = min(real_std) - 1
    max_std = max(real_std) + 1
    line = np.arange(min_std, max_std)
    sns.lineplot(x=line, y=line, ax=ax[1])
    sns.scatterplot(x=real_std, y=fake_std, ax=ax[1])
    ax[1].set_title('Stds of real and fake data')
    ax[1].set_xlabel('real data std (log)')
    ax[1].set_ylabel('fake data std (log)')

    if fname is not None:
        plt.savefig(fname)

    if show:
        plt.show()
    else:
        return ax



================================================
File: table_evaluator/table_evaluator.py
================================================
import copy
import logging
import warnings
from os import PathLike
from pathlib import Path
from typing import Callable, Dict, List, Optional, Tuple, Union

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
from dython.nominal import associations, numerical_encoding
from scipy import stats
from scipy.spatial.distance import cdist
from sklearn.decomposition import PCA
from sklearn.ensemble import RandomForestClassifier, RandomForestRegressor
from sklearn.exceptions import ConvergenceWarning
from sklearn.linear_model import ElasticNet, Lasso, LogisticRegression, Ridge
from sklearn.metrics import f1_score, jaccard_score
from sklearn.model_selection import KFold
from sklearn.neural_network import MLPClassifier
from sklearn.tree import DecisionTreeClassifier

from table_evaluator.metrics import (
    column_correlations,
    euclidean_distance,
    js_distance_df,
    kolmogorov_smirnov_df,
    mean_absolute_error,
    mean_absolute_percentage_error,
    rmse,
)
from table_evaluator.notebook import EvaluationResult, visualize_notebook
from table_evaluator.plots import cdf, plot_correlation_difference, plot_mean_std
from table_evaluator.utils import dict_to_df

logger = logging.getLogger(__name__)


class TableEvaluator:
    """
    Class for evaluating synthetic data. It is given the real and fake data and allows the user to easily evaluate data
    with the `evaluate` method. Additional evaluations can be done with the different methods of evaluate and the visual
    evaluation method.
    """

    comparison_metric: Callable

    def __init__(
        self,
        real: pd.DataFrame,
        fake: pd.DataFrame,
        cat_cols: Optional[List[str]] = None,
        unique_thresh: int = 0,
        metric: str | Callable = 'pearsonr',
        verbose: bool = False,
        n_samples: Optional[int] = None,
        name: Optional[str] = None,
        seed: int = 1337,
        sample: bool = False,
        infer_types: bool = True,
    ):
        """
        Initialize the TableEvaluator with real and fake datasets.

        Args:
            real (pd.DataFrame): Real dataset.
            fake (pd.DataFrame): Synthetic dataset.
            cat_cols (Optional[List[str]], optional): Columns to be evaluated as discrete. If provided, unique_thresh
                is ignored. Defaults to None.
            unique_thresh (int, optional): Threshold for automatic evaluation if a column is numeric. Defaults to 0.
            metric (str, optional): Metric for evaluating linear relations. Defaults to "pearsonr".
            verbose (bool, optional): Whether to print verbose output. Defaults to False.
            n_samples (Optional[int], optional): Number of samples to evaluate. If None, takes the minimum length of
                both datasets. Defaults to None.
            name (Optional[str], optional): Name of the TableEvaluator, used in plotting functions. Defaults to None.
            seed (int, optional): Random seed for reproducibility. Defaults to 1337.
            sample (bool, optional): Whether to sample the datasets to n_samples. Defaults to False.
        """
        self.name = name
        self.unique_thresh = unique_thresh
        self.real = real.copy()
        self.fake = fake.copy()
        self.comparison_metric: Callable = getattr(stats, metric) if isinstance(metric, str) else metric
        self.verbose = verbose
        self.random_seed = seed
        self.sample = sample
        self.infer_types = infer_types

        self._validate_dataframes()
        self.numerical_columns, self.categorical_columns = self._determine_columns(cat_cols)

        self.n_samples = self._set_sample_size(n_samples)
        if sample:
            self.real = self.real.sample(self.n_samples, random_state=self.random_seed)
            self.fake = self.fake.sample(self.n_samples, random_state=self.random_seed)

        self._fill_missing_values()

    def _validate_dataframes(self):
        """Ensure that the real and fake dataframes have the same columns."""
        if len(self.real.columns) != len(self.fake.columns):
            raise ValueError('Columns in real and fake dataframe are not the same')
        self.fake = self.fake[self.real.columns.tolist()]

    def _determine_columns(self, cat_cols: Optional[List[str]]) -> Tuple[List[str], List[str]]:
        """Determine numerical and categorical columns based on the provided data."""
        if cat_cols is None:
            if self.infer_types:
                self.real = self.real.infer_objects()
                self.fake = self.fake.infer_objects()
            numerical_columns = [
                column
                for column in self.real.select_dtypes(include='number').columns
                if self.real[column].nunique() > self.unique_thresh
            ]
            categorical_columns = [column for column in self.real.columns if column not in numerical_columns]
        else:
            categorical_columns = cat_cols
            numerical_columns = [column for column in self.real.columns if column not in cat_cols]
        return numerical_columns, categorical_columns

    def _set_sample_size(self, n_samples: Optional[int]) -> int:
        """Set the number of samples to evaluate."""
        if n_samples is None:
            return min(len(self.real), len(self.fake))
        elif len(self.fake) >= n_samples and len(self.real) >= n_samples:
            return n_samples
        else:
            raise ValueError(
                f'Make sure n_samples < len(fake/real). len(real): {len(self.real)}, len(fake): {len(self.fake)}'
            )

    def _fill_missing_values(self):
        """Fill missing values in the datasets."""
        self.real[self.categorical_columns] = self.real[self.categorical_columns].astype(str).fillna('[NAN]')
        self.fake[self.categorical_columns] = self.fake[self.categorical_columns].astype(str).fillna('[NAN]')

        self.real[self.numerical_columns] = self.real[self.numerical_columns].fillna(
            self.real[self.numerical_columns].mean()
        )
        self.fake[self.numerical_columns] = self.fake[self.numerical_columns].fillna(
            self.fake[self.numerical_columns].mean()
        )

    def plot_mean_std(self, fname=None, show: bool = True):
        """
        Class wrapper function for plotting the mean and std using `plots.plot_mean_std`.

        Params:
            fname (str, Optional): If not none, saves the plot with this file name.
        """
        plot_mean_std(self.real, self.fake, fname=fname, show=show)

    def plot_cumsums(self, nr_cols=4, fname: PathLike | None = None, show: bool = True):
        """
        Plot the cumulative sums for all columns in the real and fake dataset. Height of each row scales with the length
        of the labels. Each plot contains the
        values of a real columns and the corresponding fake column.

        Params:
            fname str: If not none, saves the plot with this file name.
        """
        nr_charts = len(self.real.columns)
        nr_rows = max(1, nr_charts // nr_cols)
        nr_rows = nr_rows + 1 if nr_charts % nr_cols != 0 else nr_rows

        max_len = 0
        # Increase the length of plots if the labels are long
        if not self.real.select_dtypes(include=['object']).empty:
            lengths = []
            for d in self.real.select_dtypes(include=['object']):
                lengths.append(max([len(x.strip()) for x in self.real[d].unique().tolist()]))
            max_len = max(lengths)

        row_height = 6 + (max_len // 30)
        fig, ax = plt.subplots(nr_rows, nr_cols, figsize=(16, row_height * nr_rows))
        fig.suptitle('Cumulative Sums per feature', fontsize=16)
        axes = ax.flatten()
        for i, col in enumerate(self.real.columns):
            try:
                r = self.real[col]
                f = self.fake.iloc[:, self.real.columns.tolist().index(col)]
                cdf(r, f, col, 'Cumsum', ax=axes[i])
            except Exception as e:
                print(f'Error while plotting column {col}')
                raise e

        plt.tight_layout(rect=(0.0, 0.02, 1.0, 0.98))

        if fname is not None:
            plt.savefig(fname)
        if show:
            plt.show()
        else:
            return fig

    def plot_distributions(self, nr_cols: int = 3, fname: PathLike | None = None, show: bool = True):
        """
        Plot the distribution plots for all columns in the real and fake dataset. Height of each row of plots scales
        with the length of the labels. Each plot
        contains the values of a real columns and the corresponding fake column.

        Params:
            fname (str, Optional): If not none, saves the plot with this file name.
        """
        nr_charts = len(self.real.columns)
        nr_rows = max(1, nr_charts // nr_cols)
        nr_rows = nr_rows + 1 if nr_charts % nr_cols != 0 else nr_rows

        max_len = 0
        # Increase the length of plots if the labels are long
        if not self.real.select_dtypes(include=['object']).empty:
            lengths = []
            for d in self.real.select_dtypes(include=['object']):
                lengths.append(max([len(x.strip()) for x in self.real[d].unique().tolist()]))
            max_len = max(lengths)

        row_height = 6 + (max_len // 30)
        fig, ax = plt.subplots(nr_rows, nr_cols, figsize=(16, row_height * nr_rows))
        fig.suptitle('Distribution per feature', fontsize=16)
        axes = ax.flatten()
        for i, col in enumerate(self.real.columns):
            if col not in self.categorical_columns:
                plot_df = pd.DataFrame(
                    {
                        col: pd.concat([self.real[col], self.fake[col]], axis=0),
                        'kind': ['real'] * len(self.real) + ['fake'] * len(self.fake),
                    }
                )
                fig = sns.histplot(
                    plot_df,
                    x=col,
                    hue='kind',
                    ax=axes[i],
                    stat='probability',
                    legend=True,
                    kde=True,
                )
                axes[i].set_autoscaley_on(True)
            else:
                real = self.real.copy()
                fake = self.fake.copy()
                real['kind'] = 'Real'
                fake['kind'] = 'Fake'
                concat = pd.concat([fake, real])
                palette = sns.color_palette(
                    [
                        (0.8666666666666667, 0.5176470588235295, 0.3215686274509804),
                        (0.2980392156862745, 0.4470588235294118, 0.6901960784313725),
                    ]
                )
                x, y, hue = col, 'proportion', 'kind'
                ax = (
                    concat[x]
                    .groupby(concat[hue])
                    .value_counts(normalize=True)
                    .rename(y)
                    .reset_index()
                    .pipe(
                        (sns.barplot, 'data'),
                        x=x,
                        y=y,
                        hue=hue,
                        ax=axes[i],
                        saturation=0.8,
                        palette=palette,
                    )
                )
                ax.set_xticklabels(axes[i].get_xticklabels(), rotation='vertical')
        plt.tight_layout(rect=(0.0, 0.02, 1.0, 0.98))

        if fname is not None:
            plt.savefig(fname)
        if show:
            plt.show()
        else:
            return fig

    def plot_correlation_difference(self, plot_diff=True, fname=None, show: bool = True, **kwargs):
        """
        Plot the association matrices for each table and, if chosen, the difference between them.

        :param plot_diff: whether to plot the difference
        :param fname: If not none, saves the plot with this file name.
        :param kwargs: kwargs for sns.heatmap
        """
        plot_correlation_difference(
            self.real,
            self.fake,
            cat_cols=self.categorical_columns,
            plot_diff=plot_diff,
            fname=fname,
            show=show,
            **kwargs,
        )

    def correlation_distance(self, how: str = 'euclidean') -> float:
        """
        Calculate distance between correlation matrices with certain metric.

        :param how: metric to measure distance. Choose from [``euclidean``, ``mae``, ``rmse``].
        :return: distance between the association matrices in the chosen evaluation metric. Default: Euclidean
        """
        from scipy.spatial.distance import cosine

        if how == 'euclidean':
            distance_func = euclidean_distance
        elif how == 'mae':
            distance_func = mean_absolute_error
        elif how == 'rmse':
            distance_func = rmse
        elif how == 'cosine':

            def custom_cosine(a, b):
                return cosine(a.reshape(-1), b.reshape(-1))

            distance_func = custom_cosine
        else:
            raise ValueError('`how` parameter must be in [euclidean, mae, rmse]')

        real_corr = associations(
            self.real,
            nominal_columns=self.categorical_columns,
            nom_nom_assoc='theil',
            compute_only=True,
        )['corr']  # type: ignore
        fake_corr = associations(
            self.fake,
            nominal_columns=self.categorical_columns,
            nom_nom_assoc='theil',
            compute_only=True,
        )['corr']  # type: ignore
        return distance_func(real_corr.values, fake_corr.values)  # type: ignore

    def plot_pca(self, fname: PathLike | None = None, show: bool = True):
        """
        Plot the first two components of a PCA of real and fake data.
        :param fname: If not none, saves the plot with this file name.
        """
        real, fake = self.convert_numerical()

        pca_r = PCA(n_components=2)
        pca_f = PCA(n_components=2)

        real_t = pca_r.fit_transform(real)
        fake_t = pca_f.fit_transform(fake)

        fig, ax = plt.subplots(1, 2, figsize=(12, 6))
        fig.suptitle('First two components of PCA', fontsize=16)
        sns.scatterplot(ax=ax[0], x=real_t[:, 0], y=real_t[:, 1])
        sns.scatterplot(ax=ax[1], x=fake_t[:, 0], y=fake_t[:, 1])
        ax[0].set_title('Real data')
        ax[1].set_title('Fake data')

        if fname is not None:
            plt.savefig(fname)
        if show:
            plt.show()
        else:
            return fig

    def get_copies(self, return_len: bool = False) -> Union[pd.DataFrame, int]:
        """
        Check whether any real values occur in the fake data.

        Args:
            return_len (bool): Whether to return the length of the copied rows or not.

        Returns:
            Union[pd.DataFrame, int]: Dataframe containing the duplicates if return_len=False,
                else integer indicating the number of copied rows.
        """
        real_hashes = self.real.apply(lambda x: hash(tuple(x)), axis=1)
        fake_hashes = self.fake.apply(lambda x: hash(tuple(x)), axis=1)

        dup_idxs = fake_hashes.isin(real_hashes.values)
        print(dup_idxs)
        dup_idxs = dup_idxs[dup_idxs].sort_index().index.tolist()

        if self.verbose:
            print(f'Nr copied columns: {len(dup_idxs)}')
        copies = self.fake.loc[dup_idxs, :]

        if return_len:
            return len(copies)
        else:
            return copies

    def get_duplicates(self, return_values: bool = False) -> Tuple[pd.DataFrame, pd.DataFrame] | Tuple[int, int]:
        """
        Return duplicates within each dataset.

        Args:
            return_values (bool): Whether to return the duplicate values in the datasets.
                If False, the lengths are returned.

        Returns:
            Union[Tuple[pd.DataFrame, pd.DataFrame], Tuple[int, int]]:
                If return_values is True, returns a tuple of DataFrames with duplicates.
                If return_values is False, returns a tuple of integers representing the lengths of those DataFrames.
        """
        real_duplicates = self.real[self.real.duplicated(keep=False)]
        fake_duplicates = self.fake[self.fake.duplicated(keep=False)]
        if return_values:
            return real_duplicates, fake_duplicates
        else:
            return len(real_duplicates), len(fake_duplicates)

    def pca_correlation(self, lingress: bool = False):
        """
        Calculate the relation between PCA explained variance values. Due to some very large numbers, in recent
        implementation the MAPE(log) is used instead of regressions like Pearson's r.

        Args:
            lingress (bool): Whether to use a linear regression, in this case Pearson's.

        Returns:
            float: The correlation coefficient if lingress=True, otherwise 1 - MAPE(log(real), log(fake)).
        """
        self.pca_r = PCA(n_components=5)
        self.pca_f = PCA(n_components=5)

        real, fake = self.convert_numerical()

        self.pca_r.fit(real)
        self.pca_f.fit(fake)
        if self.verbose:
            results = pd.DataFrame(
                {
                    'real': self.pca_r.explained_variance_,
                    'fake': self.pca_f.explained_variance_,
                }
            )
            print('\nTop 5 PCA components:')
            print(results.to_string())

        if lingress:
            corr, p, _ = self.comparison_metric(self.pca_r.explained_variance_, self.pca_f.explained_variance_)
            return corr
        else:
            pca_error = mean_absolute_percentage_error(self.pca_r.explained_variance_, self.pca_f.explained_variance_)
            return 1 - pca_error

    def fit_estimators(self):
        """
        Fit self.r_estimators and self.f_estimators to real and fake data, respectively.
        """

        if self.verbose:
            print('\nFitting real')
        for i, c in enumerate(self.r_estimators):
            if self.verbose:
                print(f'{i + 1}: {type(c).__name__}')
            c.fit(self.real_x_train, self.real_y_train)

        if self.verbose:
            print('\nFitting fake')
        for i, c in enumerate(self.f_estimators):
            if self.verbose:
                print(f'{i + 1}: {type(c).__name__}')
            c.fit(self.fake_x_train, self.fake_y_train)

    def score_estimators(self):
        """
        Get F1 scores of self.r_estimators and self.f_estimators on the fake and real data, respectively.

        :return: dataframe with the results for each estimator on each data test set.
        """
        if self.target_type == 'class':
            rows = []
            for r_classifier, f_classifier, estimator_name in zip(
                self.r_estimators, self.f_estimators, self.estimator_names
            ):
                for dataset, target, dataset_name in zip(
                    [self.real_x_test, self.fake_x_test],
                    [self.real_y_test, self.fake_y_test],
                    ['real', 'fake'],
                ):
                    predictions_classifier_real = r_classifier.predict(dataset)
                    predictions_classifier_fake = f_classifier.predict(dataset)
                    f1_r = f1_score(target, predictions_classifier_real, average='micro')
                    f1_f = f1_score(target, predictions_classifier_fake, average='micro')
                    jac_sim = jaccard_score(
                        predictions_classifier_real,
                        predictions_classifier_fake,
                        average='micro',
                    )
                    row = {
                        'index': f'{estimator_name}_{dataset_name}',
                        'f1_real': f1_r,
                        'f1_fake': f1_f,
                        'jaccard_similarity': jac_sim,
                    }
                    rows.append(row)
            results = pd.DataFrame(rows).set_index('index')

        elif self.target_type == 'regr':
            r2r = [rmse(self.real_y_test, clf.predict(self.real_x_test)) for clf in self.r_estimators]
            f2f = [rmse(self.fake_y_test, clf.predict(self.fake_x_test)) for clf in self.f_estimators]

            # Calculate test set accuracies on the other dataset
            r2f = [rmse(self.fake_y_test, clf.predict(self.fake_x_test)) for clf in self.r_estimators]
            f2r = [rmse(self.real_y_test, clf.predict(self.real_x_test)) for clf in self.f_estimators]
            index = [f'real_data_{classifier}' for classifier in self.estimator_names] + [
                f'fake_data_{classifier}' for classifier in self.estimator_names
            ]
            results = pd.DataFrame({'real': r2r + f2r, 'fake': r2f + f2f}, index=index)
        else:
            raise Exception(f"self.target_type should be either 'class' or 'regr', but is {self.target_type}.")
        return results

    def visual_evaluation(self, save_dir: PathLike | None = None, show: bool = True, **kwargs):
        """
        Plot all visual evaluation metrics. Includes plotting the mean and standard deviation, cumulative sums,
        correlation differences and the PCA transform.

        Args:
            save_dir (str | None): Directory path to save images.
            show (bool): Whether to display the plots.
            **kwargs: Additional keyword arguments for matplotlib.

        Returns:
            None
        """
        if save_dir is None:
            self.plot_mean_std(show=show)
            self.plot_cumsums(show=show)
            self.plot_distributions(show=show)
            self.plot_correlation_difference(show=show, **kwargs)
            self.plot_pca(show=show)
        else:
            save_dir = Path(save_dir)
            save_dir.mkdir(parents=True, exist_ok=True)

            self.plot_mean_std(fname=save_dir / 'mean_std.png', show=show)
            self.plot_cumsums(fname=save_dir / 'cumsums.png', show=show)
            self.plot_distributions(fname=save_dir / 'distributions.png', show=show)
            self.plot_correlation_difference(fname=save_dir / 'correlation_difference.png', show=show, **kwargs)
            self.plot_pca(fname=save_dir / 'pca.png', show=show)

    def basic_statistical_evaluation(self) -> float:
        """
        Calculate the correlation coefficient between the basic properties of self.real and self.fake using Spearman's
        Rho. Spearman's is used because these values can differ a lot in magnitude, and Spearman's is more resilient to
        outliers.

        Returns:
            float: correlation coefficient
        """
        total_metrics = pd.DataFrame()
        for ds_name in ['real', 'fake']:
            ds = getattr(self, ds_name)
            metrics = {}
            # TODO: add discrete columns as factors
            num_ds = ds[self.numerical_columns]

            for idx, value in num_ds.mean().items():
                metrics[f'mean_{idx}'] = value
            for idx, value in num_ds.median().items():
                metrics[f'median_{idx}'] = value
            for idx, value in num_ds.std().items():
                metrics[f'std_{idx}'] = value
            for idx, value in num_ds.var().items():
                metrics[f'variance_{idx}'] = value
            total_metrics[ds_name] = metrics.values()

        total_metrics.index = list(metrics.keys())  # type: ignore
        self.statistical_results = total_metrics
        if self.verbose:
            print('\nBasic statistical attributes:')
            print(total_metrics.to_string())
        corr, p = stats.spearmanr(total_metrics['real'], total_metrics['fake'])
        return corr

    def correlation_correlation(self) -> float:
        """
        Calculate the correlation coefficient between the association matrices of self.real and self.fake using
        self.comparison_metric

        Returns:
            float: The correlation coefficient
        """
        total_metrics = pd.DataFrame()
        for ds_name in ['real', 'fake']:
            ds = getattr(self, ds_name)
            corr_df: pd.DataFrame = associations(
                ds,
                nominal_columns=self.categorical_columns,
                nom_nom_assoc='theil',
                compute_only=True,
            )['corr']  # type: ignore
            values = corr_df.values
            # print(values, type(values))
            values = values[~np.eye(values.shape[0], dtype=bool)].reshape(values.shape[0], -1)
            total_metrics[ds_name] = values.flatten()

        self.correlation_correlations = total_metrics
        corr, p = self.comparison_metric(total_metrics['real'], total_metrics['fake'])
        if self.verbose:
            print('\nColumn correlation between datasets:')
            print(total_metrics.to_string())
        return corr

    def convert_numerical(self) -> Tuple[pd.DataFrame, pd.DataFrame]:
        """
        Convert dataset to a numerical representations while making sure they have identical columns. This is sometimes
        a problem with categorical columns with many values or very unbalanced values

        Returns:
            Tuple[pd.DataFrame, pd.DataFrame]: Real and fake dataframe factorized using the pandas function
        """
        real = self.real
        fake = self.fake
        for c in self.categorical_columns:
            if real[c].dtype == 'object':
                real[c] = pd.factorize(real[c], sort=True)[0]
                fake[c] = pd.factorize(fake[c], sort=True)[0]

        return real, fake

    def convert_numerical_one_hot(self) -> Tuple[pd.DataFrame, pd.DataFrame]:
        """
        Convert dataset to a numerical representations while making sure they have identical columns.
        This is sometimes a problem with categorical columns with many values or very unbalanced values

        Returns:
            Tuple[pd.DataFrame, pd.DataFrame]: Real and fake dataframe with categorical columns one-hot encoded and
            binary columns factorized.
        """
        cat_cols = (
            self.categorical_columns
            + self.real.select_dtypes('bool').columns.tolist()
            + self.fake.select_dtypes('bool').columns.tolist()
        )
        real: pd.DataFrame = numerical_encoding(self.real, nominal_columns=cat_cols).astype(float)  # type: ignore
        real = real.sort_index(axis=1)
        fake: pd.DataFrame = numerical_encoding(self.fake, nominal_columns=cat_cols).astype(float)  # type: ignore
        for col in real.columns:
            if col not in fake:
                logger.warning(f'Adding column {col} with all 0s')
                fake[col] = 0.0
        fake = fake.sort_index(axis=1)

        # Cast True/False columns to 0/1.
        # bool_cols = real.select_dtypes("bool").columns
        # real[bool_cols] = real[bool_cols].astype(float)
        # fake[bool_cols] = fake[bool_cols].astype(float)

        return real, fake

    def estimator_evaluation(self, target_col: str, target_type: str = 'class', kfold: bool = False) -> float:
        """
        Method to do full estimator evaluation, including training. And estimator is either a regressor or a classifier,
        depending on the task. Two sets are created of each of the estimators `S_r` and `S_f`, for the real and fake
        data respectively. `S_f` is trained on ``self.real`` and `S_r` on ``self.fake``. Then, both are evaluated on
        their own and the others test set. If target_type is ``regr`` we do a regression on the RMSE scores with
        Pearson's. If target_type is ``class``, we calculate F1 scores and do return ``1 - MAPE(F1_r, F1_f)``.

        Args:
            target_col (str): The column to be considered as the target for both regression and classification tasks.
            target_type (str): The type of task. Can be either "class" or "regr".
            kfold (bool): If True, performs 5-fold CV. If False, trains on 80% and tests on 20% of the data once.

        Returns:
            float: Correlation value or 1 - MAPE.
        """
        self.target_col = target_col
        self.target_type = target_type

        # Convert both datasets to numerical representations and split x and  y
        real, fake = self.convert_numerical()

        real_x = real.drop([target_col], axis=1)
        fake_x = fake.drop([target_col], axis=1)

        assert (
            real_x.columns.tolist() == fake_x.columns.tolist()
        ), f'real and fake columns are different: \n{real_x.columns}\n{fake_x.columns}'

        real_y = real[target_col]
        fake_y = fake[target_col]

        # For reproducibilty:
        np.random.seed(self.random_seed)

        if target_type == 'regr':
            self.estimators = [
                RandomForestRegressor(n_estimators=20, max_depth=5, random_state=42),
                Lasso(random_state=42),
                Ridge(alpha=1.0, random_state=42),
                ElasticNet(random_state=42),
            ]
        elif target_type == 'class':
            self.estimators = [
                LogisticRegression(multi_class='auto', solver='lbfgs', max_iter=500, random_state=42),
                RandomForestClassifier(n_estimators=10, random_state=42),
                DecisionTreeClassifier(random_state=42),
                MLPClassifier(
                    [50, 50],
                    solver='adam',
                    activation='relu',
                    learning_rate='adaptive',
                    random_state=42,
                ),
            ]
        else:
            raise ValueError("target_type must be 'regr' or 'class'")

        self.estimator_names = [type(clf).__name__ for clf in self.estimators]

        # K Fold
        kf = KFold(n_splits=5)
        res = []
        for train_index, test_index in kf.split(real_y):
            self.real_x_train = real_x.iloc[train_index]
            self.real_x_test = real_x.iloc[test_index]
            self.real_y_train = real_y.iloc[train_index]
            self.real_y_test = real_y.iloc[test_index]
            self.fake_x_train = fake_x.iloc[train_index]
            self.fake_x_test = fake_x.iloc[test_index]
            self.fake_y_train = fake_y.iloc[train_index]
            self.fake_y_test = fake_y.iloc[test_index]

            self.r_estimators = copy.deepcopy(self.estimators)
            self.f_estimators = copy.deepcopy(self.estimators)

            for estimator in self.estimators:
                assert hasattr(estimator, 'fit')
                assert hasattr(estimator, 'score')

            self.fit_estimators()
            res.append(self.score_estimators())

            # Break the loop if we don't want the kfold
            if not kfold:
                break
        print(res)
        self.estimators_scores = pd.concat(res).groupby(level=0).mean()
        if self.verbose:
            print('\nClassifier F1-scores and their Jaccard similarities:') if self.target_type == 'class' else print(
                '\nRegressor MSE-scores and their Jaccard similarities:'
            )
            print(self.estimators_scores.to_string())

        if self.target_type == 'regr':
            corr, p = self.comparison_metric(self.estimators_scores['real'], self.estimators_scores['fake'])
            return corr
        elif self.target_type == 'class':
            mean = mean_absolute_percentage_error(self.estimators_scores['f1_real'], self.estimators_scores['f1_fake'])
            return 1 - mean
        else:
            raise ValueError('`self.target_type` should be `regr` or `class`.')

    def row_distance(self, n_samples: int | None = None) -> Tuple[np.number, np.number]:
        """
        Calculate mean and standard deviation distances between `self.fake` and `self.real`.

        :param n_samples: Number of samples to take for evaluation. Compute time increases exponentially.
        :return: `(mean, std)` of these distances.
        """
        if n_samples is None:
            n_samples = len(self.real)

        real, fake = self.convert_numerical_one_hot()

        columns = sorted(real.columns.tolist())
        real = real[columns]

        for col in columns:
            if col not in fake.columns.tolist():
                fake[col] = 0
        fake = fake[columns]

        for column in real.columns.tolist():
            if len(real[column].unique()) > 2:
                real[column] = (real[column] - real[column].mean()) / real[column].std()
                fake[column] = (fake[column] - fake[column].mean()) / fake[column].std()
        assert real.columns.tolist() == fake.columns.tolist()

        distances = cdist(real[:n_samples], fake[:n_samples])
        min_distances = np.min(distances, axis=1)
        min_mean = np.mean(min_distances)
        min_std = np.std(min_distances)
        return min_mean, min_std

    def column_correlations(self):
        """
        Wrapper function around `metrics.column_correlation`.

        :return: Column correlations between ``self.real`` and ``self.fake``.
        """

        real, fake = self.convert_numerical()

        return column_correlations(real, fake, self.categorical_columns)

    def evaluate(
        self,
        target_col: str,
        target_type: str = 'class',
        metric: str | None = None,
        verbose: bool | None = None,
        n_samples_distance: int = 20000,
        kfold: bool = False,
        notebook: bool = False,
        return_outputs: bool = False,
    ) -> Dict | None:
        """
        Determine correlation between attributes from the real and fake dataset using a given metric.
        All metrics from scipy.stats are available.

        Args:
            target_col (str): Column to use for predictions with estimators.
            target_type (str, optional): Type of task to perform on the target_col. Can be either "class" for
                classification or "regr" for regression. Defaults to "class".
            metric (str | None, optional): Overwrites self.metric. Scoring metric for the attributes.
                By default Pearson's r is used. Alternatives include Spearman rho (scipy.stats.spearmanr) or
                Kendall Tau (scipy.stats.kendalltau). Defaults to None.
            n_samples_distance (int, optional): The number of samples to take for the row distance. See
                documentation of ``tableEvaluator.row_distance`` for details. Defaults to 20000.
            kfold (bool, optional): Use a 5-fold CV for the ML estimators if set to True. Train/Test on 80%/20%
                of the data if set to False. Defaults to False.
            notebook (bool, optional): Better visualization of the results in a python notebook. Defaults to False.
            verbose (bool | None, optional): Whether to print verbose logging. Defaults to None.
            return_outputs (bool, optional): Will omit printing and instead return a dictionary with all results.
                Defaults to False.

        Returns:
            Dict: A dictionary containing evaluation results if return_outputs is True, otherwise None.
        """
        self.target_type = target_type
        self.verbose = verbose if verbose is not None else self.verbose
        self.comparison_metric = (
            getattr(stats, metric)
            if isinstance(metric, str)
            else metric
            if metric is not None
            else self.comparison_metric
        )

        warnings.filterwarnings(action='ignore', category=ConvergenceWarning)
        pd.options.display.float_format = '{:,.4f}'.format

        basic_statistical = self.basic_statistical_evaluation()
        correlation_correlation = self.correlation_correlation()
        column_correlation = self.column_correlations()
        estimators = self.estimator_evaluation(target_col=target_col, target_type=target_type, kfold=kfold)
        nearest_neighbor = self.row_distance(n_samples=n_samples_distance)

        miscellaneous_dict = {
            'Column Correlation Distance RMSE': self.correlation_distance(how='rmse'),
            'Column Correlation distance MAE': self.correlation_distance(how='mae'),
        }

        miscellaneous = pd.DataFrame(
            {'Result': list(miscellaneous_dict.values())},
            index=list(miscellaneous_dict.keys()),
        )

        privacy_metrics_dict = {
            'Duplicate rows between sets (real/fake)': self.get_duplicates(),
            'nearest neighbor mean': nearest_neighbor[0],
            'nearest neighbor std': nearest_neighbor[1],
        }

        privacy_report = EvaluationResult(
            name='Privacy Results',
            content=dict_to_df(privacy_metrics_dict),
        )

        privacy_tab = [privacy_report]

        efficacy_title = (
            'Classifier F1-scores and their Jaccard similarities:'
            if self.target_type == 'class'
            else '\nRegressor MSE-scores'
        )

        ml_efficacy_tab = [EvaluationResult(name=efficacy_title, content=self.estimators_scores)]

        js_df = js_distance_df(self.real, self.fake, self.numerical_columns)

        statistical_tab = [
            EvaluationResult(
                name='Jensen-Shannon distance',
                content=js_df,
                appendix=f'### Mean: {js_df.js_distance.mean(): .3f}',
            ),
            EvaluationResult(
                name='Kolmogorov-Smirnov statistic',
                content=kolmogorov_smirnov_df(self.real, self.fake, self.numerical_columns),
            ),
        ]

        all_results_dict = {
            'Basic statistics': basic_statistical,
            'Correlation column correlations': correlation_correlation,
            'Mean Correlation between fake and real columns': column_correlation,
            f'{"1 - MAPE Estimator results" if self.target_type == "class" else "Correlation RMSE"}': estimators,
        }
        all_results_dict['Similarity Score'] = np.mean(list(all_results_dict.values()))

        summary = EvaluationResult(name='Overview Results', content=dict_to_df(all_results_dict))

        overview_tab = [
            summary,
        ]

        if return_outputs:
            all_results = [
                *overview_tab,
                *ml_efficacy_tab,
                *privacy_tab,
                *statistical_tab,
            ]

            all_results = {x.name: x.content.to_dict(orient='index') for x in all_results}

            return all_results

        if notebook:
            visualize_notebook(
                self,
                overview=overview_tab,
                privacy_metrics=privacy_tab,
                ml_efficacy=ml_efficacy_tab,
                statistical=statistical_tab,
            )

        else:
            print(f'\n{efficacy_title}:')
            print(self.estimators_scores.to_string())

            print('\nPrivacy results:')
            print(privacy_report.content.to_string())

            print('\nMiscellaneous results:')
            print(miscellaneous.to_string())

            print('\nResults:')
            print(summary.content.to_string())



================================================
File: table_evaluator/types.py
================================================
from pathlib import Path

PathLike = str | Path



================================================
File: table_evaluator/utils.py
================================================
from typing import Any, Dict, List, Optional, Tuple

import pandas as pd


def load_data(
    path_real: str, path_fake: str, real_sep: str = ',', fake_sep: str = ',', drop_columns: Optional[List] = None
) -> Tuple[pd.DataFrame, pd.DataFrame]:
    """
    Load data from a real and synthetic data csv. This function makes sure that the loaded data has the same columns
    with the same data types.

    :param path_real: string path to csv with real data
    :param path_fake: string path to csv with real data
    :param real_sep: separator of the real csv
    :param fake_sep: separator of the fake csv
    :param drop_columns: names of columns to drop.
    :return: Tuple with DataFrame containing the real data and DataFrame containing the synthetic data.
    """
    real = pd.read_csv(path_real, sep=real_sep, low_memory=False)
    fake = pd.read_csv(path_fake, sep=fake_sep, low_memory=False)
    if set(fake.columns.tolist()).issubset(set(real.columns.tolist())):
        real = real[fake.columns]
    elif drop_columns is not None:
        real = real.drop(column=drop_columns)
        try:
            fake = fake.drop(columns=drop_columns)
        except KeyError:
            ValueError(f'Some of {drop_columns} were not found in the fake dataset: {fake.columns}.')
        if len(fake.columns.tolist()) != len(real.columns.tolist()):
            raise ValueError(
                f'Real and fake do not have same nr of columns: {len(fake.columns)} and {len(real.columns)}'
            )
        fake.columns = real.columns
    else:
        fake.columns = real.columns

    for col in fake.columns:
        fake[col] = fake[col].astype(real[col].dtype)
    return real, fake


def dict_to_df(data: Dict[str, Any]):
    return pd.DataFrame({'result': list(data.values())}, index=list(data.keys()))



================================================
File: tests/__init__.py
================================================



================================================
File: tests/create_test_data.ipynb
================================================
# Jupyter notebook converted to Python script.

import sys

sys.path.append('..')
from pathlib import Path

import dython
import pandas as pd
from dython.nominal import associations, numerical_encoding

from table_evaluator import *

assert dython.__version__ == '0.7.3', 'Dython version should be version 0.7.3'

pd.__version__
# Output:
#   '2.0.3'

"""
### Set nominal columns and load data
"""

nominal_cols = ['trans_type', 'trans_operation', 'trans_k_symbol']
data_folder = Path('../data')
test_data_folder = Path('../data/tests')

real = pd.read_csv(data_folder/'real_test_sample.csv')
fake = pd.read_csv(data_folder/'fake_test_sample.csv')

"""
### Create numerical encodings
"""

real_num_enc = numerical_encoding(real, nominal_columns=nominal_cols)
fake_num_enc = numerical_encoding(fake, nominal_columns=nominal_cols)

real_num_enc.to_parquet(test_data_folder/'real_test_sample_numerical_encoded.parquet')
fake_num_enc.to_parquet(test_data_folder/'fake_test_sample_numerical_encoded.parquet')

"""
### Create Associations
"""

real_assoc = associations(real, nominal_columns=nominal_cols, compute_only=True)['corr']
real_assoc_theil = associations(real, nominal_columns=nominal_cols, nom_nom_assoc='theil', compute_only=True)['corr']

fake_assoc = associations(fake, nominal_columns=nominal_cols, compute_only=True)['corr']
fake_assoc_theil = associations(fake, nominal_columns=nominal_cols, nom_nom_assoc='theil', compute_only=True)['corr']

pd.read_parquet(test_data_folder/'real_associations.parquet')
# Output:
#                        trans_id  account_id  trans_amount  balance_after_trans  \

#   trans_id             1.000000    0.522830     -0.220340             0.028876   

#   account_id           0.522830    1.000000      0.025829             0.108967   

#   trans_amount        -0.220340    0.025829      1.000000             0.394746   

#   balance_after_trans  0.028876    0.108967      0.394746             1.000000   

#   trans_type           0.474287    0.048279      0.193900             0.124192   

#   trans_operation      0.835292    0.088169      0.531158             0.230062   

#   trans_k_symbol       0.841451    0.164624      0.494940             0.178185   

#   trans_date           0.054574    0.052132      0.016639             0.123935   

#   

#                        trans_type  trans_operation  trans_k_symbol  trans_date  

#   trans_id               0.474287         0.835292        0.841451    0.054574  

#   account_id             0.048279         0.088169        0.164624    0.052132  

#   trans_amount           0.193900         0.531158        0.494940    0.016639  

#   balance_after_trans    0.124192         0.230062        0.178185    0.123935  

#   trans_type             1.000000         0.709220        0.516440    0.031496  

#   trans_operation        0.709220         1.000000        0.663146    0.093090  

#   trans_k_symbol         0.516440         0.663146        1.000000    0.107945  

#   trans_date             0.031496         0.093090        0.107945    1.000000  

# Give the index a name, so we can set this column as index on loading the csv
# for i in [real_assoc, real_assoc_theil, fake_assoc, fake_assoc_theil]:
#     i.index.rename('index', inplace=True)

real_assoc.to_parquet(test_data_folder/'real_associations.parquet')
real_assoc_theil.to_parquet(test_data_folder/'real_associations_theil.parquet')

fake_assoc.to_parquet(test_data_folder/'fake_associations.parquet')
fake_assoc_theil.to_parquet(test_data_folder/'fake_associations_theil.parquet')

pd.read_parquet(test_data_folder/'real_associations_theil.parquet')
# Output:
#                        trans_id  account_id  trans_amount  balance_after_trans  \

#   trans_id             1.000000    0.522830     -0.220340             0.028876   

#   account_id           0.522830    1.000000      0.025829             0.108967   

#   trans_amount        -0.220340    0.025829      1.000000             0.394746   

#   balance_after_trans  0.028876    0.108967      0.394746             1.000000   

#   trans_type           0.474287    0.048279      0.193900             0.124192   

#   trans_operation      0.835292    0.088169      0.531158             0.230062   

#   trans_k_symbol       0.841451    0.164624      0.494940             0.178185   

#   trans_date           0.054574    0.052132      0.016639             0.123935   

#   

#                        trans_type  trans_operation  trans_k_symbol  trans_date  

#   trans_id               0.474287         0.835292        0.841451    0.054574  

#   account_id             0.048279         0.088169        0.164624    0.052132  

#   trans_amount           0.193900         0.531158        0.494940    0.016639  

#   balance_after_trans    0.124192         0.230062        0.178185    0.123935  

#   trans_type             1.000000         0.904474        0.482048    0.031496  

#   trans_operation        0.459150         1.000000        0.604179    0.093090  

#   trans_k_symbol         0.250205         0.617749        1.000000    0.107945  

#   trans_date             0.031496         0.093090        0.107945    1.000000  



================================================
File: tests/metrics_test.py
================================================
from pathlib import Path

import numpy as np
import pandas as pd
from dython.nominal import associations, numerical_encoding

from table_evaluator.metrics import (
    column_correlations,
    euclidean_distance,
    jensenshannon_distance,
    mean_absolute_error,
    mean_absolute_percentage_error,
    rmse,
)
from table_evaluator.utils import load_data

data_folder = Path('data')
test_data_folder = Path('data/tests')
real, fake = load_data(data_folder / 'real_test_sample.csv', data_folder / 'fake_test_sample.csv')
cat_cols = ['trans_type', 'trans_operation', 'trans_k_symbol']


def test_mape():
    assert mean_absolute_percentage_error([1], [2]) == 1.0


def test_mean_absolute_error():
    assert mean_absolute_error([1, 1], [2, 2]) == 1.0


def test_euclidean_distance():
    np.testing.assert_almost_equal(euclidean_distance([0, 0], [1, 1]), 1.41421356)


def test_rmse():
    assert rmse([0, 0], [2, 2]) == 2.0


def test_column_correlation():
    column_correlations(real, fake, cat_cols)


def test_associations():
    """
    Tests that check wether the dython associations are still computed as is expected.
    """
    # load test data
    real_assoc = pd.read_parquet(test_data_folder / 'real_associations.parquet')
    real_assoc_theil = pd.read_parquet(test_data_folder / 'real_associations_theil.parquet')
    fake_assoc = pd.read_parquet(test_data_folder / 'fake_associations.parquet')
    fake_assoc_theil = pd.read_parquet(test_data_folder / 'fake_associations_theil.parquet')

    # Assert equality with saved data
    pd.testing.assert_frame_equal(real_assoc, associations(real, nominal_columns=cat_cols, compute_only=True)['corr'])
    pd.testing.assert_frame_equal(
        real_assoc_theil, associations(real, nominal_columns=cat_cols, nom_nom_assoc='theil', compute_only=True)['corr']
    )
    pd.testing.assert_frame_equal(fake_assoc, associations(fake, nominal_columns=cat_cols, compute_only=True)['corr'])
    pd.testing.assert_frame_equal(
        fake_assoc_theil, associations(fake, nominal_columns=cat_cols, nom_nom_assoc='theil', compute_only=True)['corr']
    )


def test_numerical_encoding():
    """
    Tests that check wether the dython numerical_encoding are still computed as is expected.
    """
    num_encoding = numerical_encoding(real, nominal_columns=cat_cols)
    stored_encoding = pd.read_parquet(test_data_folder / 'real_test_sample_numerical_encoded.parquet')
    pd.testing.assert_frame_equal(num_encoding, stored_encoding)

    num_encoding = numerical_encoding(fake, nominal_columns=cat_cols)
    stored_encoding = pd.read_parquet(test_data_folder / 'fake_test_sample_numerical_encoded.parquet')
    pd.testing.assert_frame_equal(num_encoding, stored_encoding)


def test_jensenshannon_distance():
    # create some sample data
    colname = 'age'
    real_col = pd.Series([20, 25, 30, 35, 40])
    fake_col = pd.Series([22, 27, 32, 37, 42])

    # call the function and get the result
    result = jensenshannon_distance(colname, real_col, fake_col)

    # check that the result is a dictionary with the correct keys and values
    assert isinstance(result, dict)
    assert result['col_name'] == colname
    assert result['js_distance'] == 0.2736453208486386  # this is the expected JS distance for these data



================================================
File: tests/sanity_check_example.ipynb
================================================
# Jupyter notebook converted to Python script.

%load_ext autoreload
%autoreload 2
%matplotlib inline


import sys

sys.path.append('..')
from table_evaluator import TableEvaluator
from table_evaluator.utils import load_data

real, fake = load_data('../data/real_test_sample.csv', '../data/fake_test_sample.csv')
cat_cols = ['trans_type', 'trans_operation', 'trans_k_symbol']


real.head()
# Output:
#      trans_id  account_id  trans_amount  balance_after_trans  trans_type  \

#   0    951892        3245        3878.0              13680.0  WITHDRAWAL   

#   1   3547680         515          65.9              14898.6      CREDIT   

#   2   1187131        4066       32245.0              57995.5      CREDIT   

#   3    531421        1811        3990.8              23324.9  WITHDRAWAL   

#   4     37081         119       12100.0              36580.0  WITHDRAWAL   

#   

#                 trans_operation     trans_k_symbol  trans_date  

#   0    REMITTANCE_TO_OTHER_BANK          HOUSEHOLD        2165  

#   1                     UNKNOWN  INTEREST_CREDITED        2006  

#   2  COLLECTION_FROM_OTHER_BANK            UNKNOWN        2139  

#   3    REMITTANCE_TO_OTHER_BANK       LOAN_PAYMENT         892  

#   4          WITHDRAWAL_IN_CASH            UNKNOWN         654  

fake.head()
# Output:
#      trans_id  account_id  trans_amount  balance_after_trans  trans_type  \

#   0    911598        3001       13619.0              92079.0      CREDIT   

#   1    377371        1042        4174.0              32470.0  WITHDRAWAL   

#   2    970113        3225         274.0              57608.0  WITHDRAWAL   

#   3    450090        1489         301.0              36258.0      CREDIT   

#   4   1120409        3634        6303.0              50975.0  WITHDRAWAL   

#   

#                 trans_operation trans_k_symbol  trans_date  

#   0  COLLECTION_FROM_OTHER_BANK        UNKNOWN        1885  

#   1    REMITTANCE_TO_OTHER_BANK      HOUSEHOLD        1483  

#   2          WITHDRAWAL_IN_CASH        UNKNOWN        1855  

#   3              CREDIT_IN_CASH        UNKNOWN         885  

#   4    REMITTANCE_TO_OTHER_BANK      HOUSEHOLD        1211  

table_evaluator = TableEvaluator(real, fake)

"""
Do Visual Evaluation
"""

table_evaluator.visual_evaluation()
# Output:
#   <Figure size 1000x500 with 2 Axes>
#   <Figure size 1600x1200 with 8 Axes>
#   /Users/tn14gn/Developer/table-evaluator/table_evaluator/table_evaluator.py:271: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.

#     ax.set_xticklabels(axes[i].get_xticklabels(), rotation="vertical")

#   /Users/tn14gn/Developer/table-evaluator/table_evaluator/table_evaluator.py:271: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.

#     ax.set_xticklabels(axes[i].get_xticklabels(), rotation="vertical")

#   /Users/tn14gn/Developer/table-evaluator/table_evaluator/table_evaluator.py:271: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.

#     ax.set_xticklabels(axes[i].get_xticklabels(), rotation="vertical")

#   <Figure size 1600x1800 with 9 Axes>
#   <Figure size 640x480 with 0 Axes>
#   <Figure size 1200x600 with 2 Axes>

len(real)
# Output:
#   1000

table_evaluator.get_copies(return_len=True)
# Output:
#   0

table_evaluator.get_duplicates()
# Output:
#   (0, 0)

table_evaluator.evaluate(target_col='trans_type')
# Output:
#   /Users/tn14gn/.pyenv/versions/3.12.5/envs/table-evaluator/lib/python3.12/site-packages/sklearn/linear_model/_logistic.py:1247: FutureWarning: 'multi_class' was deprecated in version 1.5 and will be removed in 1.7. From then on, it will always use 'multinomial'. Leave it to its default value to avoid this warning.

#     warnings.warn(

#   /Users/tn14gn/.pyenv/versions/3.12.5/envs/table-evaluator/lib/python3.12/site-packages/sklearn/linear_model/_logistic.py:1247: FutureWarning: 'multi_class' was deprecated in version 1.5 and will be removed in 1.7. From then on, it will always use 'multinomial'. Leave it to its default value to avoid this warning.

#     warnings.warn(

#   IPython not installed.

#   

#   Classifier F1-scores and their Jaccard similarities::

#                                f1_real  f1_fake  jaccard_similarity

#   index                                                            

#   DecisionTreeClassifier_fake   0.9650   0.9700              0.9324

#   DecisionTreeClassifier_real   0.9700   0.9350              0.8779

#   LogisticRegression_fake       0.8100   0.8050              0.9048

#   LogisticRegression_real       0.8300   0.8150              0.9324

#   MLPClassifier_fake            0.6650   0.3450              0.4085

#   MLPClassifier_real            0.6300   0.3300              0.4134

#   RandomForestClassifier_fake   0.9600   0.9600              0.9802

#   RandomForestClassifier_real   0.9750   0.9750              1.0000

#   

#   Privacy results:

#                                            result

#   Duplicate rows between sets (real/fake)  (0, 0)

#   nearest neighbor mean                    0.5655

#   nearest neighbor std                     0.3726

#   

#   Miscellaneous results:

#                                     Result

#   Column Correlation Distance RMSE  0.0399

#   Column Correlation distance MAE   0.0296

#   

#   Results:

#                                                   result

#   Basic statistics                                0.9940

#   Correlation column correlations                 0.9904

#   Mean Correlation between fake and real columns  0.9566

#   1 - MAPE Estimator results                      0.8721

#   Similarity Score                                0.9533




================================================
File: tests/test_table_evaluator.py
================================================
from unittest.mock import MagicMock, patch

import numpy as np
import pandas as pd
import pytest
from pandas.api.types import is_numeric_dtype

from table_evaluator.table_evaluator import TableEvaluator

# Ensure consistent random state
np.random.seed(42)


@pytest.fixture
def sample_data() -> tuple[pd.DataFrame, pd.DataFrame]:
    real_data = pd.DataFrame(
        {
            'A': [1, 2, 3, 4, 5],
            'B': ['a', 'b', 'c', 'd', 'e'],
            'C': [0.1, 0.2, 0.3, 0.4, 0.5],
            'D': [True, False, True, False, True],
        }
    )
    fake_data = pd.DataFrame(
        {
            'A': [1, 2, 3, 4, 5],
            'B': ['a', 'b', 'c', 'd', 'f'],
            'C': [0.15, 0.25, 0.35, 0.45, 0.55],
            'D': [True, True, False, False, True],
        }
    )

    return real_data, fake_data


@pytest.fixture
def large_sample_data() -> tuple[pd.DataFrame, pd.DataFrame]:
    np.random.seed(42)
    real_data = pd.DataFrame(
        {
            'A': np.random.randint(0, 100, 1000),
            'B': np.random.choice(['x', 'y', 'z'], 1000),
            'C': np.random.rand(1000),
            'D': np.random.choice([True, False], 1000),
        }
    )
    fake_data = pd.DataFrame(
        {
            'A': np.random.randint(0, 100, 1000),
            'B': np.random.choice(['x', 'y', 'z'], 1000),
            'C': np.random.rand(1000),
            'D': np.random.choice([True, False], 1000),
        }
    )
    return real_data, fake_data


def test_initialization(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake, infer_types=False)
    real['D'] = real['D'].astype(str)
    fake['D'] = fake['D'].astype(str)
    pd.testing.assert_frame_equal(evaluator.real, real)
    pd.testing.assert_frame_equal(evaluator.fake, fake)
    assert evaluator.n_samples == 5
    assert set(evaluator.categorical_columns) == {'B', 'D'}
    assert set(evaluator.numerical_columns) == {'A', 'C'}


def test_initialization_with_custom_columns(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake, cat_cols=['B'], unique_thresh=10)
    assert evaluator.categorical_columns == ['B']
    assert set(evaluator.numerical_columns) == {'A', 'C', 'D'}


def test_plot_mean_std(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('table_evaluator.table_evaluator.plot_mean_std') as mock_plot:
        evaluator.plot_mean_std(show=False)
        mock_plot.assert_called_once()


def test_plot_cumsums(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('matplotlib.pyplot.subplots', return_value=(MagicMock(), MagicMock())) as mock_subplots, patch(
        'table_evaluator.table_evaluator.cdf'
    ) as mock_cdf:
        evaluator.plot_cumsums(show=False)
        mock_subplots.assert_called_once()
        assert mock_cdf.call_count == 4  # One call for each column


def test_plot_distributions(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('matplotlib.pyplot.subplots', return_value=(MagicMock(), MagicMock())) as mock_subplots, patch(
        'seaborn.histplot'
    ) as mock_histplot, patch('seaborn.barplot') as mock_barplot:
        evaluator.plot_distributions(show=False)
        mock_subplots.assert_called_once()
        assert mock_histplot.call_count == 2  # For numerical columns
        assert mock_barplot.call_count == 2  # For categorical columns


def test_plot_correlation_difference(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('table_evaluator.table_evaluator.plot_correlation_difference') as mock_plot:
        evaluator.plot_correlation_difference(show=False)
        mock_plot.assert_called_once()


def test_plot_pca(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('matplotlib.pyplot.subplots', return_value=(MagicMock(), MagicMock())) as mock_subplots, patch(
        'seaborn.scatterplot'
    ) as mock_scatterplot, patch('table_evaluator.table_evaluator.PCA') as mock_pca:
        mock_pca().fit_transform.return_value = np.random.rand(5, 2)
        evaluator.plot_pca(show=False)
        mock_subplots.assert_called_once()
        assert mock_scatterplot.call_count == 2


def test_correlation_distance(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('table_evaluator.table_evaluator.euclidean_distance') as mock_distance:
        mock_distance.return_value = 0.5
        distance = evaluator.correlation_distance(how='euclidean')
        assert distance == 0.5
        mock_distance.assert_called_once()


def test_get_copies(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, real, verbose=True)

    copies = evaluator.get_copies()
    assert isinstance(copies, pd.DataFrame)
    assert copies.shape[0] == 5  # 4 rows are identical between real and fake

    copy_count = evaluator.get_copies(return_len=True)
    assert isinstance(copy_count, int)
    assert copy_count == 5


def test_get_copies_no_matches(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake, verbose=True)

    copies = evaluator.get_copies()
    assert isinstance(copies, pd.DataFrame)
    assert copies.shape[0] == 0  # 4 rows are identical between real and fake

    copy_count = evaluator.get_copies(return_len=True)
    assert isinstance(copy_count, int)
    assert copy_count == 0


def test_get_duplicates(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    duplicates = evaluator.get_duplicates(return_values=True)
    assert isinstance(duplicates, tuple)
    assert isinstance(duplicates[0], pd.DataFrame)
    assert isinstance(duplicates[1], pd.DataFrame)
    assert duplicates[0].shape[0] == 0  # No duplicates in the real data
    assert duplicates[1].shape[0] == 0  # No duplicates in the fake data

    duplicate_counts = evaluator.get_duplicates(return_values=False)
    assert isinstance(duplicate_counts, tuple)
    assert isinstance(duplicate_counts[0], int)
    assert isinstance(duplicate_counts[1], int)
    assert duplicate_counts == (0, 0)


def test_pca_correlation(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('table_evaluator.table_evaluator.PCA') as mock_pca:
        mock_pca().explained_variance_ = np.array([0.5, 0.3, 0.2])
        correlation = evaluator.pca_correlation()
        assert isinstance(correlation, float)
        assert 0 <= correlation <= 1

    with patch('table_evaluator.table_evaluator.PCA') as mock_pca, patch.object(
        evaluator, 'comparison_metric', return_value=(0.8, 0.1, 0.1)
    ):
        mock_pca().explained_variance_ = np.array([0.5, 0.3, 0.2])
        correlation = evaluator.pca_correlation(lingress=True)
        assert isinstance(correlation, float)
        assert -1 <= correlation <= 1


def test_basic_statistical_evaluation(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('scipy.stats.spearmanr') as mock_spearmanr:
        mock_spearmanr.return_value = (0.8, 0.1)
        correlation = evaluator.basic_statistical_evaluation()
        assert correlation == 0.8


def test_correlation_correlation(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('table_evaluator.table_evaluator.associations') as mock_associations:
        mock_associations.return_value = {'corr': pd.DataFrame(np.random.rand(4, 4))}
        correlation = evaluator.correlation_correlation()
        assert isinstance(correlation, float)


def test_convert_numerical(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    real_num, fake_num = evaluator.convert_numerical()
    print(real_num.dtypes)
    print(fake_num.dtypes)
    assert all(is_numeric_dtype(real_num[c]) for c in real_num.columns)
    assert all(is_numeric_dtype(fake_num[c]) for c in fake_num.columns)


def test_convert_numerical_one_hot(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake, verbose=True)

    real_oh, fake_oh = evaluator.convert_numerical_one_hot()
    assert real_oh.shape[1] > real.shape[1]
    assert fake_oh.shape[1] > fake.shape[1]
    print(real_oh.dtypes)
    print(fake_oh.dtypes)
    assert (real_oh.dtypes == np.number).all()
    assert (fake_oh.dtypes == np.number).all()


def test_estimator_evaluation(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake, verbose=True)

    with patch('table_evaluator.table_evaluator.KFold') as mock_kfold, patch(
        'table_evaluator.table_evaluator.RandomForestClassifier'
    ) as mock_rf, patch('table_evaluator.table_evaluator.LogisticRegression') as mock_lr, patch(
        'table_evaluator.table_evaluator.DecisionTreeClassifier'
    ) as mock_dt, patch('table_evaluator.table_evaluator.MLPClassifier') as mock_mlp, patch(
        'table_evaluator.table_evaluator.mean_absolute_percentage_error'
    ) as mock_mape:
        mock_kfold().split.return_value = [(np.array([0, 1, 2]), np.array([3, 4]))]
        mock_rf().fit.return_value = mock_rf()
        mock_lr().fit.return_value = mock_lr()
        mock_dt().fit.return_value = mock_dt()
        mock_mlp().fit.return_value = mock_mlp()

        mock_rf().predict.return_value = np.array([0, 1])
        mock_lr().predict.return_value = np.array([0, 1])
        mock_dt().predict.return_value = np.array([0, 1])
        mock_mlp().predict.return_value = np.array([0, 1])
        mock_mape.return_value = 0.5

        result = evaluator.estimator_evaluation(target_col='A', target_type='class')
        assert isinstance(result, float)
        assert 0 <= result <= 1


def test_row_distance(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    mean, std = evaluator.row_distance(n_samples=5)
    assert isinstance(mean, float)
    assert isinstance(std, float)


def test_column_correlations(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch('table_evaluator.table_evaluator.column_correlations') as mock_column_correlations:
        mock_column_correlations.return_value = 0.75
        result = evaluator.column_correlations()
        assert result == 0.75


def test_evaluate(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch.object(TableEvaluator, 'basic_statistical_evaluation', return_value=0.8), patch.object(
        TableEvaluator, 'correlation_correlation', return_value=0.7
    ), patch.object(TableEvaluator, 'column_correlations', return_value=0.75), patch.object(
        TableEvaluator, 'row_distance', return_value=(0.5, 0.1)
    ):
        results = evaluator.evaluate('A', target_type='class', return_outputs=True)
        assert isinstance(results, dict)
        assert 'Overview Results' in results
        assert 'Privacy Results' in results


def test_visual_evaluation(sample_data):
    real, fake = sample_data
    evaluator = TableEvaluator(real, fake)

    with patch.object(evaluator, 'plot_mean_std') as mock_mean_std, patch.object(
        evaluator, 'plot_cumsums'
    ) as mock_cumsums, patch.object(evaluator, 'plot_distributions') as mock_distributions, patch.object(
        evaluator, 'plot_correlation_difference'
    ) as mock_correlation_difference, patch.object(evaluator, 'plot_pca') as mock_pca:
        evaluator.visual_evaluation(show=False)

        mock_mean_std.assert_called_once()
        mock_cumsums.assert_called_once()
        mock_distributions.assert_called_once()
        mock_correlation_difference.assert_called_once()
        mock_pca.assert_called_once()


def test_error_handling():
    with pytest.raises(ValueError):
        TableEvaluator(pd.DataFrame({'A': [1, 2, 3]}), pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]}))

    with pytest.raises(ValueError):
        real = pd.DataFrame({'A': [1, 2, 3], 'B': ['a', 'b', 'c']})
        fake = pd.DataFrame({'A': [1, 2, 3], 'B': ['a', 'b', 'c']})
        evaluator = TableEvaluator(real, fake)
        evaluator.estimator_evaluation(target_col='A', target_type='invalid_type')


if __name__ == '__main__':
    pytest.main()



================================================
File: tests/test_utils.py
================================================
import pandas as pd

from table_evaluator.utils import dict_to_df, load_data


def test_load_data(mocker):
    # Test loading real and fake data with matching columns
    real_data = pd.DataFrame({'A': [1, 2], 'B': [3, 4]})
    fake_data = pd.DataFrame({'A': [5, 6], 'B': [7, 8]})

    # Mocking pd.read_csv
    mocker.patch(
        'pandas.read_csv', side_effect=lambda path, sep, low_memory: real_data if 'real' in path else fake_data
    )

    real, fake = load_data('path/to/real.csv', 'path/to/fake.csv')

    assert real.equals(real_data)
    assert fake.equals(fake_data)


def test_dict_to_df():
    # Test converting a dictionary to a DataFrame
    data = {'key1': 1, 'key2': 2}
    expected_df = pd.DataFrame({'result': [1, 2]}, index=['key1', 'key2'])

    result_df = dict_to_df(data)

    pd.testing.assert_frame_equal(result_df, expected_df)



================================================
File: .github/ISSUE_TEMPLATE/bug_report.yaml
================================================
name: Bug Report
description: File a bug report.
title: "[Bug]: "
labels: ["bug", "triage"]
assignees:
  - baukebrenninkmeijer
body:
  - type: markdown
    attributes:
      value: |
        Thanks for taking the time to fill out this bug report!
  - type: textarea
    id: what-happened
    attributes:
      label: What happened?
      description: Also tell us, what did you expect to happen? Please make sure you are using the latest software.
      placeholder: Tell us what you see!
      # value: "A bug happened!"
    validations:
      required: true
  - type: textarea
    id: version
    attributes:
      label: Version
      description: What version of our software are you running?
      placeholder: Please add versions of matplotlib, seaborn, pandas and dython.
      value: |
        Please run the following commands:
        ```
        import sys, dython, matplotlib, seaborn, table_evaluator
        print(sys.version_info)
        print(dython.__version__)
        print(matplotlib.__version__)
        print(seaborn.__version__)
        print(table_evaluator.__version__)
        ```
    validations:
      required: true
  - type: textarea
    id: errormessages
    attributes:
      label: Relevant log output or error messages
      description: Please copy and paste any relevant log output or error messages. This will be automatically formatted into code, so no need for backticks.
      render: shell



================================================
File: .github/ISSUE_TEMPLATE/feature_request.md
================================================
---
name: Feature request
about: Suggest an idea for this project
title: '[FR]: '
labels: 'feature-request'
assignees: 'baukebrenninkmeijer'

---

**Is your feature request related to a problem? Please describe.**
A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]

**Describe the solution you'd like**
A clear and concise description of what you want to happen.

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.

**Additional context**
Add any other context or screenshots about the feature request here.



================================================
File: .github/workflows/documentation-publish.yml
================================================
name: Publish documentation

on:
  release:
    types: [published]
  push:
    branches:
      - master
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    # - uses: ammaraskar/sphinx-action@master
    #   with:
    #     docs-folder: docs
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12' 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry lock
        poetry install
        pip install .
    - name: Build documentation
      run: |
        sphinx-build -M html docs/source docs/build
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/build/html



================================================
File: .github/workflows/python-publish.yml
================================================
# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  # release:
  #   types: [published]
  push:
    branches:
      - master

jobs:
  deploy:
    name: Build and publish Python 🐍 distributions 📦 to PyPI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        pip install poetry
        poetry lock
        poetry install
    - name: Build package
      run: poetry build
    - name: Publish package
      # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@v1.9.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true



================================================
File: .github/workflows/run-tests.yml
================================================
name: Run tests
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    name: Python ${{ matrix.python-version }} sample
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: install_dependencies
      run: |
        # sudo apt install -y gcc g++ gfortran libopenblas-dev liblapack-dev pkg-config
        pip install poetry pytest
        poetry lock
        poetry install
        pip install .
    - name: Run tests
      run: |
        pytest tests


